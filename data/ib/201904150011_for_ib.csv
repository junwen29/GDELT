eyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgImRldGFpbiIsICJkZXRhaW4iLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIklORE9ORVNJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siNC4zNDM5IiwgIjk2LjAzMzgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cubWFsYXltYWlsLmNvbS9uZXdzL21hbGF5c2lhLzIwMTkvMDQvMTQvZm91ci1jaGlsZHJlbi1hbW9uZy0xMDAtZm9yZWlnbmVycy1kZXRhaW5lZC1pbi1zaGFoLWFsYW0vMTc0MzIzNiIsICJjb250ZW50IjogIlNIQUggQUxBTSwgQXByaWwgMTQgXHUyMDE0IEZvdXIgY2hpbGRyZW4gd2VyZSBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBieSB0aGUgU2VsYW5nb3IgSW1taWdyYXRpb24gRGVwYXJ0bWVudCBpbiBhIGZvdXItaG91ciBpbnRlZ3JhdGVkIG9wZXJhdGlvbiBjb25kdWN0ZWQgYXJvdW5kIFNoYWggQWxhbSB5ZXN0ZXJkYXkuICBJdHMgZGlyZWN0b3IsIE1vaGFtYWQgU2h1a3JpIE5hd2ksIHNhaWQgdGhlIG9wZXJhdGlvbiB3aGljaCBiZWdhbiBhcm91bmQgMTIgbWlkbmlnaHQgYW5kIHBhcnRpY2lwYXRlZCBieSA5NiBwZXJzb25uZWwgd2FzIGNvbmNlbnRyYXRlZCBvbiBmb3JlaWduIHdvcmtlcnNcdTIwMTkgbGl2aW5nIHF1YXJ0ZXJzIGluIFBhZGFuZyBKYXdhIGFuZCBLb3RhIEtlbXVuaW5nIGFyZWFzLiAgSGUgc2FpZCBkdXJpbmcgdGhlIG9wZXJhdGlvbiA0MzAgZm9yZWlnbmVycyB3ZXJlIHF1ZXN0aW9uZWQgYW5kIG9mIHRoZSB0b3RhbCA5NCBtZW4sIHR3byB3b21lbiBhbmQgZm91ciBjaGlsZHJlbiB3ZXJlIGRldGFpbmVkIGZvciB2YXJpb3VzIG9mZmVuY2VzLiAgXHUyMDFjVGhlIGZvcmVpZ25lcnMgYWdlZCBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQgYXJlIGZyb20gSW5kb25lc2lhLCBCYW5nbGFkZXNoLCBNeWFubWFyLCBJbmRpYSwgTmVwYWwsIFBha2lzdGFuIGFuZCBWaWV0bmFtLiAgXHUyMDFjVGhlIGNoaWxkcmVuLCB0aHJlZSBib3lzIGFuZCBhIGdpcmwgYWdlZCBiZXR3ZWVuIGZvdXIgbW9udGhzIGFuZCB0d28geWVhcnMgYXJlIEluZG9uZXNpYW5zLFx1MjAxZCBoZSBzYWlkIGluIGEgc3RhdGVtZW50IGhlcmUgdG9kYXkuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTAiLCAidGl0bGUiOiAiRm91ciBjaGlsZHJlbiBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBpbiBTaGFoIEFsYW0gfCBNYWxheSBNYWlsIn0KCg==eyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgImRldGFpbiIsICJkZXRhaW4iLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIklORE9ORVNJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siNC4zNDM5IiwgIjk2LjAzMzgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cubWFsYXltYWlsLmNvbS9uZXdzL21hbGF5c2lhLzIwMTkvMDQvMTQvZm91ci1jaGlsZHJlbi1hbW9uZy0xMDAtZm9yZWlnbmVycy1kZXRhaW5lZC1pbi1zaGFoLWFsYW0vMTc0MzIzNiIsICJjb250ZW50IjogIlNIQUggQUxBTSwgQXByaWwgMTQgXHUyMDE0IEZvdXIgY2hpbGRyZW4gd2VyZSBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBieSB0aGUgU2VsYW5nb3IgSW1taWdyYXRpb24gRGVwYXJ0bWVudCBpbiBhIGZvdXItaG91ciBpbnRlZ3JhdGVkIG9wZXJhdGlvbiBjb25kdWN0ZWQgYXJvdW5kIFNoYWggQWxhbSB5ZXN0ZXJkYXkuICBJdHMgZGlyZWN0b3IsIE1vaGFtYWQgU2h1a3JpIE5hd2ksIHNhaWQgdGhlIG9wZXJhdGlvbiB3aGljaCBiZWdhbiBhcm91bmQgMTIgbWlkbmlnaHQgYW5kIHBhcnRpY2lwYXRlZCBieSA5NiBwZXJzb25uZWwgd2FzIGNvbmNlbnRyYXRlZCBvbiBmb3JlaWduIHdvcmtlcnNcdTIwMTkgbGl2aW5nIHF1YXJ0ZXJzIGluIFBhZGFuZyBKYXdhIGFuZCBLb3RhIEtlbXVuaW5nIGFyZWFzLiAgSGUgc2FpZCBkdXJpbmcgdGhlIG9wZXJhdGlvbiA0MzAgZm9yZWlnbmVycyB3ZXJlIHF1ZXN0aW9uZWQgYW5kIG9mIHRoZSB0b3RhbCA5NCBtZW4sIHR3byB3b21lbiBhbmQgZm91ciBjaGlsZHJlbiB3ZXJlIGRldGFpbmVkIGZvciB2YXJpb3VzIG9mZmVuY2VzLiAgXHUyMDFjVGhlIGZvcmVpZ25lcnMgYWdlZCBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQgYXJlIGZyb20gSW5kb25lc2lhLCBCYW5nbGFkZXNoLCBNeWFubWFyLCBJbmRpYSwgTmVwYWwsIFBha2lzdGFuIGFuZCBWaWV0bmFtLiAgXHUyMDFjVGhlIGNoaWxkcmVuLCB0aHJlZSBib3lzIGFuZCBhIGdpcmwgYWdlZCBiZXR3ZWVuIGZvdXIgbW9udGhzIGFuZCB0d28geWVhcnMgYXJlIEluZG9uZXNpYW5zLFx1MjAxZCBoZSBzYWlkIGluIGEgc3RhdGVtZW50IGhlcmUgdG9kYXkuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTAiLCAidGl0bGUiOiAiRm91ciBjaGlsZHJlbiBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBpbiBTaGFoIEFsYW0gfCBNYWxheSBNYWlsIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiTWFrZSBhIHZpc2l0IiwgImFycmVzdCIsICJhcnJlc3QiLCAiaW52ZXN0aWdhdCIsICJtaXNzaW5nIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxNy4zNzUzIiwgIjc4LjQ3NDQiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly9tZW5hZm4uY29tLzEwOTgzODc1MDIvSHlkZXJhYmFkLUJveWZyaWVuZC1tdXJkZXJzLXRlY2hpZS1zdHVmZnMtYm9keS1pbi1zdWl0Y2FzZS1hcnJlc3RlZCIsICJjb250ZW50IjogIk9uIFN1bmRheSwgcG9saWNlIGZvdW5kIGEgYm9keSBzdHVmZmVkIGluc2lkZSBhIHN1aXRjYXNlIGluIE1lZGNoYWwgYXJlYSwgd2hpY2ggaXMgYWJvdXQgb25lIGhvdXIgYXdheSBmcm9tIEh5ZGVyYWJhZC4gIEFmdGVyIGFuIGluaXRpYWwgaW52ZXN0aWdhdGlvbiwgcG9saWNlIGxlYXJuZWQgdGhlIGJvZHkgd2FzIExhdmFueWEncywgYSAyNS15ZWFyLW9sZCB0ZWNoaWUgd2hvIHdlbnQgbWlzc2luZyBhIGZldyBkYXlzIGFnby4gIFN1YnNlcXVlbnRseSwgcG9saWNlIGFycmVzdGVkIGhlciBib3lmcmllbmQgU3VuaWwgZm9yIGtpZG5hcHBpbmcgYW5kIGtpbGxpbmcgdGhlIHZpY3RpbS4gQSBjYXNlIHVuZGVyIElQQyBTZWN0aW9uIDMwMiAobXVyZGVyKSB3YXMgcmVnaXN0ZXJlZC4gIExhdmFueWEgYW5kIFN1bmlsIGtuZXcgZWFjaCBvdGhlciBzaW5jZSBjb2xsZWdlICAgIEFmZmFpciAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIExhdmFueWEgd2FzIGFuIGVuZ2luZWVyIGZyb20gR2FjaGlib3dsaSBhbmQgd2FzIGluIGxvdmUgd2l0aCBTdW5pbCwgd2hvIHdhcyBhIHN0cnVjdHVyYWwgZW5naW5lZXIuIFRoZSBkdW8gbWV0IGluIGNvbGxlZ2UgYW5kIGdyZXcgY2xvc2UuICBBcHBhcmVudGx5LCBMYXZhbnlhIHdhbnRlZCBTdW5pbCB0byBtYXJyeSBoZXIgYnV0IGhlIGtlcHQgZGVsYXlpbmcgaXQuICBMYXRlciwgaGUgdG9sZCBMYXZhbnlhIGFuZCBoZXIgcGFyZW50cyB0aGF0IGhlIGdvdCBhIGpvYiBpbiBNdXNjYXQuIFN1bmlsIGNvbnZpbmNlZCBMYXZhbnlhJ3MgcGFyZW50cyB0byBhbGxvdyBoZXIgdG8gZ28gd2l0aCBoaW0uICBTdW5pbCB0b29rIExhdmFueWEgdG8gYSBsb2RnZSBhbmQgYWxsZWdlZGx5IGtpbGxlZCBoZXIgICAgTXVyZGVyICBPbiBBcHJpbCA0LCBMYXZhbnlhJ3MgZmFtaWx5IGRyb3BwZWQgaGVyIGF0IFJHSSBBaXJwb3J0IGluIEh5ZGVyYWJhZCBmb3IgaGVyIGpvdXJuZXkgdG8gTXVzY2F0LiAgQWZ0ZXIgaGVyIGZhbWlseSBtZW1iZXJzIGxlZnQsIFN1bmlsIHJlcG9ydGVkbHkgY29udmluY2VkIExhdmFueWEgdG8gY29tZSB3aXRoIGhpbSB0byBhIGxvZGdlLCB3aGVyZSBoZSBhbGxlZ2VkbHkga2lsbGVkIGhlci4gIFwiSGUgdGhyb3R0bGVkIGhlciBhdCB0aGUgbG9kZ2UgYW5kIHN0dWZmZWQgdGhlIGJvZHkgaW4gYSBzdWl0Y2FzZSxcIiBSQyBQdXJhbSBpbnNwZWN0b3IgUiBSYW1hIENoYW5kcmEgUmFvIHRvbGQgVE9JLiAgU3VuaWwgcG9zZWQgYXMgTGF2YW55YSB0byBzcGVhayB0byBoZXIgc2lzdGVyICAgIENoYXR0aW5nICBOb3RhYmx5LCBMYXZhbnlhIGhhZCB0b2xkIGhlciBwYXJlbnRzIHRoYXQgc2hlIHdvdWxkIHJldHVybiBmcm9tIE11c2NhdCBieSBBcHJpbCA3LiBIZXIgc2lzdGVyIHNlbnQgaGVyIHRleHRzIG9uIFdoYXRzQXBwIGFuZCBTdW5pbCByZXBsaWVkIHBvc2luZyBhcyBMYXZhbnlhLiAgT24gQXByaWwgNywgaGUgc3dpdGNoZWQgb2ZmIGhlciBwaG9uZSBwcm9tcHRpbmcgaGVyIHBhcmVudHMgdG8gbG9kZ2UgYSBtaXNzaW5nIHBlcnNvbiBjb21wbGFpbnQuICBCYXNlZCBvbiBMYXZhbnlhJ3MgY2FsbCByZWNvcmRzLCBwb2xpY2UgemVyb2VkIGluIG9uIFN1bmlsLCB3aG8gaGFpbHMgZnJvbSBCaWhhciwgYXMgYSBzdXNwZWN0LiAgUmVwb3J0ZWRseSwgU3VuaWwgaGlkIExhdmFueWEncyBib2R5IGJlbmVhdGggYSBjdWx2ZXJ0IGluIGEgZHJhaW4uIFdoZW4gbG9jYWxzIHNhdyB0aGUgc3VzcGljaW91cyBzdWl0Y2FzZSwgdGhleSBhbGVydGVkIHBvbGljZS4gU3VuaWwgcmVwb3J0ZWRseSB0b2xkIHBvbGljZSBvZmZpY2VycyBoZSBtdXJkZXJlZCBMYXZhbnlhIGFzIHNoZSB3YXMgcHJlc3N1cml6aW5nIGhpbSB0byBnZXQgbWFycmllZC4gSGUgaGFzIGJlZW4gY2hhcmdlZCB3aXRoIG11cmRlciBhbmQga2lkbmFwcGluZy4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToxMiIsICJ0aXRsZSI6ICJIeWRlcmFiYWQ6IEJveWZyaWVuZCBtdXJkZXJzIHRlY2hpZSwgc3R1ZmZzIGJvZHkgaW4gc3VpdGNhc2UgYXJyZXN0ZWQifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgImRldGFpbiIsICJkZXRhaW4iLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIklORE9ORVNJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siNC4zNDM5IiwgIjk2LjAzMzgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cubWFsYXltYWlsLmNvbS9uZXdzL21hbGF5c2lhLzIwMTkvMDQvMTQvZm91ci1jaGlsZHJlbi1hbW9uZy0xMDAtZm9yZWlnbmVycy1kZXRhaW5lZC1pbi1zaGFoLWFsYW0vMTc0MzIzNiIsICJjb250ZW50IjogIlNIQUggQUxBTSwgQXByaWwgMTQgXHUyMDE0IEZvdXIgY2hpbGRyZW4gd2VyZSBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBieSB0aGUgU2VsYW5nb3IgSW1taWdyYXRpb24gRGVwYXJ0bWVudCBpbiBhIGZvdXItaG91ciBpbnRlZ3JhdGVkIG9wZXJhdGlvbiBjb25kdWN0ZWQgYXJvdW5kIFNoYWggQWxhbSB5ZXN0ZXJkYXkuICBJdHMgZGlyZWN0b3IsIE1vaGFtYWQgU2h1a3JpIE5hd2ksIHNhaWQgdGhlIG9wZXJhdGlvbiB3aGljaCBiZWdhbiBhcm91bmQgMTIgbWlkbmlnaHQgYW5kIHBhcnRpY2lwYXRlZCBieSA5NiBwZXJzb25uZWwgd2FzIGNvbmNlbnRyYXRlZCBvbiBmb3JlaWduIHdvcmtlcnNcdTIwMTkgbGl2aW5nIHF1YXJ0ZXJzIGluIFBhZGFuZyBKYXdhIGFuZCBLb3RhIEtlbXVuaW5nIGFyZWFzLiAgSGUgc2FpZCBkdXJpbmcgdGhlIG9wZXJhdGlvbiA0MzAgZm9yZWlnbmVycyB3ZXJlIHF1ZXN0aW9uZWQgYW5kIG9mIHRoZSB0b3RhbCA5NCBtZW4sIHR3byB3b21lbiBhbmQgZm91ciBjaGlsZHJlbiB3ZXJlIGRldGFpbmVkIGZvciB2YXJpb3VzIG9mZmVuY2VzLiAgXHUyMDFjVGhlIGZvcmVpZ25lcnMgYWdlZCBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQgYXJlIGZyb20gSW5kb25lc2lhLCBCYW5nbGFkZXNoLCBNeWFubWFyLCBJbmRpYSwgTmVwYWwsIFBha2lzdGFuIGFuZCBWaWV0bmFtLiAgXHUyMDFjVGhlIGNoaWxkcmVuLCB0aHJlZSBib3lzIGFuZCBhIGdpcmwgYWdlZCBiZXR3ZWVuIGZvdXIgbW9udGhzIGFuZCB0d28geWVhcnMgYXJlIEluZG9uZXNpYW5zLFx1MjAxZCBoZSBzYWlkIGluIGEgc3RhdGVtZW50IGhlcmUgdG9kYXkuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTAiLCAidGl0bGUiOiAiRm91ciBjaGlsZHJlbiBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBpbiBTaGFoIEFsYW0gfCBNYWxheSBNYWlsIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiTWFrZSBhIHZpc2l0IiwgImFycmVzdCIsICJhcnJlc3QiLCAiaW52ZXN0aWdhdCIsICJtaXNzaW5nIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxNy4zNzUzIiwgIjc4LjQ3NDQiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly9tZW5hZm4uY29tLzEwOTgzODc1MDIvSHlkZXJhYmFkLUJveWZyaWVuZC1tdXJkZXJzLXRlY2hpZS1zdHVmZnMtYm9keS1pbi1zdWl0Y2FzZS1hcnJlc3RlZCIsICJjb250ZW50IjogIk9uIFN1bmRheSwgcG9saWNlIGZvdW5kIGEgYm9keSBzdHVmZmVkIGluc2lkZSBhIHN1aXRjYXNlIGluIE1lZGNoYWwgYXJlYSwgd2hpY2ggaXMgYWJvdXQgb25lIGhvdXIgYXdheSBmcm9tIEh5ZGVyYWJhZC4gIEFmdGVyIGFuIGluaXRpYWwgaW52ZXN0aWdhdGlvbiwgcG9saWNlIGxlYXJuZWQgdGhlIGJvZHkgd2FzIExhdmFueWEncywgYSAyNS15ZWFyLW9sZCB0ZWNoaWUgd2hvIHdlbnQgbWlzc2luZyBhIGZldyBkYXlzIGFnby4gIFN1YnNlcXVlbnRseSwgcG9saWNlIGFycmVzdGVkIGhlciBib3lmcmllbmQgU3VuaWwgZm9yIGtpZG5hcHBpbmcgYW5kIGtpbGxpbmcgdGhlIHZpY3RpbS4gQSBjYXNlIHVuZGVyIElQQyBTZWN0aW9uIDMwMiAobXVyZGVyKSB3YXMgcmVnaXN0ZXJlZC4gIExhdmFueWEgYW5kIFN1bmlsIGtuZXcgZWFjaCBvdGhlciBzaW5jZSBjb2xsZWdlICAgIEFmZmFpciAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIExhdmFueWEgd2FzIGFuIGVuZ2luZWVyIGZyb20gR2FjaGlib3dsaSBhbmQgd2FzIGluIGxvdmUgd2l0aCBTdW5pbCwgd2hvIHdhcyBhIHN0cnVjdHVyYWwgZW5naW5lZXIuIFRoZSBkdW8gbWV0IGluIGNvbGxlZ2UgYW5kIGdyZXcgY2xvc2UuICBBcHBhcmVudGx5LCBMYXZhbnlhIHdhbnRlZCBTdW5pbCB0byBtYXJyeSBoZXIgYnV0IGhlIGtlcHQgZGVsYXlpbmcgaXQuICBMYXRlciwgaGUgdG9sZCBMYXZhbnlhIGFuZCBoZXIgcGFyZW50cyB0aGF0IGhlIGdvdCBhIGpvYiBpbiBNdXNjYXQuIFN1bmlsIGNvbnZpbmNlZCBMYXZhbnlhJ3MgcGFyZW50cyB0byBhbGxvdyBoZXIgdG8gZ28gd2l0aCBoaW0uICBTdW5pbCB0b29rIExhdmFueWEgdG8gYSBsb2RnZSBhbmQgYWxsZWdlZGx5IGtpbGxlZCBoZXIgICAgTXVyZGVyICBPbiBBcHJpbCA0LCBMYXZhbnlhJ3MgZmFtaWx5IGRyb3BwZWQgaGVyIGF0IFJHSSBBaXJwb3J0IGluIEh5ZGVyYWJhZCBmb3IgaGVyIGpvdXJuZXkgdG8gTXVzY2F0LiAgQWZ0ZXIgaGVyIGZhbWlseSBtZW1iZXJzIGxlZnQsIFN1bmlsIHJlcG9ydGVkbHkgY29udmluY2VkIExhdmFueWEgdG8gY29tZSB3aXRoIGhpbSB0byBhIGxvZGdlLCB3aGVyZSBoZSBhbGxlZ2VkbHkga2lsbGVkIGhlci4gIFwiSGUgdGhyb3R0bGVkIGhlciBhdCB0aGUgbG9kZ2UgYW5kIHN0dWZmZWQgdGhlIGJvZHkgaW4gYSBzdWl0Y2FzZSxcIiBSQyBQdXJhbSBpbnNwZWN0b3IgUiBSYW1hIENoYW5kcmEgUmFvIHRvbGQgVE9JLiAgU3VuaWwgcG9zZWQgYXMgTGF2YW55YSB0byBzcGVhayB0byBoZXIgc2lzdGVyICAgIENoYXR0aW5nICBOb3RhYmx5LCBMYXZhbnlhIGhhZCB0b2xkIGhlciBwYXJlbnRzIHRoYXQgc2hlIHdvdWxkIHJldHVybiBmcm9tIE11c2NhdCBieSBBcHJpbCA3LiBIZXIgc2lzdGVyIHNlbnQgaGVyIHRleHRzIG9uIFdoYXRzQXBwIGFuZCBTdW5pbCByZXBsaWVkIHBvc2luZyBhcyBMYXZhbnlhLiAgT24gQXByaWwgNywgaGUgc3dpdGNoZWQgb2ZmIGhlciBwaG9uZSBwcm9tcHRpbmcgaGVyIHBhcmVudHMgdG8gbG9kZ2UgYSBtaXNzaW5nIHBlcnNvbiBjb21wbGFpbnQuICBCYXNlZCBvbiBMYXZhbnlhJ3MgY2FsbCByZWNvcmRzLCBwb2xpY2UgemVyb2VkIGluIG9uIFN1bmlsLCB3aG8gaGFpbHMgZnJvbSBCaWhhciwgYXMgYSBzdXNwZWN0LiAgUmVwb3J0ZWRseSwgU3VuaWwgaGlkIExhdmFueWEncyBib2R5IGJlbmVhdGggYSBjdWx2ZXJ0IGluIGEgZHJhaW4uIFdoZW4gbG9jYWxzIHNhdyB0aGUgc3VzcGljaW91cyBzdWl0Y2FzZSwgdGhleSBhbGVydGVkIHBvbGljZS4gU3VuaWwgcmVwb3J0ZWRseSB0b2xkIHBvbGljZSBvZmZpY2VycyBoZSBtdXJkZXJlZCBMYXZhbnlhIGFzIHNoZSB3YXMgcHJlc3N1cml6aW5nIGhpbSB0byBnZXQgbWFycmllZC4gSGUgaGFzIGJlZW4gY2hhcmdlZCB3aXRoIG11cmRlciBhbmQga2lkbmFwcGluZy4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToxMiIsICJ0aXRsZSI6ICJIeWRlcmFiYWQ6IEJveWZyaWVuZCBtdXJkZXJzIHRlY2hpZSwgc3R1ZmZzIGJvZHkgaW4gc3VpdGNhc2UgYXJyZXN0ZWQifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgIm9wZXJhdGlvbiIsICJ0YXJnZXQiXSwgImNvdW50cmllcyI6IFsiSkFQQU4iXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjM1LjczMDIiLCAiMTM5LjcxMSJdXSwgInNvdXJjZSI6ICJodHRwOi8vd3d3Lm12YXJpZXR5LmNvbS9jbm1pL2NubWktbmV3cy9sb2NhbC8xMTIwMTEtdGV0ZXRvLWJlYWNoLWlzLTEtYWdhaW4tYXQtamFwYW4tbWFyaW5lLWRpdmluZy1mYWlyIiwgImNvbnRlbnQiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciAgKE1WQSkgXHUyMDE0IEZvciB0aGUgc2Vjb25kIHN0cmFpZ2h0IHllYXIsIFRldGV0byBCZWFjaCBvbiB0aGUgaXNsYW5kIG9mIFJvdGEgaW4gdGhlIE1hcmlhbmFzIHdhcyBzZWxlY3RlZCBhcyB0aGUgTm8uIDEgUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaCBhdCB0aGUgRGl2ZSBhbmQgVHJhdmVsIEF3YXJkcyBvZiB0aGUgYW5udWFsIE1hcmluZSBEaXZpbmcgRmFpciBpbiBKYXBhbiBvbiBBcHJpbCA1LTcsIDIwMTkuICBJbiBhZGRpdGlvbiwgTWVndW1pIFRha2FrdSBvZiBCbHVlIFBhbG1zIERpdmUgU2VydmljZSBSb3RhIHdvbiAxc3QgcGxhY2UgUmVhZGVyc1x1MjAxOSBDaG9pY2UgRmF2b3JpdGUgRGl2ZSBHdWlkZSwgT3ZlcnNlYXMsIGFkZGluZyBhY2NvbGFkZXMgdG8gaGVyIDJuZCBwbGFjZSBsYXN0IHllYXIsIGFuZCBCbHVlIFBhbG1zIHdvbiAybmQgcGxhY2UsIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEZhdm9yaXRlIERpdmUgT3BlcmF0b3IsIE92ZXJzZWFzLiAgXHUyMDFjT25jZSBhZ2FpbiwgUm90YSBpcyBzZXR0aW5nIHRoZSBzdGFuZGFyZCBpbiB0aGUgaW5kdXN0cnkgZm9yIGV4dHJhb3JkaW5hcnkgZGl2ZSBhbmQgYmVhY2ggZXhwZXJpZW5jZXMgYW5kIGV4Y2VwdGlvbmFsIGN1c3RvbWVyIGNhcmUsXHUyMDFkIHNhaWQgTWFyaWFuYXMgVmlzaXRvcnMgQXV0aG9yaXR5IE1hbmFnaW5nIERpcmVjdG9yIENocmlzdG9waGVyIEEuIENvbmNlcGNpb24uIFx1MjAxY1x1MjAxY0ksIG15c2VsZiwgaGF2ZSBoYWQgdGhlIHByaXZpbGVnZSBvZiBkaXZpbmcgaW4gUm90YSwgYW5kIEkgaGF2ZSB0byBzYXkgdGhhdCBSb3RhIGhhcyB0aGUgYmVzdCB2aXNpYmlsaXR5IG9mIGFueSBvZiB0aGUgaXNsYW5kcyBpbiB0aGUgTWFyaWFuYXMuIFRoZSBjb3JhbCByZWVmcywgc2VhIGxpZmUgYW5kIHVuaXF1ZSB1bmRlcndhdGVyIGZvcm1hdGlvbnMgbWFrZSBSb3RhIGEgZGl2ZSBoYXZlbi4gV2UgY2FuIGFsbCBsb29rIHRvIHRoZSBjYXJlIG9mIHRoZSBSb3RhIGNvbW11bml0eSBmb3IgdGhlIGNsZWFubGluZXNzIGFuZCBwcm90ZWN0aW9uIG9mIHRoZWlyIG5hdHVyYWwgcmVzb3VyY2VzIGFuZCB0byB0aGVpciBob3NwaXRhbGl0eSBhbmQgY2FyZSBmb3IgZWFjaCB2aXNpdG9yIGFzIGFuIGV4YW1wbGUgb2Ygd2hhdCB3ZSBjYW4gb2ZmZXIgdmlzaXRvcnMgdG8gZWFjaCBvZiB0aGUgaXNsYW5kcyBvZiB0aGUgTWFyaWFuYXMuIFdlIGhhdmUgbXVjaCB0byBiZSBwcm91ZCBvZi5cdTIwMWQgIEluIGFkZGl0aW9uLCBTYWlwYW4sIFRpbmlhbiwgYW5kIFJvdGEgY29tYmluZWQgd29uIDR0aCBwbGFjZSBmb3IgdGhlIHNlY29uZCB5ZWFyIGluIGEgcm93IGFzIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEJlc3QgRGl2aW5nIEFyZWEsIE92ZXJzZWFzLCBhbmQgTWFuYWdhaGEgd29uIDEwdGggcGxhY2UgaW4gUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaC4gIERpdmluZyBvcHBvcnR1bml0aWVzIG9uIFJvdGEgYW5kIHRocm91Z2hvdXQgdGhlIE1hcmlhbmFzIHdlcmUgdG91dGVkIGJ5IE1WQSB0byBvdmVyIDUwLDAwMCBhdHRlbmRlZXMgYXQgdGhlIGZhaXIsIHdoaWNoIGlzIEphcGFuXHUyMDE5cyBsZWFkaW5nIGNvbnN1bWVyIGRpdmluZyBzaG93LCB0YXJnZXRpbmcgY29uc3VtZXJzIGFuZCB0cmFkZSByZXByZXNlbnRhdGl2ZXMgaW4gSmFwYW4gYW5kIG90aGVyIEFzaWFuIGNvdW50cmllcy4gVGhlIGZhaXIgd2FzIGhlbGQgYXQgSWtlYnVrdXJvIFN1bnNoaW5lIENpdHkgQ29udmVudGlvbiBDZW50ZXIgaW4gVG9reW8uICBNVkEgaG9zdGVkIGFuIGluZm9ybWF0aW9uIGJvb3RoIGF0IHRoZSBldmVudCBpbiB0aGUgXHUyMDFjT2NlYW4sIElzbGFuZHMgYW5kIFRyYXZlbFx1MjAxZCBzZWN0aW9uLiBNVkEgc2hvd2VkIHRoZSBtb3ZpZSBcdTIwMWNEaXZpbmcgaW4gdGhlIE1hcmlhbmFzLFx1MjAxZCBkaXN0cmlidXRlZCBkaXZpbmcgbWFwcyBhbmQgbGVhZmxldHMsIGlzbGFuZCBtYXBzLCBhbmQgb3RoZXIgbWF0ZXJpYWw7IGFuZCBhbnN3ZXJlZCBxdWVzdGlvbnMgZnJvbSBhdHRlbmRlZXMgYXQgdGhlIHNob3csIHdoaWNoIGF0dHJhY3RlZCAxMDAgZXhoaWJpdG9ycyByZXByZXNlbnRpbmcgZGVzdGluYXRpb25zLCBkaXZpbmcgc2hvcHMsIHVuZGVyd2F0ZXIgY2FtZXJhIG1hbnVmYWN0dXJlcnMsIGFuZCBvdGhlciBhcmVhcyBvZiB0aGUgaW5kdXN0cnkuICBJbiBjb29wZXJhdGlvbiB3aXRoIE1WQSwgdGhlIGV2ZW50IHdhcyBhbHNvIGF0dGVuZGVkIGJ5IGZvdXIgbWVtYmVycyBvZiB0aGUgTm9ydGhlcm4gTWFyaWFuYXMgRGl2aW5nIE9wZXJhdGlvbnMgQXNzb2NpYXRpb24uIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTQiLCAidGl0bGUiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciJ9Cgo=eyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgImRldGFpbiIsICJkZXRhaW4iLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIklORE9ORVNJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siNC4zNDM5IiwgIjk2LjAzMzgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cubWFsYXltYWlsLmNvbS9uZXdzL21hbGF5c2lhLzIwMTkvMDQvMTQvZm91ci1jaGlsZHJlbi1hbW9uZy0xMDAtZm9yZWlnbmVycy1kZXRhaW5lZC1pbi1zaGFoLWFsYW0vMTc0MzIzNiIsICJjb250ZW50IjogIlNIQUggQUxBTSwgQXByaWwgMTQgXHUyMDE0IEZvdXIgY2hpbGRyZW4gd2VyZSBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBieSB0aGUgU2VsYW5nb3IgSW1taWdyYXRpb24gRGVwYXJ0bWVudCBpbiBhIGZvdXItaG91ciBpbnRlZ3JhdGVkIG9wZXJhdGlvbiBjb25kdWN0ZWQgYXJvdW5kIFNoYWggQWxhbSB5ZXN0ZXJkYXkuICBJdHMgZGlyZWN0b3IsIE1vaGFtYWQgU2h1a3JpIE5hd2ksIHNhaWQgdGhlIG9wZXJhdGlvbiB3aGljaCBiZWdhbiBhcm91bmQgMTIgbWlkbmlnaHQgYW5kIHBhcnRpY2lwYXRlZCBieSA5NiBwZXJzb25uZWwgd2FzIGNvbmNlbnRyYXRlZCBvbiBmb3JlaWduIHdvcmtlcnNcdTIwMTkgbGl2aW5nIHF1YXJ0ZXJzIGluIFBhZGFuZyBKYXdhIGFuZCBLb3RhIEtlbXVuaW5nIGFyZWFzLiAgSGUgc2FpZCBkdXJpbmcgdGhlIG9wZXJhdGlvbiA0MzAgZm9yZWlnbmVycyB3ZXJlIHF1ZXN0aW9uZWQgYW5kIG9mIHRoZSB0b3RhbCA5NCBtZW4sIHR3byB3b21lbiBhbmQgZm91ciBjaGlsZHJlbiB3ZXJlIGRldGFpbmVkIGZvciB2YXJpb3VzIG9mZmVuY2VzLiAgXHUyMDFjVGhlIGZvcmVpZ25lcnMgYWdlZCBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQgYXJlIGZyb20gSW5kb25lc2lhLCBCYW5nbGFkZXNoLCBNeWFubWFyLCBJbmRpYSwgTmVwYWwsIFBha2lzdGFuIGFuZCBWaWV0bmFtLiAgXHUyMDFjVGhlIGNoaWxkcmVuLCB0aHJlZSBib3lzIGFuZCBhIGdpcmwgYWdlZCBiZXR3ZWVuIGZvdXIgbW9udGhzIGFuZCB0d28geWVhcnMgYXJlIEluZG9uZXNpYW5zLFx1MjAxZCBoZSBzYWlkIGluIGEgc3RhdGVtZW50IGhlcmUgdG9kYXkuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTAiLCAidGl0bGUiOiAiRm91ciBjaGlsZHJlbiBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBpbiBTaGFoIEFsYW0gfCBNYWxheSBNYWlsIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiTWFrZSBhIHZpc2l0IiwgImFycmVzdCIsICJhcnJlc3QiLCAiaW52ZXN0aWdhdCIsICJtaXNzaW5nIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxNy4zNzUzIiwgIjc4LjQ3NDQiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly9tZW5hZm4uY29tLzEwOTgzODc1MDIvSHlkZXJhYmFkLUJveWZyaWVuZC1tdXJkZXJzLXRlY2hpZS1zdHVmZnMtYm9keS1pbi1zdWl0Y2FzZS1hcnJlc3RlZCIsICJjb250ZW50IjogIk9uIFN1bmRheSwgcG9saWNlIGZvdW5kIGEgYm9keSBzdHVmZmVkIGluc2lkZSBhIHN1aXRjYXNlIGluIE1lZGNoYWwgYXJlYSwgd2hpY2ggaXMgYWJvdXQgb25lIGhvdXIgYXdheSBmcm9tIEh5ZGVyYWJhZC4gIEFmdGVyIGFuIGluaXRpYWwgaW52ZXN0aWdhdGlvbiwgcG9saWNlIGxlYXJuZWQgdGhlIGJvZHkgd2FzIExhdmFueWEncywgYSAyNS15ZWFyLW9sZCB0ZWNoaWUgd2hvIHdlbnQgbWlzc2luZyBhIGZldyBkYXlzIGFnby4gIFN1YnNlcXVlbnRseSwgcG9saWNlIGFycmVzdGVkIGhlciBib3lmcmllbmQgU3VuaWwgZm9yIGtpZG5hcHBpbmcgYW5kIGtpbGxpbmcgdGhlIHZpY3RpbS4gQSBjYXNlIHVuZGVyIElQQyBTZWN0aW9uIDMwMiAobXVyZGVyKSB3YXMgcmVnaXN0ZXJlZC4gIExhdmFueWEgYW5kIFN1bmlsIGtuZXcgZWFjaCBvdGhlciBzaW5jZSBjb2xsZWdlICAgIEFmZmFpciAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIExhdmFueWEgd2FzIGFuIGVuZ2luZWVyIGZyb20gR2FjaGlib3dsaSBhbmQgd2FzIGluIGxvdmUgd2l0aCBTdW5pbCwgd2hvIHdhcyBhIHN0cnVjdHVyYWwgZW5naW5lZXIuIFRoZSBkdW8gbWV0IGluIGNvbGxlZ2UgYW5kIGdyZXcgY2xvc2UuICBBcHBhcmVudGx5LCBMYXZhbnlhIHdhbnRlZCBTdW5pbCB0byBtYXJyeSBoZXIgYnV0IGhlIGtlcHQgZGVsYXlpbmcgaXQuICBMYXRlciwgaGUgdG9sZCBMYXZhbnlhIGFuZCBoZXIgcGFyZW50cyB0aGF0IGhlIGdvdCBhIGpvYiBpbiBNdXNjYXQuIFN1bmlsIGNvbnZpbmNlZCBMYXZhbnlhJ3MgcGFyZW50cyB0byBhbGxvdyBoZXIgdG8gZ28gd2l0aCBoaW0uICBTdW5pbCB0b29rIExhdmFueWEgdG8gYSBsb2RnZSBhbmQgYWxsZWdlZGx5IGtpbGxlZCBoZXIgICAgTXVyZGVyICBPbiBBcHJpbCA0LCBMYXZhbnlhJ3MgZmFtaWx5IGRyb3BwZWQgaGVyIGF0IFJHSSBBaXJwb3J0IGluIEh5ZGVyYWJhZCBmb3IgaGVyIGpvdXJuZXkgdG8gTXVzY2F0LiAgQWZ0ZXIgaGVyIGZhbWlseSBtZW1iZXJzIGxlZnQsIFN1bmlsIHJlcG9ydGVkbHkgY29udmluY2VkIExhdmFueWEgdG8gY29tZSB3aXRoIGhpbSB0byBhIGxvZGdlLCB3aGVyZSBoZSBhbGxlZ2VkbHkga2lsbGVkIGhlci4gIFwiSGUgdGhyb3R0bGVkIGhlciBhdCB0aGUgbG9kZ2UgYW5kIHN0dWZmZWQgdGhlIGJvZHkgaW4gYSBzdWl0Y2FzZSxcIiBSQyBQdXJhbSBpbnNwZWN0b3IgUiBSYW1hIENoYW5kcmEgUmFvIHRvbGQgVE9JLiAgU3VuaWwgcG9zZWQgYXMgTGF2YW55YSB0byBzcGVhayB0byBoZXIgc2lzdGVyICAgIENoYXR0aW5nICBOb3RhYmx5LCBMYXZhbnlhIGhhZCB0b2xkIGhlciBwYXJlbnRzIHRoYXQgc2hlIHdvdWxkIHJldHVybiBmcm9tIE11c2NhdCBieSBBcHJpbCA3LiBIZXIgc2lzdGVyIHNlbnQgaGVyIHRleHRzIG9uIFdoYXRzQXBwIGFuZCBTdW5pbCByZXBsaWVkIHBvc2luZyBhcyBMYXZhbnlhLiAgT24gQXByaWwgNywgaGUgc3dpdGNoZWQgb2ZmIGhlciBwaG9uZSBwcm9tcHRpbmcgaGVyIHBhcmVudHMgdG8gbG9kZ2UgYSBtaXNzaW5nIHBlcnNvbiBjb21wbGFpbnQuICBCYXNlZCBvbiBMYXZhbnlhJ3MgY2FsbCByZWNvcmRzLCBwb2xpY2UgemVyb2VkIGluIG9uIFN1bmlsLCB3aG8gaGFpbHMgZnJvbSBCaWhhciwgYXMgYSBzdXNwZWN0LiAgUmVwb3J0ZWRseSwgU3VuaWwgaGlkIExhdmFueWEncyBib2R5IGJlbmVhdGggYSBjdWx2ZXJ0IGluIGEgZHJhaW4uIFdoZW4gbG9jYWxzIHNhdyB0aGUgc3VzcGljaW91cyBzdWl0Y2FzZSwgdGhleSBhbGVydGVkIHBvbGljZS4gU3VuaWwgcmVwb3J0ZWRseSB0b2xkIHBvbGljZSBvZmZpY2VycyBoZSBtdXJkZXJlZCBMYXZhbnlhIGFzIHNoZSB3YXMgcHJlc3N1cml6aW5nIGhpbSB0byBnZXQgbWFycmllZC4gSGUgaGFzIGJlZW4gY2hhcmdlZCB3aXRoIG11cmRlciBhbmQga2lkbmFwcGluZy4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToxMiIsICJ0aXRsZSI6ICJIeWRlcmFiYWQ6IEJveWZyaWVuZCBtdXJkZXJzIHRlY2hpZSwgc3R1ZmZzIGJvZHkgaW4gc3VpdGNhc2UgYXJyZXN0ZWQifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgIm9wZXJhdGlvbiIsICJ0YXJnZXQiXSwgImNvdW50cmllcyI6IFsiSkFQQU4iXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjM1LjczMDIiLCAiMTM5LjcxMSJdXSwgInNvdXJjZSI6ICJodHRwOi8vd3d3Lm12YXJpZXR5LmNvbS9jbm1pL2NubWktbmV3cy9sb2NhbC8xMTIwMTEtdGV0ZXRvLWJlYWNoLWlzLTEtYWdhaW4tYXQtamFwYW4tbWFyaW5lLWRpdmluZy1mYWlyIiwgImNvbnRlbnQiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciAgKE1WQSkgXHUyMDE0IEZvciB0aGUgc2Vjb25kIHN0cmFpZ2h0IHllYXIsIFRldGV0byBCZWFjaCBvbiB0aGUgaXNsYW5kIG9mIFJvdGEgaW4gdGhlIE1hcmlhbmFzIHdhcyBzZWxlY3RlZCBhcyB0aGUgTm8uIDEgUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaCBhdCB0aGUgRGl2ZSBhbmQgVHJhdmVsIEF3YXJkcyBvZiB0aGUgYW5udWFsIE1hcmluZSBEaXZpbmcgRmFpciBpbiBKYXBhbiBvbiBBcHJpbCA1LTcsIDIwMTkuICBJbiBhZGRpdGlvbiwgTWVndW1pIFRha2FrdSBvZiBCbHVlIFBhbG1zIERpdmUgU2VydmljZSBSb3RhIHdvbiAxc3QgcGxhY2UgUmVhZGVyc1x1MjAxOSBDaG9pY2UgRmF2b3JpdGUgRGl2ZSBHdWlkZSwgT3ZlcnNlYXMsIGFkZGluZyBhY2NvbGFkZXMgdG8gaGVyIDJuZCBwbGFjZSBsYXN0IHllYXIsIGFuZCBCbHVlIFBhbG1zIHdvbiAybmQgcGxhY2UsIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEZhdm9yaXRlIERpdmUgT3BlcmF0b3IsIE92ZXJzZWFzLiAgXHUyMDFjT25jZSBhZ2FpbiwgUm90YSBpcyBzZXR0aW5nIHRoZSBzdGFuZGFyZCBpbiB0aGUgaW5kdXN0cnkgZm9yIGV4dHJhb3JkaW5hcnkgZGl2ZSBhbmQgYmVhY2ggZXhwZXJpZW5jZXMgYW5kIGV4Y2VwdGlvbmFsIGN1c3RvbWVyIGNhcmUsXHUyMDFkIHNhaWQgTWFyaWFuYXMgVmlzaXRvcnMgQXV0aG9yaXR5IE1hbmFnaW5nIERpcmVjdG9yIENocmlzdG9waGVyIEEuIENvbmNlcGNpb24uIFx1MjAxY1x1MjAxY0ksIG15c2VsZiwgaGF2ZSBoYWQgdGhlIHByaXZpbGVnZSBvZiBkaXZpbmcgaW4gUm90YSwgYW5kIEkgaGF2ZSB0byBzYXkgdGhhdCBSb3RhIGhhcyB0aGUgYmVzdCB2aXNpYmlsaXR5IG9mIGFueSBvZiB0aGUgaXNsYW5kcyBpbiB0aGUgTWFyaWFuYXMuIFRoZSBjb3JhbCByZWVmcywgc2VhIGxpZmUgYW5kIHVuaXF1ZSB1bmRlcndhdGVyIGZvcm1hdGlvbnMgbWFrZSBSb3RhIGEgZGl2ZSBoYXZlbi4gV2UgY2FuIGFsbCBsb29rIHRvIHRoZSBjYXJlIG9mIHRoZSBSb3RhIGNvbW11bml0eSBmb3IgdGhlIGNsZWFubGluZXNzIGFuZCBwcm90ZWN0aW9uIG9mIHRoZWlyIG5hdHVyYWwgcmVzb3VyY2VzIGFuZCB0byB0aGVpciBob3NwaXRhbGl0eSBhbmQgY2FyZSBmb3IgZWFjaCB2aXNpdG9yIGFzIGFuIGV4YW1wbGUgb2Ygd2hhdCB3ZSBjYW4gb2ZmZXIgdmlzaXRvcnMgdG8gZWFjaCBvZiB0aGUgaXNsYW5kcyBvZiB0aGUgTWFyaWFuYXMuIFdlIGhhdmUgbXVjaCB0byBiZSBwcm91ZCBvZi5cdTIwMWQgIEluIGFkZGl0aW9uLCBTYWlwYW4sIFRpbmlhbiwgYW5kIFJvdGEgY29tYmluZWQgd29uIDR0aCBwbGFjZSBmb3IgdGhlIHNlY29uZCB5ZWFyIGluIGEgcm93IGFzIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEJlc3QgRGl2aW5nIEFyZWEsIE92ZXJzZWFzLCBhbmQgTWFuYWdhaGEgd29uIDEwdGggcGxhY2UgaW4gUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaC4gIERpdmluZyBvcHBvcnR1bml0aWVzIG9uIFJvdGEgYW5kIHRocm91Z2hvdXQgdGhlIE1hcmlhbmFzIHdlcmUgdG91dGVkIGJ5IE1WQSB0byBvdmVyIDUwLDAwMCBhdHRlbmRlZXMgYXQgdGhlIGZhaXIsIHdoaWNoIGlzIEphcGFuXHUyMDE5cyBsZWFkaW5nIGNvbnN1bWVyIGRpdmluZyBzaG93LCB0YXJnZXRpbmcgY29uc3VtZXJzIGFuZCB0cmFkZSByZXByZXNlbnRhdGl2ZXMgaW4gSmFwYW4gYW5kIG90aGVyIEFzaWFuIGNvdW50cmllcy4gVGhlIGZhaXIgd2FzIGhlbGQgYXQgSWtlYnVrdXJvIFN1bnNoaW5lIENpdHkgQ29udmVudGlvbiBDZW50ZXIgaW4gVG9reW8uICBNVkEgaG9zdGVkIGFuIGluZm9ybWF0aW9uIGJvb3RoIGF0IHRoZSBldmVudCBpbiB0aGUgXHUyMDFjT2NlYW4sIElzbGFuZHMgYW5kIFRyYXZlbFx1MjAxZCBzZWN0aW9uLiBNVkEgc2hvd2VkIHRoZSBtb3ZpZSBcdTIwMWNEaXZpbmcgaW4gdGhlIE1hcmlhbmFzLFx1MjAxZCBkaXN0cmlidXRlZCBkaXZpbmcgbWFwcyBhbmQgbGVhZmxldHMsIGlzbGFuZCBtYXBzLCBhbmQgb3RoZXIgbWF0ZXJpYWw7IGFuZCBhbnN3ZXJlZCBxdWVzdGlvbnMgZnJvbSBhdHRlbmRlZXMgYXQgdGhlIHNob3csIHdoaWNoIGF0dHJhY3RlZCAxMDAgZXhoaWJpdG9ycyByZXByZXNlbnRpbmcgZGVzdGluYXRpb25zLCBkaXZpbmcgc2hvcHMsIHVuZGVyd2F0ZXIgY2FtZXJhIG1hbnVmYWN0dXJlcnMsIGFuZCBvdGhlciBhcmVhcyBvZiB0aGUgaW5kdXN0cnkuICBJbiBjb29wZXJhdGlvbiB3aXRoIE1WQSwgdGhlIGV2ZW50IHdhcyBhbHNvIGF0dGVuZGVkIGJ5IGZvdXIgbWVtYmVycyBvZiB0aGUgTm9ydGhlcm4gTWFyaWFuYXMgRGl2aW5nIE9wZXJhdGlvbnMgQXNzb2NpYXRpb24uIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTQiLCAidGl0bGUiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIllpZWxkLCBub3Qgc3BlY2lmaWVkIGJlbG93IiwgIiBjb25ncmVzcyAiLCAiIGVsZWN0aW9uIiwgIiBhdHRhY2sgIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxMS44MzMzIiwgIjc1LjU2NjciXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cuZmlyc3Rwb3N0LmNvbS9wb2xpdGljcy9sb2stc2FiaGEtcG9sbHMtYmpwLXRyeWluZy10by1taWxrLXNhYmFyaW1hbGEtaXNzdWUtZm9yLXZvdGVzLWJ1dC13aW5uaW5nLXBhdGhhbmFtdGhpdHRhLXNlYXQtd2lsbC1iZS10b3VnaC02NDQ3MDUxLmh0bWwiLCAiY29udGVudCI6ICJLYWxhdmF0aGkgd2FzIHNjYXJlZCB3aGVuIHNoZSB3YXMgYXNrZWQgdG8gam9pbiBhIGdyb3VwIG9mIHJlbGF0aXZlcyBhbmQgZnJpZW5kcyB0byBnbyB0byBTYWJhcmltYWxhIGluIFBhdGhhbmFtdGhpdHRhIGRpc3RyaWN0IG9mIEtlcmFsYSBmb3IgVmlzaHVrYW5pIGRhcnNoYW4gYXQgdGhlIExvcmQgQXl5YXBwYSB0ZW1wbGUgb24gMTUgQXByaWwuIFRoZSAzMi15ZWFyLW9sZCB3b21hbiBmcm9tIENvaW1iYXRvcmUgaW4gVGFtaWwgTmFkdSBmb3VuZCBoZXIgZmVhcnMgbWlzcGxhY2VkIHdoZW4gc2hlIGZvdW5kIG5vbmUgdG8gYmxvY2sgaGVyIGF0IHRoZSBOaWxha2thbCBiYXNlIGNhbXAgb24gdGhlIGV2ZSBvZiB0aGUgVmlzaHUsIHRoZSBNYWxheWFsYW0gTmV3IFllYXIgZGF5LiAgVGhpcyB3YXMgbm90IHRoZSBjYXNlIHNpeCBtb250aHMgYWdvLCB3aGVuIHdvcmtlcnMgb2YgcmlnaHQtd2luZyBvdXRmaXRzIGZvcmNlZCB0aGUgd29tZW4gd2hvIGJldHdlZW4gMTAgYW5kIDUwIHllYXJzIG9mIGFnZSB0byByZXR1cm4uIFRoZSBwcm90ZXN0ZXJzIGhhZCBhbHNvIHRha2VuIHBvc2l0aW9uIGF0IG90aGVyIGVudHJ5IHBvaW50cyBhbmQgdGhlIGVudGlyZSBoaWxsb2NrIHRvIGVuc3VyZSB0aGF0IG5vIG1lbnN0cnVhdGluZyB3b21lbiBlbnRlcmVkIHRoZSB0ZW1wbGUuICBUaGUgcHJvdGVzdHMgZm9sbG93aW5nIHRoZSAyOCBTZXB0ZW1iZXIgU3VwcmVtZSBDb3VydCB2ZXJkaWN0IGFsbG93aW5nIHdvbWVuIG9mIGFsbCBhZ2VzIHRvIGVudGVyIHRoZSB0ZW1wbGUgdHVybmVkIHZpb2xlbnQgbW9zdCB3aGVuIHRoZSB0ZW1wbGUgd2FzIG9wZW5lZCBmb3IgdGhlIG1vbnRobHkgcHVqYSBhbmQgZHVyaW5nIHRoZSBtYWluIHBpbGdyaW0gc2Vhc29uLiBIdW5kcmVkcyBvZiBwZW9wbGUsIGluY2x1ZGluZyBwb2xpY2UgYW5kIG1lZGlhIHBlcnNvbm5lbCwgaGFkIGNvbWUgdW5kZXIgYXR0YWNrIGZyb20gdGhlIHNlbGYtc3R5bGVkIGd1YXJkaWFucyBvZiB0aGUgY3VzdG9tcyBhbmQgdHJhZGl0aW9ucyBvZiB0aGUgdGVtcGxlLiAgS2FsYXZhdGhpIHdhcyBhZnJhaWQgdG8gdmlzaXQgU2FiYXJpbWFsYSBhcyBzaGUgaGFkIHJlYWQgcmVwb3J0cyBhYm91dCB0aGUgdmlvbGVuY2UuIEhvd2V2ZXIsIHNoZSB3YXMgcmVsaWV2ZWQgd2hlbiBzaGUgZGlkIG5vdCBmaW5kIGFueSBwcm90ZXN0ZXJzIGluIHRoZSB2aWNpbml0eSBvZiBTYWJhcmltYWxhIHdoZW4gdGhleSBhcnJpdmVkIGFzIE5pbGFra2FsLiBQb2xpY2UgcGVyc29ubmVsIHBvc3RlZCBhdCB0aGUgYmFzZSBjYW1wIHNhaWQgdGhhdCBwcm90ZXN0ZXJzIGJlbG9uZ2luZyB0byBhbGwgcG9saXRpY2FsIGh1ZXMgaGFkIGRpc2FwcGVhcmVkIGZyb20gdGhlIGhpbGwgc2hyaW5lIGZvbGxvd2luZyB0aGUgYW5ub3VuY2VtZW50IG9mIHRoZSBlbGVjdGlvbi4gIFx1MjAxY1RoZXkgc2VlbSB0byBoYXZlIGFiYW5kb25lZCBBeXlhcHBhIGZvciB0aGUgc2FrZSBvZiB2b3Rlcy4gSXQgaXMgbm93IGNsZWFyIHRoYXQgYWxsIHRoZSBkcmFtYSB0aGF0IFNhYmFyaW1hbGEgd2l0bmVzc2VkIGFmdGVyIHRoZSBTdXByZW1lIENvdXJ0IHBhc3NlZCB0aGUgb3JkZXIgd2FzIHBvbGl0aWNhbCxcdTIwMWQgc2FpZCBhbiBvZmZpY2VyIHdobyBkaWQgbm90IHdhbnQgdG8gYmUgaWRlbnRpZmllZC4gIEJoYXJhdGl5YSBKYW5hdGEgUGFydHkgZ2VuZXJhbCBzZWNyZXRhcnkgSyBTdXJlbmRyYW4sIHdobyB3YXMgYXQgdGhlIGZvcmVmcm9udCBvZiB0aGUgcHJvdGVzdHMsIGlzIG5vdyB0aGUgQkpQIGNhbmRpZGF0ZSBpbiB0aGUgUGF0aGFuYW10aGl0dGEgTG9rIFNhYmhhIGNvbnN0aXR1ZW5jeS4gV2hlbiBhc2tlZCB3aHkgdGhleSBoYXZlIGRyb3BwZWQgdGhlIHZpZ2lsIGF0IFNhYmFyaW1hbGEsIGhlIHNhaWQgdGhleSBkaWQgbm90IGZlZWwgdGhlIG5lZWQgZm9yIHRoZSBzYW1lIGFzIHRoZSBMZWZ0IEZyb250IGdvdmVybm1lbnQgaXRzZWxmIGhhZCBhYmFuZG9uZWQgdGhlaXIgZGVjaXNpb24gdG8gdGFrZSB3b21lbiBvZiB0aGUgZm9yYmlkZGVuIGFnZSB0byBTYWJhcmltYWxhLiAgXHUyMDFjV2UgaGFkIGVudGVyZWQgdGhlIHNjZW5lIGFmdGVyIENoaWVmIE1pbmlzdGVyIFBpbmFyYXlpIFZpamF5YW4gYXBwZWFyZWQgYWRhbWFudCBpbiBpbXBsZW1lbnRpbmcgdGhlIGFwZXggY291cnQgdmVyZGljdC4gSGUgaGFzIHJlYWxpc2VkIHRoZSBmb2xseSBvZiBoaXMgZGVjaXNpb24gYW5kIGhhcyByZWZyYWluZWQgZnJvbSB0YWtpbmcgeW91bmcgd29tZW4gdG8gdGhlIGhpbGwgc2hyaW5lLiBUaGVyZWZvcmUsIHRoZXJlIGlzIG5vIG5lZWQgZm9yIHVzIHRvIGd1YXJkIHRoZSB0ZW1wbGUgbm93LFx1MjAxZCBoZSBzYWlkLiAgU3VyZW5kcmFuIHNhaWQgdGhhdCB0aGUgcHJvdGVzdHMgdGhleSBvcmdhbmlzZWQgaGFkIGFsc28gY3JlYXRlZCBhd2FyZW5lc3MgYW1vbmcgdGhlIGRldm90ZWVzIGFib3V0IHRoZSBldmlsIGRlc2lnbnMgb2YgdGhlIGdvdmVybm1lbnQuIFx1MjAxY1RoZXkgdGhlbXNlbHZlcyBhcmUgY29taW5nIGZvcndhcmQgdG8gcHJvdGVjdCB0aGUgY3VzdG9tcyBhbmQgdHJhZGl0aW9ucyBvZiB0aGUgdGVtcGxlIHdpdGhvdXQgYW55Ym9keSBwcm9tcHRpbmcgdGhlbSxcdTIwMWQgaGUgYWRkZWQuICBIb3dldmVyLCBTdXJlbmRyYW4gYW5kIGhpcyBwYXJ0eSBhcmUgbm90IHJlYWR5IHRvIGxlYXZlIFNhYmFyaW1hbGEgaW4gdGhlIGVsZWN0aW9uLCBkZXNwaXRlIGEgYmFyIG9uIGludm9raW5nIHRoZSBuYW1lcyBvZiBMb3JkIEF5eWFwcGEgaW4gdGhlIGVsZWN0aW9uIGJ5IHRoZSBFbGVjdGlvbiBDb21taXNzaW9uLiBXb21lblx1MjAxOXMgZW50cnkgaW50byB0aGUgdGVtcGxlIGlzIHRoZSBzaW5nbGUgbGFyZ2VzdCBpc3N1ZSBvZiBTdXJlbmRyYW4gYXQgUGF0aGFuYW10aGl0dGEsIHdoaWNoIGlzIGEgQ29uZ3Jlc3MgYmFzdGlvbi4gV2l0aG91dCBtZW50aW9uaW5nIHRoZSBuYW1lIG9mIHRoZSBkZWl0eSwgU3VyZW5kcmFuIGhhcyBiZWVuIHNlZWtpbmcgdm90ZXMgZm9yIEF5eWFwcGFuLiAgXHUyMDFjSSBrbm93IHlvdSBoYXZlIGdhdGhlcmVkIGhlcmUgYnJhdmluZyB0aGUgc2NvcmNoaW5nIHN1bW1lciBoZWF0IG5vdCBiZWNhdXNlIG9mIHlvdXIgbG92ZSBmb3IgbWUuIEkgZG9uXHUyMDE5dCBuZWVkIHRvIHRlbGwgeW91IHdobyBoYXMgYnJvdWdodCB5b3UgaGVyZS4gUGxlYXNlIHZvdGUgZm9yIGhpbSBhbmQgdGVhY2ggdGhlIExlZnQgYSBsZXNzb24sXHUyMDFkIFN1cmVuZHJhbiB0b2xkIGEgbW9kZXJhdGUgY3Jvd2Qgb2YgbWVuIGFuZCB3b21lbiB3aG8gaGFkIGdhdGhlcmVkIG5lYXIgS29ubmksIDQwIGttcyBmcm9tIE5pbGFra2FsLCB0byBncmVldCBoaW0uICBCZWZvcmUgaGUgcmVhY2hlZCB0aGUgc3BvdCwgdGhlIGxvY2FsIGxlYWRlcnMgZGVzY3JpYmVkIGhpbSBhcyBhICdtYXJ0eXInLiBUaGV5IHBvaW50ZWQgb3V0IHRoYXQgMjQyIGNhc2VzIHNsYXBwZWQgYnkgdGhlIEtlcmFsYSBwb2xpY2UgYWdhaW5zdCBoaW0gaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBTYWJhcmltYWxhIGlzc3VlIHdhcyBwYXJ0IG9mIHRoZSBnb3Zlcm5tZW50XHUyMDE5cyBhdHRlbXB0IHRvIHNpbGVuY2UgdGhvc2UgZmlnaHRpbmcgZm9yIHRoZSByaWdodHMgb2YgdGhlIGZhaXRoZnVsLiAgSWYgdGhlIGZhaXRoZnVsIGNvbnNpZGVyIHRoZSBwZXJzb25hbCBzdHJ1Z2dsZSB3YWdlZCBieSBoaW0gaW4gZGVmZW5kaW5nIHRoZSBjdXN0b21zIGFuZCB0cmFkaXRpb25zIG9mIHRoZSBTYWJhcmltYWxhIHRlbXBsZSBnZW51aW5lLCBLIFN1cmVuZHJhbiBzaG91bGQgd2luIHRoZSBlbGVjdGlvbiBoYW5kcyBkb3duLiBIb3dldmVyLCBpdCBpcyBubyBjYWtlIHdhbGsgZm9yIHRoZSBCSlAgY2FuZGlkYXRlLiAgTWFueSBvZiB0aGUgZmFpdGhmdWwgaGF2ZSBzdGFydGVkIHJlYWxpc2luZyB0aGF0IHRoZSBhZ2dyZXNzaXZlIHN0YW5kIHRoYXQgU3VyZW5kcmFuIGFuZCBoaXMgcGFydHkgaGFkIHRha2VuIGFnYWluc3QgdGhlIExERiBnb3Zlcm5tZW50XHUyMDE5cyBhdHRlbXB0IHRvIGltcGxlbWVudCB0aGUgYXBleCBjb3VydCB2ZXJkaWN0IHdhcyBub3QgYm9ybmUgb3V0IG9mIGdlbnVpbmUgY29uY2VybiBmb3IgZmFpdGggYnV0IGFpbWVkIGF0IHBvbGl0aWNhbCBjYXBpdGFsLiAgVGhlIE5haXIgU2VydmljZSBTb2NpZXR5IChOU1MpLCBhIGNvbW11bml0eSBvcmdhbmlzYXRpb24gb2YgdGhlIHVwcGVyIGNhc3RlIE5haXJzIHRoYXQgYXBwcmVjaWF0ZWQgdGhlIHN1cHBvcnQgZ2l2ZW4gYnkgdGhlIFNhbmdoIFBhcml2YXIgaW4gb3Bwb3NpbmcgdGhlIGVudHJ5IG9mIHlvdW5nIHdvbWVuIGluIHRoZSB0ZW1wbGUsIGhhcyBjaG9zZW4gbm90IHRvIHJlY2lwcm9jYXRlIHRoZSBzdXBwb3J0IGluIHRoZSBwb2xpdGljYWwgYXJlbmEuIFRoZSBvcmdhbmlzYXRpb24gdGhhdCBob2xkcyBzd2F5IG92ZXIgdGhlIDE0IHBlcmNlbnQgTmFpciBwb3B1bGF0aW9uIGluIHRoZSBkaXN0cmljdCBoYXMgZGVjaWRlZCB0byBjb250aW51ZSB3aXRoIGl0cyBwb2xpY3kgb2YgbWFpbnRhaW5pbmcgZXF1aS1kaXN0YW5jZSBmcm9tIGJvdGggdGhlIExlZnQgYW5kIHRoZSBSaWdodC4gIFNhYmFyaW1hbGEgS2FybWEgU2FtaXRoaSBwYXRyb24gU3dhbWkgQ2hpZGFuYW5kYXB1cmlcdTIwMTlzIGNhbGwgdG8gdGhlIEF5eWFwcGEgZGV2b3RlZXMgdG8gdm90ZSBmb3IgdGhlIENvbmdyZXNzLWxlZCBVbml0ZWQgRGVtb2NyYXRpYyBGcm9udFx1MjAxOXMgY2FuZGlkYXRlcyBpbiBjb25zdGl0dWVuY2llcyB3aGVyZSB0aGUgTkRBIGlzIHdlYWsgaGFzIGFsc28gY29tZSBhcyBhIHNldGJhY2sgdG8gdGhlIEJKUFx1MjAxOXMgZWZmb3J0cyB0byB1c2UgdGhlIGlzc3VlIHRvIHN0cmVuZ3RoZW4gdGhlIHBhcnR5IGJhc2UgaW4gdGhlIHN0YXRlLiAgVGhvdWdoIHRoZSBvcGluaW9uIG9uIHNvY2lhbCBtZWRpYSB3YXMgaW50ZW5kZWQgdG8gZW5zdXJlIHRoZSBkZWZlYXQgb2YgdGhlIExERiwgc2VuaW9yIEJKUCBsZWFkZXJzIGZlYXIgdGhhdCB0aGUgY29uZnVzaW9uIGl0IGNyZWF0ZXMgd2lsbCBhZmZlY3QgdGhlIHBhcnR5XHUyMDE5cyBwcm9zcGVjdHMgaW4gbWFyZ2luYWwgc2VhdHMuICBCSlAgd2FzIGNvdW50aW5nIG9uIHRoZSBzdXBwb3J0IG9mIE5TUyBmb3IgdGhlIHZpY3Rvcnkgb2YgU3VyZW5kcmFuIGF0IFBhdGhhbmFtdGhpdHRhLiBTb3VyY2VzIGluIHRoZSBvcmdhbmlzYXRpb24gc2FpZCB0aGF0IHRoZSBOU1MgbGVhZGVyc2hpcCB3YXMgbm90IGhhcHB5IHdpdGggdGhlIHdheSBTdXJlbmRyYW4sIGluIHBhcnRpY3VsYXIsIGFuZCB0aGUgc2FmZnJvbiBwYXJ0eSBpbiBnZW5lcmFsIGRyYWdnZWQgdGhlIGlzc3VlIGludG8gdGhlIHN0cmVldHMuIE5TUycgb2ZmaWNpYWwgam91cm5hbCBTZXJ2aWNlIGFjY3VzZWQgYWxsIHBvbGl0aWNhbCBwYXJ0aWVzIG9mIHRyeWluZyB0byB1c2UgU2FiYXJpbWFsYSBmb3IgdGhlaXIgZWxlY3RvcmFsIGdhaW5zLiAgVGhlIE5TUyBqb3VybmFsIGFsc28gZG91YnRzIHRoZSBzaW5jZXJpdHkgb2YgdGhlIEJKUCBpbiBmaW5kaW5nIGEgbGVnYWwgc29sdXRpb24gdG8gdGhlIGlzc3VlLiBJbiBpdHMgZWRpdG9yaWFsLCBTZXJ2aWNlIHNhaWQgdGhhdCB0aGUgcGFydHkgaGFkIHRyaWVkIHRvIHByZXZlbnQgd29tZW4gb24gdGhlIHN0cmVldHMgaW5zdGVhZCBvZiBwYXlpbmcgYXR0ZW50aW9uIHRvIHRoZSBsZWdhbCBtYXR0ZXJzLiBUaGUgTlNTIGxlYWRlcnNoaXAgaXMgYWxzbyBub3QgaW1wcmVzc2VkIGJ5IHRoZSBwcm9taXNlIGdpdmVuIGJ5IHRoZSBCSlAgaW4gaXRzIGVsZWN0aW9uIG1hbmlmZXN0byB0byBzZWN1cmUgY29uc3RpdHV0aW9uYWwgcHJvdGVjdGlvbiBvbiBpc3N1ZXMgcmVsYXRlZCB0byBmYWl0aCBhbmQgYmVsaWVmIHNpbmNlIGl0IGRpZCBub3RoaW5nIHRvIGZ1bGZpbCBpdHMgcHJvbWlzZSByZWdhcmRpbmcgdGhlIFJhbSB0ZW1wbGUgYXQgQXlvZGh5YSBkdXJpbmcgaXRzIHRlcm0uIEhlIHNhaWQgdGhhdCB0aGUgQkpQIGNhbm5vdCBmb29sIHRoZSBwZW9wbGUgaW4gS2VyYWxhIHdpdGggc3VjaCBlbXB0eSB3b3Jkcy4gIEJKUCBjYW4gd2luIHRoZSBzZWF0IG9ubHkgaWYgaXQgaXMgYWJsZSB0byBwb29sIHRoZSB2b3RlcyBvZiB0aGUgZW50aXJlIG1ham9yaXR5IGNvbW11bml0eSwgd2hpY2ggYWNjb3VudHMgZm9yIGFib3V0IDU3IHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24gaW4gdGhlIGRpc3RyaWN0LiBOb25lIGV4cGVjdHMgdGhlIGVudGlyZSBIaW5kdSB2b3RlcyB0byBmYWxsIGluIHRoZSBCSlAga2l0dHkgc2luY2UgYSBzdWJzdGFudGlhbCBjaHVuayBvZiB0aGVtIGhhdmUgYmVlbiB0cmFkaXRpb25hbCBzdXBwb3J0ZXJzIG9mIFVERiBhbmQgTERGIGFuZCBpdCB3b25cdTIwMTl0IGJlIGVhc3kgZm9yIHRoZW0gdG8gY2hhbmdlIHBvbGl0aWNhbCBhZmZpbGlhdGlvbnMgYmFzZWQgb24gb25lIGlzc3VlLiAgXHUyMDFjSSBrbm93IHdoYXQgdGhlIGdvdmVybm1lbnQgaGFzIGRvbmUgYXQgU2FiYXJpbWFsYSB3YXMgbm90IHJpZ2h0LiBJIGFtIGFsc28gaHVydCBieSB0aGUgaGFzdGUgd2l0aCB3aGljaCB0aGUgZ292ZXJubWVudCB0cmllZCB0byBpbXBsZW1lbnQgdGhlIFNDIHZlcmRpY3QuIEhvd2V2ZXIsIEkgY2Fubm90IHRoaW5rIG9mIGNoYW5naW5nIG15IHBvbGl0aWNhbCBhZmZpbGlhdGlvbiBhcyBJIGFuZCBteSBmYW1pbHkgaGF2ZSBiZWVuIHN1cHBvcnRpbmcgdGhlIENvbW11bmlzdCBQYXJ0eSBvZiBJbmRpYSBmcm9tIG15IGNoaWxkaG9vZC4gSSB3aWxsIHZvdGUgZm9yIHRoZSBwYXJ0eSBjYW5kaWRhdGUgdGhpcyB0aW1lIHRvbyxcdTIwMWQgc2FpZCBHb3ZpbmdhIFBpbGxhaSwgYSA3NS15ZWFyLW9sZCB0cmFkZXIgbmVhciBLb25uaS4gIEhvd2V2ZXIsIGhpcyB3aWZlIExhbGl0aGEgc2FpZCBzaGUgd291bGQgbm90IHZvdGUgZm9yIHRoZSBDUE0gdGhpcyB0aW1lLiBCdXQgc2hlIGhhcyBub3QgYmVlbiBhYmxlIHRvIGRlY2lkZSB3aGV0aGVyIHRvIHZvdGUgZm9yIEJKUCBvciBDb25ncmVzcy4gU2hlIHNhaWQgbWFueSBvZiBoZXIgZnJpZW5kcyBpbiB0aGUgYXJlYSB3ZXJlIGFsc28gY29uZnVzZWQgbGlrZSBoZXIuIFx1MjAxY1dlIHdpbGwgdGFrZSBhIGRlY2lzaW9uIGFmdGVyIHNlZWluZyB0aGUgY2FtcGFpZ24sXHUyMDFkIHNhaWQgTGFsaXRoYS4gIENvbmdyZXNzIGhhcyBiZWVuIHdpbm5pbmcgdGhlIHNlYXQgZXZlciBzaW5jZSB0aGUgY29uc3RpdHVlbmN5IHdhcyBjYXJ2ZWQgb3V0IGluIDIwMDkgd2l0aCB0aGUgc3VwcG9ydCBvZiBhIHNlY3Rpb24gb2YgdGhlIE5haXIgY29tbXVuaXR5IGFuZCB0aGUgbWlub3JpdGllcywgd2hvIGFjY291bnQgZm9yIDQzIHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24uIEhvd2V2ZXIsIHBhcnR5IGNhbmRpZGF0ZSBBbnRvIEFudG9ueVx1MjAxOXMgdmljdG9yeSBtYXJnaW4gc2F3IGEgZHJvcCBmcm9tIDEsMTEsMjA2IHZvdGVzIGluIDIwMDkgdG8gNTYsMTkxIHZvdGVzIGluIDIwMTQuICBUaGlzIHdhcyBtYWlubHkgZHVlIHRvIGFuIGltcHJvdmVkIHNob3dpbmcgYnkgdGhlIEJKUCwgd2hpY2ggaW5jcmVhc2VkIGl0cyB2b3RlIHNoYXJlIGZyb20gNy4wOCBwZXJjZW50IHRvIDE1Ljk4IHBlcmNlbnQgdm90ZXMgZHVyaW5nIHRoZSBwZXJpb2QuIEEgc3dpbmcgaW4gbWlub3JpdHkgdm90ZXMgaW4gdGhlIDIwMTYgQXNzZW1ibHkgZWxlY3Rpb24gc2F3IHRoZSBMREYgd2lubmluZyBmb3VyIEFzc2VtYmx5IHNlZ21lbnRzLiAgSG93ZXZlciwgdGhlIENvbmdyZXNzIGNhbXAgZXhwZWN0cyB0aGF0IHRoZSBtb2RlcmF0ZSBzZWN0aW9ucyBvZiB0aGUgbWFqb3JpdHkgY29tbXVuaXR5IHdpbGwgc3VwcG9ydCB0aGUgVURGLCBtYWtpbmcgQW50b1x1MjAxOXMgdmljdG9yeSBlYXN5LiBUaGUgTERGIGNhbXAgaXMgcGlubmluZyB0aGVpciBob3BlIG9uIHRoZSBwcm9ncmVzc2l2ZSBzZWN0aW9ucyBvZiB0aGUgc29jaWV0eS4gQSB0b3VyIGFjcm9zcyB0aGUgY29uc3RpdHVlbmN5LCBjb21wcmlzaW5nIGZvdXIgQXNzZW1ibHkgc2VnbWVudHMgaW4gUGF0aGFuYW10aGl0dGEgZGlzdHJpY3QgYW5kIHR3byBpbiBLb3R0YXlhbSBkaXN0cmljdCwgc2hvdyB0aGVpciBudW1iZXIgdG9vIHNob3J0IGZvciBhIHZpY3RvcnkgZm9yIFZlZW5hIEdlb3JnZSwgdGhlIExERiBjYW5kaWRhdGUuICBUaGUgZmlnaHQgaW4gUGF0aGFuYW10aGl0dGEgaXMgYmV0d2VlbiBCSlAgYW5kIHRoZSBDb25ncmVzcy4gSXQgaXMgdG9vIGVhcmx5IHRvIHByZWRpY3Qgd2hvIHdpbGwgaGF2ZSB0aGUgbGFzdCBsYXVnaCBpbiB0aGlzIGV4dHJlbWVseSBjbG9zZSBmaWdodC4gIFlvdXIgZ3VpZGUgdG8gdGhlIGxhdGVzdCBlbGVjdGlvbiBuZXdzLCBhbmFseXNpcywgY29tbWVudGFyeSwgbGl2ZSB1cGRhdGVzIGFuZCBzY2hlZHVsZSBmb3IgTG9rIFNhYmhhIEVsZWN0aW9ucyAyMDE5IG9uIGZpcnN0cG9zdC5jb20vZWxlY3Rpb25zLiBGb2xsb3cgdXMgb24gVHdpdHRlciBhbmQgSW5zdGFncmFtIG9yIGxpa2Ugb3VyIEZhY2Vib29rIHBhZ2UgZm9yIHVwZGF0ZXMgZnJvbSBhbGwgNTQzIGNvbnN0aXR1ZW5jaWVzIGZvciB0aGUgdXBjb21pbmcgZ2VuZXJhbCBlbGVjdGlvbnMuIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTkiLCAidGl0bGUiOiAiTG9rIFNhYmhhIHBvbGxzOiBCSlAgdHJ5aW5nIHRvIG1pbGsgU2FiYXJpbWFsYSBpc3N1ZSBmb3Igdm90ZXMsIGJ1dCB3aW5uaW5nIFBhdGhhbmFtdGhpdHRhIHNlYXQgd2lsbCBiZSB0b3VnaCAtIEZpcnN0cG9zdCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkVuZ2FnZSBpbiBuZWdvdGlhdGlvbiIsICIgY29uZ3Jlc3MgIiwgIiBlbGVjdGlvbiJdLCAiY291bnRyaWVzIjogWyJJTkRJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siMTMuMDgzMyIsICI4MC4yODMzIl1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmluZGlhdGltZXMuY29tL25ld3MvaW5kaWEvYWxsLWluLXRoZS1mYW1pbHktcmF2aW5kcmEtamFkZWphLXMtZmF0aGVyLXNpc3Rlci1qb2luLWNvbmdyZXNzLXdpZmUtYWxyZWFkeS1hLWJqcC1sZWFkZXItMzY1NDQyLmh0bWwiLCAiY29udGVudCI6ICJBbGwgSW4gVGhlIEZhbWlseTogUmF2aW5kcmEgSmFkZWphJ3MgRmF0aGVyICYgU2lzdGVyIEpvaW4gQ29uZ3Jlc3MsIFdpZmUgQWxyZWFkeSBBIEJKUCBMZWFkZXIgIEFsbCBJbiBUaGUgRmFtaWx5OiBSYXZpbmRyYSBKYWRlamEncyBGYXRoZXIgJiBTaXN0ZXIgSm9pbiBDb25ncmVzcywgV2lmZSBBbHJlYWR5IEEgQkpQIExlYWRlciAgVGhlcmUgYXJlIHRpbWVzIHdoZW4gdGhlcmVcdTIwMTlzIGhhcmRseSBhbnkgZGlmZmVyZW5jZSBiZXR3ZWVuIGZhbWlseSBwb2xpdGljcyBhbmQgcGFydHkgcG9saXRpY3MuIFRlYW0gSW5kaWEgQWxsLXJvdW5kZXIgUmF2aW5kcmEgSmFkZWphXHUyMDE5cyBmYW1pbHkgaXMgcHJvYmFibHkgaGF2aW5nIHRoZSBzYW1lIG1vbWVudCBhcyBoaXMgZmFtaWx5IG1lbWJlcnMgaGF2ZSBjaG9zZW4gZGlmZmVyZW50IHBvbGl0aWNhbCBwYXJ0aWVzIHRvIGdvIHdpdGggaW4gdGhlIG9uZ29pbmcgZWxlY3Rpb25zIGZvciBMb2sgU2FiaGEuICBJZiB0aGUgcmVwb3J0cyBhcmUgdG8gYmUgYmVsaWV2ZWQsIGp1c3QgYSBmZXcgd2Vla3MgYWZ0ZXIgSmFkZWphXHUyMDE5cyB3aWZlIFJpdmFiYSBTb2xhbmtpIGpvaW5lZCBBbWl0IFNoYWgtbGVkIEJoYXJ0aXlhIEphbnRhIFBhcnR5LCB0d28gaW1wb3J0YW50IG1lbWJlcnMgZnJvbSBoaXMgZmFtaWx5IGhhdmUgam9pbmVkIENvbmdyZXNzLiAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIEphZGVqYVx1MjAxOXMgZmF0aGVyIEFuaXJ1ZGhzaW5oIEphZGVqYSBhbmQgTmF5bmFiYSBqb2luZWQgdGhlIENvbmdyZXNzIGluIEthbGF2YWQgY2l0eSBvZiBKYW1uYWdhciBkaXN0cmljdC4gVGhleSBkaWQgc28gaW4gdGhlIHByZXNlbmNlIG9mIGZpcmVicmFuZCBQYXRpZGFyIGxlYWRlciBIYXJkaWsgUGF0ZWwuICBIaXMgZmFtaWx5LCBpcyBhcHBhcmVudGx5IHVuaGFwcHkgd2l0aCBCSlAgb3ZlciBub3QgZnVsZmlsbGluZyB0aGUgcHJvbWlzZXMgbWFkZSB0byB0aGUgcGVvcGxlIGluIDIwMTQuICBFYXJsaWVyLCBNcnMgSmFkZWphIGpvaW5lZCB0aGUgQkpQIGZpdmUgbW9udGhzIGFmdGVyIHNoZSB3YXMgYXBwb2ludGVkIHRoZSBjaGllZiBvZiB3b21lblx1MjAxOXMgd2luZyBvZiBLYXJuaSBTZW5hIHRoYXQgaGFkIHByb3Rlc3RlZCB0aGUgcmVsZWFzZSBvZiBIaW5kaSBtb3ZpZSBQYWRtYXZhYXQuICBcdTIwMWNIaXMgcGVyc29uYWxpdHksIGhpcyBpZGVudGl0eSwgdGhlIHdheSBoZSBoYXMgbGVkIHRoZSBuYXRpb24sIGhpcyB2aXNpb24gZm9yIHRoZSBjb3VudHJ5IGFuZCB0aGUgaWRlbnRpdHkgb2YgSGluZHVzdGFuIGhlIGhhcyBjYXJ2ZWQgb3V0IGluIHRoZSB3b3JsZCwgaXQgaXMgYSBtYXR0ZXIgb2YgcHJpZGUgZm9yIGV2ZXJ5IGNpdGl6ZW4sXHUyMDFkIHNoZSB0b2xkIFRoZSBJbmRpYW4gRXhwcmVzcy4gIEphZGVqYSBpcyBjdXJyZW50bHkgcmVwcmVzZW50aW5nIENoZW5uYWkgU1VwZXIgS2luZ3MgaW4gdGhlIG9uZ29pbmcgZWRpdGlvbiBvZiB0aGUgSW5kaWEgUHJlbWllciBMZWFndWUuIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTkiLCAidGl0bGUiOiAiQWxsIEluIFRoZSBGYW1pbHk6IFJhdmluZHJhIEphZGVqYSdzIEZhdGhlciAmIFNpc3RlciBKb2luIENvbmdyZXNzLCBXaWZlIEFscmVhZHkgQSBCSlAgTGVhZGVyIn0KCg==eyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgImRldGFpbiIsICJkZXRhaW4iLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIklORE9ORVNJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siNC4zNDM5IiwgIjk2LjAzMzgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cubWFsYXltYWlsLmNvbS9uZXdzL21hbGF5c2lhLzIwMTkvMDQvMTQvZm91ci1jaGlsZHJlbi1hbW9uZy0xMDAtZm9yZWlnbmVycy1kZXRhaW5lZC1pbi1zaGFoLWFsYW0vMTc0MzIzNiIsICJjb250ZW50IjogIlNIQUggQUxBTSwgQXByaWwgMTQgXHUyMDE0IEZvdXIgY2hpbGRyZW4gd2VyZSBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBieSB0aGUgU2VsYW5nb3IgSW1taWdyYXRpb24gRGVwYXJ0bWVudCBpbiBhIGZvdXItaG91ciBpbnRlZ3JhdGVkIG9wZXJhdGlvbiBjb25kdWN0ZWQgYXJvdW5kIFNoYWggQWxhbSB5ZXN0ZXJkYXkuICBJdHMgZGlyZWN0b3IsIE1vaGFtYWQgU2h1a3JpIE5hd2ksIHNhaWQgdGhlIG9wZXJhdGlvbiB3aGljaCBiZWdhbiBhcm91bmQgMTIgbWlkbmlnaHQgYW5kIHBhcnRpY2lwYXRlZCBieSA5NiBwZXJzb25uZWwgd2FzIGNvbmNlbnRyYXRlZCBvbiBmb3JlaWduIHdvcmtlcnNcdTIwMTkgbGl2aW5nIHF1YXJ0ZXJzIGluIFBhZGFuZyBKYXdhIGFuZCBLb3RhIEtlbXVuaW5nIGFyZWFzLiAgSGUgc2FpZCBkdXJpbmcgdGhlIG9wZXJhdGlvbiA0MzAgZm9yZWlnbmVycyB3ZXJlIHF1ZXN0aW9uZWQgYW5kIG9mIHRoZSB0b3RhbCA5NCBtZW4sIHR3byB3b21lbiBhbmQgZm91ciBjaGlsZHJlbiB3ZXJlIGRldGFpbmVkIGZvciB2YXJpb3VzIG9mZmVuY2VzLiAgXHUyMDFjVGhlIGZvcmVpZ25lcnMgYWdlZCBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQgYXJlIGZyb20gSW5kb25lc2lhLCBCYW5nbGFkZXNoLCBNeWFubWFyLCBJbmRpYSwgTmVwYWwsIFBha2lzdGFuIGFuZCBWaWV0bmFtLiAgXHUyMDFjVGhlIGNoaWxkcmVuLCB0aHJlZSBib3lzIGFuZCBhIGdpcmwgYWdlZCBiZXR3ZWVuIGZvdXIgbW9udGhzIGFuZCB0d28geWVhcnMgYXJlIEluZG9uZXNpYW5zLFx1MjAxZCBoZSBzYWlkIGluIGEgc3RhdGVtZW50IGhlcmUgdG9kYXkuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTAiLCAidGl0bGUiOiAiRm91ciBjaGlsZHJlbiBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBpbiBTaGFoIEFsYW0gfCBNYWxheSBNYWlsIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiTWFrZSBhIHZpc2l0IiwgImFycmVzdCIsICJhcnJlc3QiLCAiaW52ZXN0aWdhdCIsICJtaXNzaW5nIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxNy4zNzUzIiwgIjc4LjQ3NDQiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly9tZW5hZm4uY29tLzEwOTgzODc1MDIvSHlkZXJhYmFkLUJveWZyaWVuZC1tdXJkZXJzLXRlY2hpZS1zdHVmZnMtYm9keS1pbi1zdWl0Y2FzZS1hcnJlc3RlZCIsICJjb250ZW50IjogIk9uIFN1bmRheSwgcG9saWNlIGZvdW5kIGEgYm9keSBzdHVmZmVkIGluc2lkZSBhIHN1aXRjYXNlIGluIE1lZGNoYWwgYXJlYSwgd2hpY2ggaXMgYWJvdXQgb25lIGhvdXIgYXdheSBmcm9tIEh5ZGVyYWJhZC4gIEFmdGVyIGFuIGluaXRpYWwgaW52ZXN0aWdhdGlvbiwgcG9saWNlIGxlYXJuZWQgdGhlIGJvZHkgd2FzIExhdmFueWEncywgYSAyNS15ZWFyLW9sZCB0ZWNoaWUgd2hvIHdlbnQgbWlzc2luZyBhIGZldyBkYXlzIGFnby4gIFN1YnNlcXVlbnRseSwgcG9saWNlIGFycmVzdGVkIGhlciBib3lmcmllbmQgU3VuaWwgZm9yIGtpZG5hcHBpbmcgYW5kIGtpbGxpbmcgdGhlIHZpY3RpbS4gQSBjYXNlIHVuZGVyIElQQyBTZWN0aW9uIDMwMiAobXVyZGVyKSB3YXMgcmVnaXN0ZXJlZC4gIExhdmFueWEgYW5kIFN1bmlsIGtuZXcgZWFjaCBvdGhlciBzaW5jZSBjb2xsZWdlICAgIEFmZmFpciAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIExhdmFueWEgd2FzIGFuIGVuZ2luZWVyIGZyb20gR2FjaGlib3dsaSBhbmQgd2FzIGluIGxvdmUgd2l0aCBTdW5pbCwgd2hvIHdhcyBhIHN0cnVjdHVyYWwgZW5naW5lZXIuIFRoZSBkdW8gbWV0IGluIGNvbGxlZ2UgYW5kIGdyZXcgY2xvc2UuICBBcHBhcmVudGx5LCBMYXZhbnlhIHdhbnRlZCBTdW5pbCB0byBtYXJyeSBoZXIgYnV0IGhlIGtlcHQgZGVsYXlpbmcgaXQuICBMYXRlciwgaGUgdG9sZCBMYXZhbnlhIGFuZCBoZXIgcGFyZW50cyB0aGF0IGhlIGdvdCBhIGpvYiBpbiBNdXNjYXQuIFN1bmlsIGNvbnZpbmNlZCBMYXZhbnlhJ3MgcGFyZW50cyB0byBhbGxvdyBoZXIgdG8gZ28gd2l0aCBoaW0uICBTdW5pbCB0b29rIExhdmFueWEgdG8gYSBsb2RnZSBhbmQgYWxsZWdlZGx5IGtpbGxlZCBoZXIgICAgTXVyZGVyICBPbiBBcHJpbCA0LCBMYXZhbnlhJ3MgZmFtaWx5IGRyb3BwZWQgaGVyIGF0IFJHSSBBaXJwb3J0IGluIEh5ZGVyYWJhZCBmb3IgaGVyIGpvdXJuZXkgdG8gTXVzY2F0LiAgQWZ0ZXIgaGVyIGZhbWlseSBtZW1iZXJzIGxlZnQsIFN1bmlsIHJlcG9ydGVkbHkgY29udmluY2VkIExhdmFueWEgdG8gY29tZSB3aXRoIGhpbSB0byBhIGxvZGdlLCB3aGVyZSBoZSBhbGxlZ2VkbHkga2lsbGVkIGhlci4gIFwiSGUgdGhyb3R0bGVkIGhlciBhdCB0aGUgbG9kZ2UgYW5kIHN0dWZmZWQgdGhlIGJvZHkgaW4gYSBzdWl0Y2FzZSxcIiBSQyBQdXJhbSBpbnNwZWN0b3IgUiBSYW1hIENoYW5kcmEgUmFvIHRvbGQgVE9JLiAgU3VuaWwgcG9zZWQgYXMgTGF2YW55YSB0byBzcGVhayB0byBoZXIgc2lzdGVyICAgIENoYXR0aW5nICBOb3RhYmx5LCBMYXZhbnlhIGhhZCB0b2xkIGhlciBwYXJlbnRzIHRoYXQgc2hlIHdvdWxkIHJldHVybiBmcm9tIE11c2NhdCBieSBBcHJpbCA3LiBIZXIgc2lzdGVyIHNlbnQgaGVyIHRleHRzIG9uIFdoYXRzQXBwIGFuZCBTdW5pbCByZXBsaWVkIHBvc2luZyBhcyBMYXZhbnlhLiAgT24gQXByaWwgNywgaGUgc3dpdGNoZWQgb2ZmIGhlciBwaG9uZSBwcm9tcHRpbmcgaGVyIHBhcmVudHMgdG8gbG9kZ2UgYSBtaXNzaW5nIHBlcnNvbiBjb21wbGFpbnQuICBCYXNlZCBvbiBMYXZhbnlhJ3MgY2FsbCByZWNvcmRzLCBwb2xpY2UgemVyb2VkIGluIG9uIFN1bmlsLCB3aG8gaGFpbHMgZnJvbSBCaWhhciwgYXMgYSBzdXNwZWN0LiAgUmVwb3J0ZWRseSwgU3VuaWwgaGlkIExhdmFueWEncyBib2R5IGJlbmVhdGggYSBjdWx2ZXJ0IGluIGEgZHJhaW4uIFdoZW4gbG9jYWxzIHNhdyB0aGUgc3VzcGljaW91cyBzdWl0Y2FzZSwgdGhleSBhbGVydGVkIHBvbGljZS4gU3VuaWwgcmVwb3J0ZWRseSB0b2xkIHBvbGljZSBvZmZpY2VycyBoZSBtdXJkZXJlZCBMYXZhbnlhIGFzIHNoZSB3YXMgcHJlc3N1cml6aW5nIGhpbSB0byBnZXQgbWFycmllZC4gSGUgaGFzIGJlZW4gY2hhcmdlZCB3aXRoIG11cmRlciBhbmQga2lkbmFwcGluZy4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToxMiIsICJ0aXRsZSI6ICJIeWRlcmFiYWQ6IEJveWZyaWVuZCBtdXJkZXJzIHRlY2hpZSwgc3R1ZmZzIGJvZHkgaW4gc3VpdGNhc2UgYXJyZXN0ZWQifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgIm9wZXJhdGlvbiIsICJ0YXJnZXQiXSwgImNvdW50cmllcyI6IFsiSkFQQU4iXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjM1LjczMDIiLCAiMTM5LjcxMSJdXSwgInNvdXJjZSI6ICJodHRwOi8vd3d3Lm12YXJpZXR5LmNvbS9jbm1pL2NubWktbmV3cy9sb2NhbC8xMTIwMTEtdGV0ZXRvLWJlYWNoLWlzLTEtYWdhaW4tYXQtamFwYW4tbWFyaW5lLWRpdmluZy1mYWlyIiwgImNvbnRlbnQiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciAgKE1WQSkgXHUyMDE0IEZvciB0aGUgc2Vjb25kIHN0cmFpZ2h0IHllYXIsIFRldGV0byBCZWFjaCBvbiB0aGUgaXNsYW5kIG9mIFJvdGEgaW4gdGhlIE1hcmlhbmFzIHdhcyBzZWxlY3RlZCBhcyB0aGUgTm8uIDEgUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaCBhdCB0aGUgRGl2ZSBhbmQgVHJhdmVsIEF3YXJkcyBvZiB0aGUgYW5udWFsIE1hcmluZSBEaXZpbmcgRmFpciBpbiBKYXBhbiBvbiBBcHJpbCA1LTcsIDIwMTkuICBJbiBhZGRpdGlvbiwgTWVndW1pIFRha2FrdSBvZiBCbHVlIFBhbG1zIERpdmUgU2VydmljZSBSb3RhIHdvbiAxc3QgcGxhY2UgUmVhZGVyc1x1MjAxOSBDaG9pY2UgRmF2b3JpdGUgRGl2ZSBHdWlkZSwgT3ZlcnNlYXMsIGFkZGluZyBhY2NvbGFkZXMgdG8gaGVyIDJuZCBwbGFjZSBsYXN0IHllYXIsIGFuZCBCbHVlIFBhbG1zIHdvbiAybmQgcGxhY2UsIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEZhdm9yaXRlIERpdmUgT3BlcmF0b3IsIE92ZXJzZWFzLiAgXHUyMDFjT25jZSBhZ2FpbiwgUm90YSBpcyBzZXR0aW5nIHRoZSBzdGFuZGFyZCBpbiB0aGUgaW5kdXN0cnkgZm9yIGV4dHJhb3JkaW5hcnkgZGl2ZSBhbmQgYmVhY2ggZXhwZXJpZW5jZXMgYW5kIGV4Y2VwdGlvbmFsIGN1c3RvbWVyIGNhcmUsXHUyMDFkIHNhaWQgTWFyaWFuYXMgVmlzaXRvcnMgQXV0aG9yaXR5IE1hbmFnaW5nIERpcmVjdG9yIENocmlzdG9waGVyIEEuIENvbmNlcGNpb24uIFx1MjAxY1x1MjAxY0ksIG15c2VsZiwgaGF2ZSBoYWQgdGhlIHByaXZpbGVnZSBvZiBkaXZpbmcgaW4gUm90YSwgYW5kIEkgaGF2ZSB0byBzYXkgdGhhdCBSb3RhIGhhcyB0aGUgYmVzdCB2aXNpYmlsaXR5IG9mIGFueSBvZiB0aGUgaXNsYW5kcyBpbiB0aGUgTWFyaWFuYXMuIFRoZSBjb3JhbCByZWVmcywgc2VhIGxpZmUgYW5kIHVuaXF1ZSB1bmRlcndhdGVyIGZvcm1hdGlvbnMgbWFrZSBSb3RhIGEgZGl2ZSBoYXZlbi4gV2UgY2FuIGFsbCBsb29rIHRvIHRoZSBjYXJlIG9mIHRoZSBSb3RhIGNvbW11bml0eSBmb3IgdGhlIGNsZWFubGluZXNzIGFuZCBwcm90ZWN0aW9uIG9mIHRoZWlyIG5hdHVyYWwgcmVzb3VyY2VzIGFuZCB0byB0aGVpciBob3NwaXRhbGl0eSBhbmQgY2FyZSBmb3IgZWFjaCB2aXNpdG9yIGFzIGFuIGV4YW1wbGUgb2Ygd2hhdCB3ZSBjYW4gb2ZmZXIgdmlzaXRvcnMgdG8gZWFjaCBvZiB0aGUgaXNsYW5kcyBvZiB0aGUgTWFyaWFuYXMuIFdlIGhhdmUgbXVjaCB0byBiZSBwcm91ZCBvZi5cdTIwMWQgIEluIGFkZGl0aW9uLCBTYWlwYW4sIFRpbmlhbiwgYW5kIFJvdGEgY29tYmluZWQgd29uIDR0aCBwbGFjZSBmb3IgdGhlIHNlY29uZCB5ZWFyIGluIGEgcm93IGFzIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEJlc3QgRGl2aW5nIEFyZWEsIE92ZXJzZWFzLCBhbmQgTWFuYWdhaGEgd29uIDEwdGggcGxhY2UgaW4gUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaC4gIERpdmluZyBvcHBvcnR1bml0aWVzIG9uIFJvdGEgYW5kIHRocm91Z2hvdXQgdGhlIE1hcmlhbmFzIHdlcmUgdG91dGVkIGJ5IE1WQSB0byBvdmVyIDUwLDAwMCBhdHRlbmRlZXMgYXQgdGhlIGZhaXIsIHdoaWNoIGlzIEphcGFuXHUyMDE5cyBsZWFkaW5nIGNvbnN1bWVyIGRpdmluZyBzaG93LCB0YXJnZXRpbmcgY29uc3VtZXJzIGFuZCB0cmFkZSByZXByZXNlbnRhdGl2ZXMgaW4gSmFwYW4gYW5kIG90aGVyIEFzaWFuIGNvdW50cmllcy4gVGhlIGZhaXIgd2FzIGhlbGQgYXQgSWtlYnVrdXJvIFN1bnNoaW5lIENpdHkgQ29udmVudGlvbiBDZW50ZXIgaW4gVG9reW8uICBNVkEgaG9zdGVkIGFuIGluZm9ybWF0aW9uIGJvb3RoIGF0IHRoZSBldmVudCBpbiB0aGUgXHUyMDFjT2NlYW4sIElzbGFuZHMgYW5kIFRyYXZlbFx1MjAxZCBzZWN0aW9uLiBNVkEgc2hvd2VkIHRoZSBtb3ZpZSBcdTIwMWNEaXZpbmcgaW4gdGhlIE1hcmlhbmFzLFx1MjAxZCBkaXN0cmlidXRlZCBkaXZpbmcgbWFwcyBhbmQgbGVhZmxldHMsIGlzbGFuZCBtYXBzLCBhbmQgb3RoZXIgbWF0ZXJpYWw7IGFuZCBhbnN3ZXJlZCBxdWVzdGlvbnMgZnJvbSBhdHRlbmRlZXMgYXQgdGhlIHNob3csIHdoaWNoIGF0dHJhY3RlZCAxMDAgZXhoaWJpdG9ycyByZXByZXNlbnRpbmcgZGVzdGluYXRpb25zLCBkaXZpbmcgc2hvcHMsIHVuZGVyd2F0ZXIgY2FtZXJhIG1hbnVmYWN0dXJlcnMsIGFuZCBvdGhlciBhcmVhcyBvZiB0aGUgaW5kdXN0cnkuICBJbiBjb29wZXJhdGlvbiB3aXRoIE1WQSwgdGhlIGV2ZW50IHdhcyBhbHNvIGF0dGVuZGVkIGJ5IGZvdXIgbWVtYmVycyBvZiB0aGUgTm9ydGhlcm4gTWFyaWFuYXMgRGl2aW5nIE9wZXJhdGlvbnMgQXNzb2NpYXRpb24uIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTQiLCAidGl0bGUiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIllpZWxkLCBub3Qgc3BlY2lmaWVkIGJlbG93IiwgIiBjb25ncmVzcyAiLCAiIGVsZWN0aW9uIiwgIiBhdHRhY2sgIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxMS44MzMzIiwgIjc1LjU2NjciXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cuZmlyc3Rwb3N0LmNvbS9wb2xpdGljcy9sb2stc2FiaGEtcG9sbHMtYmpwLXRyeWluZy10by1taWxrLXNhYmFyaW1hbGEtaXNzdWUtZm9yLXZvdGVzLWJ1dC13aW5uaW5nLXBhdGhhbmFtdGhpdHRhLXNlYXQtd2lsbC1iZS10b3VnaC02NDQ3MDUxLmh0bWwiLCAiY29udGVudCI6ICJLYWxhdmF0aGkgd2FzIHNjYXJlZCB3aGVuIHNoZSB3YXMgYXNrZWQgdG8gam9pbiBhIGdyb3VwIG9mIHJlbGF0aXZlcyBhbmQgZnJpZW5kcyB0byBnbyB0byBTYWJhcmltYWxhIGluIFBhdGhhbmFtdGhpdHRhIGRpc3RyaWN0IG9mIEtlcmFsYSBmb3IgVmlzaHVrYW5pIGRhcnNoYW4gYXQgdGhlIExvcmQgQXl5YXBwYSB0ZW1wbGUgb24gMTUgQXByaWwuIFRoZSAzMi15ZWFyLW9sZCB3b21hbiBmcm9tIENvaW1iYXRvcmUgaW4gVGFtaWwgTmFkdSBmb3VuZCBoZXIgZmVhcnMgbWlzcGxhY2VkIHdoZW4gc2hlIGZvdW5kIG5vbmUgdG8gYmxvY2sgaGVyIGF0IHRoZSBOaWxha2thbCBiYXNlIGNhbXAgb24gdGhlIGV2ZSBvZiB0aGUgVmlzaHUsIHRoZSBNYWxheWFsYW0gTmV3IFllYXIgZGF5LiAgVGhpcyB3YXMgbm90IHRoZSBjYXNlIHNpeCBtb250aHMgYWdvLCB3aGVuIHdvcmtlcnMgb2YgcmlnaHQtd2luZyBvdXRmaXRzIGZvcmNlZCB0aGUgd29tZW4gd2hvIGJldHdlZW4gMTAgYW5kIDUwIHllYXJzIG9mIGFnZSB0byByZXR1cm4uIFRoZSBwcm90ZXN0ZXJzIGhhZCBhbHNvIHRha2VuIHBvc2l0aW9uIGF0IG90aGVyIGVudHJ5IHBvaW50cyBhbmQgdGhlIGVudGlyZSBoaWxsb2NrIHRvIGVuc3VyZSB0aGF0IG5vIG1lbnN0cnVhdGluZyB3b21lbiBlbnRlcmVkIHRoZSB0ZW1wbGUuICBUaGUgcHJvdGVzdHMgZm9sbG93aW5nIHRoZSAyOCBTZXB0ZW1iZXIgU3VwcmVtZSBDb3VydCB2ZXJkaWN0IGFsbG93aW5nIHdvbWVuIG9mIGFsbCBhZ2VzIHRvIGVudGVyIHRoZSB0ZW1wbGUgdHVybmVkIHZpb2xlbnQgbW9zdCB3aGVuIHRoZSB0ZW1wbGUgd2FzIG9wZW5lZCBmb3IgdGhlIG1vbnRobHkgcHVqYSBhbmQgZHVyaW5nIHRoZSBtYWluIHBpbGdyaW0gc2Vhc29uLiBIdW5kcmVkcyBvZiBwZW9wbGUsIGluY2x1ZGluZyBwb2xpY2UgYW5kIG1lZGlhIHBlcnNvbm5lbCwgaGFkIGNvbWUgdW5kZXIgYXR0YWNrIGZyb20gdGhlIHNlbGYtc3R5bGVkIGd1YXJkaWFucyBvZiB0aGUgY3VzdG9tcyBhbmQgdHJhZGl0aW9ucyBvZiB0aGUgdGVtcGxlLiAgS2FsYXZhdGhpIHdhcyBhZnJhaWQgdG8gdmlzaXQgU2FiYXJpbWFsYSBhcyBzaGUgaGFkIHJlYWQgcmVwb3J0cyBhYm91dCB0aGUgdmlvbGVuY2UuIEhvd2V2ZXIsIHNoZSB3YXMgcmVsaWV2ZWQgd2hlbiBzaGUgZGlkIG5vdCBmaW5kIGFueSBwcm90ZXN0ZXJzIGluIHRoZSB2aWNpbml0eSBvZiBTYWJhcmltYWxhIHdoZW4gdGhleSBhcnJpdmVkIGFzIE5pbGFra2FsLiBQb2xpY2UgcGVyc29ubmVsIHBvc3RlZCBhdCB0aGUgYmFzZSBjYW1wIHNhaWQgdGhhdCBwcm90ZXN0ZXJzIGJlbG9uZ2luZyB0byBhbGwgcG9saXRpY2FsIGh1ZXMgaGFkIGRpc2FwcGVhcmVkIGZyb20gdGhlIGhpbGwgc2hyaW5lIGZvbGxvd2luZyB0aGUgYW5ub3VuY2VtZW50IG9mIHRoZSBlbGVjdGlvbi4gIFx1MjAxY1RoZXkgc2VlbSB0byBoYXZlIGFiYW5kb25lZCBBeXlhcHBhIGZvciB0aGUgc2FrZSBvZiB2b3Rlcy4gSXQgaXMgbm93IGNsZWFyIHRoYXQgYWxsIHRoZSBkcmFtYSB0aGF0IFNhYmFyaW1hbGEgd2l0bmVzc2VkIGFmdGVyIHRoZSBTdXByZW1lIENvdXJ0IHBhc3NlZCB0aGUgb3JkZXIgd2FzIHBvbGl0aWNhbCxcdTIwMWQgc2FpZCBhbiBvZmZpY2VyIHdobyBkaWQgbm90IHdhbnQgdG8gYmUgaWRlbnRpZmllZC4gIEJoYXJhdGl5YSBKYW5hdGEgUGFydHkgZ2VuZXJhbCBzZWNyZXRhcnkgSyBTdXJlbmRyYW4sIHdobyB3YXMgYXQgdGhlIGZvcmVmcm9udCBvZiB0aGUgcHJvdGVzdHMsIGlzIG5vdyB0aGUgQkpQIGNhbmRpZGF0ZSBpbiB0aGUgUGF0aGFuYW10aGl0dGEgTG9rIFNhYmhhIGNvbnN0aXR1ZW5jeS4gV2hlbiBhc2tlZCB3aHkgdGhleSBoYXZlIGRyb3BwZWQgdGhlIHZpZ2lsIGF0IFNhYmFyaW1hbGEsIGhlIHNhaWQgdGhleSBkaWQgbm90IGZlZWwgdGhlIG5lZWQgZm9yIHRoZSBzYW1lIGFzIHRoZSBMZWZ0IEZyb250IGdvdmVybm1lbnQgaXRzZWxmIGhhZCBhYmFuZG9uZWQgdGhlaXIgZGVjaXNpb24gdG8gdGFrZSB3b21lbiBvZiB0aGUgZm9yYmlkZGVuIGFnZSB0byBTYWJhcmltYWxhLiAgXHUyMDFjV2UgaGFkIGVudGVyZWQgdGhlIHNjZW5lIGFmdGVyIENoaWVmIE1pbmlzdGVyIFBpbmFyYXlpIFZpamF5YW4gYXBwZWFyZWQgYWRhbWFudCBpbiBpbXBsZW1lbnRpbmcgdGhlIGFwZXggY291cnQgdmVyZGljdC4gSGUgaGFzIHJlYWxpc2VkIHRoZSBmb2xseSBvZiBoaXMgZGVjaXNpb24gYW5kIGhhcyByZWZyYWluZWQgZnJvbSB0YWtpbmcgeW91bmcgd29tZW4gdG8gdGhlIGhpbGwgc2hyaW5lLiBUaGVyZWZvcmUsIHRoZXJlIGlzIG5vIG5lZWQgZm9yIHVzIHRvIGd1YXJkIHRoZSB0ZW1wbGUgbm93LFx1MjAxZCBoZSBzYWlkLiAgU3VyZW5kcmFuIHNhaWQgdGhhdCB0aGUgcHJvdGVzdHMgdGhleSBvcmdhbmlzZWQgaGFkIGFsc28gY3JlYXRlZCBhd2FyZW5lc3MgYW1vbmcgdGhlIGRldm90ZWVzIGFib3V0IHRoZSBldmlsIGRlc2lnbnMgb2YgdGhlIGdvdmVybm1lbnQuIFx1MjAxY1RoZXkgdGhlbXNlbHZlcyBhcmUgY29taW5nIGZvcndhcmQgdG8gcHJvdGVjdCB0aGUgY3VzdG9tcyBhbmQgdHJhZGl0aW9ucyBvZiB0aGUgdGVtcGxlIHdpdGhvdXQgYW55Ym9keSBwcm9tcHRpbmcgdGhlbSxcdTIwMWQgaGUgYWRkZWQuICBIb3dldmVyLCBTdXJlbmRyYW4gYW5kIGhpcyBwYXJ0eSBhcmUgbm90IHJlYWR5IHRvIGxlYXZlIFNhYmFyaW1hbGEgaW4gdGhlIGVsZWN0aW9uLCBkZXNwaXRlIGEgYmFyIG9uIGludm9raW5nIHRoZSBuYW1lcyBvZiBMb3JkIEF5eWFwcGEgaW4gdGhlIGVsZWN0aW9uIGJ5IHRoZSBFbGVjdGlvbiBDb21taXNzaW9uLiBXb21lblx1MjAxOXMgZW50cnkgaW50byB0aGUgdGVtcGxlIGlzIHRoZSBzaW5nbGUgbGFyZ2VzdCBpc3N1ZSBvZiBTdXJlbmRyYW4gYXQgUGF0aGFuYW10aGl0dGEsIHdoaWNoIGlzIGEgQ29uZ3Jlc3MgYmFzdGlvbi4gV2l0aG91dCBtZW50aW9uaW5nIHRoZSBuYW1lIG9mIHRoZSBkZWl0eSwgU3VyZW5kcmFuIGhhcyBiZWVuIHNlZWtpbmcgdm90ZXMgZm9yIEF5eWFwcGFuLiAgXHUyMDFjSSBrbm93IHlvdSBoYXZlIGdhdGhlcmVkIGhlcmUgYnJhdmluZyB0aGUgc2NvcmNoaW5nIHN1bW1lciBoZWF0IG5vdCBiZWNhdXNlIG9mIHlvdXIgbG92ZSBmb3IgbWUuIEkgZG9uXHUyMDE5dCBuZWVkIHRvIHRlbGwgeW91IHdobyBoYXMgYnJvdWdodCB5b3UgaGVyZS4gUGxlYXNlIHZvdGUgZm9yIGhpbSBhbmQgdGVhY2ggdGhlIExlZnQgYSBsZXNzb24sXHUyMDFkIFN1cmVuZHJhbiB0b2xkIGEgbW9kZXJhdGUgY3Jvd2Qgb2YgbWVuIGFuZCB3b21lbiB3aG8gaGFkIGdhdGhlcmVkIG5lYXIgS29ubmksIDQwIGttcyBmcm9tIE5pbGFra2FsLCB0byBncmVldCBoaW0uICBCZWZvcmUgaGUgcmVhY2hlZCB0aGUgc3BvdCwgdGhlIGxvY2FsIGxlYWRlcnMgZGVzY3JpYmVkIGhpbSBhcyBhICdtYXJ0eXInLiBUaGV5IHBvaW50ZWQgb3V0IHRoYXQgMjQyIGNhc2VzIHNsYXBwZWQgYnkgdGhlIEtlcmFsYSBwb2xpY2UgYWdhaW5zdCBoaW0gaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBTYWJhcmltYWxhIGlzc3VlIHdhcyBwYXJ0IG9mIHRoZSBnb3Zlcm5tZW50XHUyMDE5cyBhdHRlbXB0IHRvIHNpbGVuY2UgdGhvc2UgZmlnaHRpbmcgZm9yIHRoZSByaWdodHMgb2YgdGhlIGZhaXRoZnVsLiAgSWYgdGhlIGZhaXRoZnVsIGNvbnNpZGVyIHRoZSBwZXJzb25hbCBzdHJ1Z2dsZSB3YWdlZCBieSBoaW0gaW4gZGVmZW5kaW5nIHRoZSBjdXN0b21zIGFuZCB0cmFkaXRpb25zIG9mIHRoZSBTYWJhcmltYWxhIHRlbXBsZSBnZW51aW5lLCBLIFN1cmVuZHJhbiBzaG91bGQgd2luIHRoZSBlbGVjdGlvbiBoYW5kcyBkb3duLiBIb3dldmVyLCBpdCBpcyBubyBjYWtlIHdhbGsgZm9yIHRoZSBCSlAgY2FuZGlkYXRlLiAgTWFueSBvZiB0aGUgZmFpdGhmdWwgaGF2ZSBzdGFydGVkIHJlYWxpc2luZyB0aGF0IHRoZSBhZ2dyZXNzaXZlIHN0YW5kIHRoYXQgU3VyZW5kcmFuIGFuZCBoaXMgcGFydHkgaGFkIHRha2VuIGFnYWluc3QgdGhlIExERiBnb3Zlcm5tZW50XHUyMDE5cyBhdHRlbXB0IHRvIGltcGxlbWVudCB0aGUgYXBleCBjb3VydCB2ZXJkaWN0IHdhcyBub3QgYm9ybmUgb3V0IG9mIGdlbnVpbmUgY29uY2VybiBmb3IgZmFpdGggYnV0IGFpbWVkIGF0IHBvbGl0aWNhbCBjYXBpdGFsLiAgVGhlIE5haXIgU2VydmljZSBTb2NpZXR5IChOU1MpLCBhIGNvbW11bml0eSBvcmdhbmlzYXRpb24gb2YgdGhlIHVwcGVyIGNhc3RlIE5haXJzIHRoYXQgYXBwcmVjaWF0ZWQgdGhlIHN1cHBvcnQgZ2l2ZW4gYnkgdGhlIFNhbmdoIFBhcml2YXIgaW4gb3Bwb3NpbmcgdGhlIGVudHJ5IG9mIHlvdW5nIHdvbWVuIGluIHRoZSB0ZW1wbGUsIGhhcyBjaG9zZW4gbm90IHRvIHJlY2lwcm9jYXRlIHRoZSBzdXBwb3J0IGluIHRoZSBwb2xpdGljYWwgYXJlbmEuIFRoZSBvcmdhbmlzYXRpb24gdGhhdCBob2xkcyBzd2F5IG92ZXIgdGhlIDE0IHBlcmNlbnQgTmFpciBwb3B1bGF0aW9uIGluIHRoZSBkaXN0cmljdCBoYXMgZGVjaWRlZCB0byBjb250aW51ZSB3aXRoIGl0cyBwb2xpY3kgb2YgbWFpbnRhaW5pbmcgZXF1aS1kaXN0YW5jZSBmcm9tIGJvdGggdGhlIExlZnQgYW5kIHRoZSBSaWdodC4gIFNhYmFyaW1hbGEgS2FybWEgU2FtaXRoaSBwYXRyb24gU3dhbWkgQ2hpZGFuYW5kYXB1cmlcdTIwMTlzIGNhbGwgdG8gdGhlIEF5eWFwcGEgZGV2b3RlZXMgdG8gdm90ZSBmb3IgdGhlIENvbmdyZXNzLWxlZCBVbml0ZWQgRGVtb2NyYXRpYyBGcm9udFx1MjAxOXMgY2FuZGlkYXRlcyBpbiBjb25zdGl0dWVuY2llcyB3aGVyZSB0aGUgTkRBIGlzIHdlYWsgaGFzIGFsc28gY29tZSBhcyBhIHNldGJhY2sgdG8gdGhlIEJKUFx1MjAxOXMgZWZmb3J0cyB0byB1c2UgdGhlIGlzc3VlIHRvIHN0cmVuZ3RoZW4gdGhlIHBhcnR5IGJhc2UgaW4gdGhlIHN0YXRlLiAgVGhvdWdoIHRoZSBvcGluaW9uIG9uIHNvY2lhbCBtZWRpYSB3YXMgaW50ZW5kZWQgdG8gZW5zdXJlIHRoZSBkZWZlYXQgb2YgdGhlIExERiwgc2VuaW9yIEJKUCBsZWFkZXJzIGZlYXIgdGhhdCB0aGUgY29uZnVzaW9uIGl0IGNyZWF0ZXMgd2lsbCBhZmZlY3QgdGhlIHBhcnR5XHUyMDE5cyBwcm9zcGVjdHMgaW4gbWFyZ2luYWwgc2VhdHMuICBCSlAgd2FzIGNvdW50aW5nIG9uIHRoZSBzdXBwb3J0IG9mIE5TUyBmb3IgdGhlIHZpY3Rvcnkgb2YgU3VyZW5kcmFuIGF0IFBhdGhhbmFtdGhpdHRhLiBTb3VyY2VzIGluIHRoZSBvcmdhbmlzYXRpb24gc2FpZCB0aGF0IHRoZSBOU1MgbGVhZGVyc2hpcCB3YXMgbm90IGhhcHB5IHdpdGggdGhlIHdheSBTdXJlbmRyYW4sIGluIHBhcnRpY3VsYXIsIGFuZCB0aGUgc2FmZnJvbiBwYXJ0eSBpbiBnZW5lcmFsIGRyYWdnZWQgdGhlIGlzc3VlIGludG8gdGhlIHN0cmVldHMuIE5TUycgb2ZmaWNpYWwgam91cm5hbCBTZXJ2aWNlIGFjY3VzZWQgYWxsIHBvbGl0aWNhbCBwYXJ0aWVzIG9mIHRyeWluZyB0byB1c2UgU2FiYXJpbWFsYSBmb3IgdGhlaXIgZWxlY3RvcmFsIGdhaW5zLiAgVGhlIE5TUyBqb3VybmFsIGFsc28gZG91YnRzIHRoZSBzaW5jZXJpdHkgb2YgdGhlIEJKUCBpbiBmaW5kaW5nIGEgbGVnYWwgc29sdXRpb24gdG8gdGhlIGlzc3VlLiBJbiBpdHMgZWRpdG9yaWFsLCBTZXJ2aWNlIHNhaWQgdGhhdCB0aGUgcGFydHkgaGFkIHRyaWVkIHRvIHByZXZlbnQgd29tZW4gb24gdGhlIHN0cmVldHMgaW5zdGVhZCBvZiBwYXlpbmcgYXR0ZW50aW9uIHRvIHRoZSBsZWdhbCBtYXR0ZXJzLiBUaGUgTlNTIGxlYWRlcnNoaXAgaXMgYWxzbyBub3QgaW1wcmVzc2VkIGJ5IHRoZSBwcm9taXNlIGdpdmVuIGJ5IHRoZSBCSlAgaW4gaXRzIGVsZWN0aW9uIG1hbmlmZXN0byB0byBzZWN1cmUgY29uc3RpdHV0aW9uYWwgcHJvdGVjdGlvbiBvbiBpc3N1ZXMgcmVsYXRlZCB0byBmYWl0aCBhbmQgYmVsaWVmIHNpbmNlIGl0IGRpZCBub3RoaW5nIHRvIGZ1bGZpbCBpdHMgcHJvbWlzZSByZWdhcmRpbmcgdGhlIFJhbSB0ZW1wbGUgYXQgQXlvZGh5YSBkdXJpbmcgaXRzIHRlcm0uIEhlIHNhaWQgdGhhdCB0aGUgQkpQIGNhbm5vdCBmb29sIHRoZSBwZW9wbGUgaW4gS2VyYWxhIHdpdGggc3VjaCBlbXB0eSB3b3Jkcy4gIEJKUCBjYW4gd2luIHRoZSBzZWF0IG9ubHkgaWYgaXQgaXMgYWJsZSB0byBwb29sIHRoZSB2b3RlcyBvZiB0aGUgZW50aXJlIG1ham9yaXR5IGNvbW11bml0eSwgd2hpY2ggYWNjb3VudHMgZm9yIGFib3V0IDU3IHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24gaW4gdGhlIGRpc3RyaWN0LiBOb25lIGV4cGVjdHMgdGhlIGVudGlyZSBIaW5kdSB2b3RlcyB0byBmYWxsIGluIHRoZSBCSlAga2l0dHkgc2luY2UgYSBzdWJzdGFudGlhbCBjaHVuayBvZiB0aGVtIGhhdmUgYmVlbiB0cmFkaXRpb25hbCBzdXBwb3J0ZXJzIG9mIFVERiBhbmQgTERGIGFuZCBpdCB3b25cdTIwMTl0IGJlIGVhc3kgZm9yIHRoZW0gdG8gY2hhbmdlIHBvbGl0aWNhbCBhZmZpbGlhdGlvbnMgYmFzZWQgb24gb25lIGlzc3VlLiAgXHUyMDFjSSBrbm93IHdoYXQgdGhlIGdvdmVybm1lbnQgaGFzIGRvbmUgYXQgU2FiYXJpbWFsYSB3YXMgbm90IHJpZ2h0LiBJIGFtIGFsc28gaHVydCBieSB0aGUgaGFzdGUgd2l0aCB3aGljaCB0aGUgZ292ZXJubWVudCB0cmllZCB0byBpbXBsZW1lbnQgdGhlIFNDIHZlcmRpY3QuIEhvd2V2ZXIsIEkgY2Fubm90IHRoaW5rIG9mIGNoYW5naW5nIG15IHBvbGl0aWNhbCBhZmZpbGlhdGlvbiBhcyBJIGFuZCBteSBmYW1pbHkgaGF2ZSBiZWVuIHN1cHBvcnRpbmcgdGhlIENvbW11bmlzdCBQYXJ0eSBvZiBJbmRpYSBmcm9tIG15IGNoaWxkaG9vZC4gSSB3aWxsIHZvdGUgZm9yIHRoZSBwYXJ0eSBjYW5kaWRhdGUgdGhpcyB0aW1lIHRvbyxcdTIwMWQgc2FpZCBHb3ZpbmdhIFBpbGxhaSwgYSA3NS15ZWFyLW9sZCB0cmFkZXIgbmVhciBLb25uaS4gIEhvd2V2ZXIsIGhpcyB3aWZlIExhbGl0aGEgc2FpZCBzaGUgd291bGQgbm90IHZvdGUgZm9yIHRoZSBDUE0gdGhpcyB0aW1lLiBCdXQgc2hlIGhhcyBub3QgYmVlbiBhYmxlIHRvIGRlY2lkZSB3aGV0aGVyIHRvIHZvdGUgZm9yIEJKUCBvciBDb25ncmVzcy4gU2hlIHNhaWQgbWFueSBvZiBoZXIgZnJpZW5kcyBpbiB0aGUgYXJlYSB3ZXJlIGFsc28gY29uZnVzZWQgbGlrZSBoZXIuIFx1MjAxY1dlIHdpbGwgdGFrZSBhIGRlY2lzaW9uIGFmdGVyIHNlZWluZyB0aGUgY2FtcGFpZ24sXHUyMDFkIHNhaWQgTGFsaXRoYS4gIENvbmdyZXNzIGhhcyBiZWVuIHdpbm5pbmcgdGhlIHNlYXQgZXZlciBzaW5jZSB0aGUgY29uc3RpdHVlbmN5IHdhcyBjYXJ2ZWQgb3V0IGluIDIwMDkgd2l0aCB0aGUgc3VwcG9ydCBvZiBhIHNlY3Rpb24gb2YgdGhlIE5haXIgY29tbXVuaXR5IGFuZCB0aGUgbWlub3JpdGllcywgd2hvIGFjY291bnQgZm9yIDQzIHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24uIEhvd2V2ZXIsIHBhcnR5IGNhbmRpZGF0ZSBBbnRvIEFudG9ueVx1MjAxOXMgdmljdG9yeSBtYXJnaW4gc2F3IGEgZHJvcCBmcm9tIDEsMTEsMjA2IHZvdGVzIGluIDIwMDkgdG8gNTYsMTkxIHZvdGVzIGluIDIwMTQuICBUaGlzIHdhcyBtYWlubHkgZHVlIHRvIGFuIGltcHJvdmVkIHNob3dpbmcgYnkgdGhlIEJKUCwgd2hpY2ggaW5jcmVhc2VkIGl0cyB2b3RlIHNoYXJlIGZyb20gNy4wOCBwZXJjZW50IHRvIDE1Ljk4IHBlcmNlbnQgdm90ZXMgZHVyaW5nIHRoZSBwZXJpb2QuIEEgc3dpbmcgaW4gbWlub3JpdHkgdm90ZXMgaW4gdGhlIDIwMTYgQXNzZW1ibHkgZWxlY3Rpb24gc2F3IHRoZSBMREYgd2lubmluZyBmb3VyIEFzc2VtYmx5IHNlZ21lbnRzLiAgSG93ZXZlciwgdGhlIENvbmdyZXNzIGNhbXAgZXhwZWN0cyB0aGF0IHRoZSBtb2RlcmF0ZSBzZWN0aW9ucyBvZiB0aGUgbWFqb3JpdHkgY29tbXVuaXR5IHdpbGwgc3VwcG9ydCB0aGUgVURGLCBtYWtpbmcgQW50b1x1MjAxOXMgdmljdG9yeSBlYXN5LiBUaGUgTERGIGNhbXAgaXMgcGlubmluZyB0aGVpciBob3BlIG9uIHRoZSBwcm9ncmVzc2l2ZSBzZWN0aW9ucyBvZiB0aGUgc29jaWV0eS4gQSB0b3VyIGFjcm9zcyB0aGUgY29uc3RpdHVlbmN5LCBjb21wcmlzaW5nIGZvdXIgQXNzZW1ibHkgc2VnbWVudHMgaW4gUGF0aGFuYW10aGl0dGEgZGlzdHJpY3QgYW5kIHR3byBpbiBLb3R0YXlhbSBkaXN0cmljdCwgc2hvdyB0aGVpciBudW1iZXIgdG9vIHNob3J0IGZvciBhIHZpY3RvcnkgZm9yIFZlZW5hIEdlb3JnZSwgdGhlIExERiBjYW5kaWRhdGUuICBUaGUgZmlnaHQgaW4gUGF0aGFuYW10aGl0dGEgaXMgYmV0d2VlbiBCSlAgYW5kIHRoZSBDb25ncmVzcy4gSXQgaXMgdG9vIGVhcmx5IHRvIHByZWRpY3Qgd2hvIHdpbGwgaGF2ZSB0aGUgbGFzdCBsYXVnaCBpbiB0aGlzIGV4dHJlbWVseSBjbG9zZSBmaWdodC4gIFlvdXIgZ3VpZGUgdG8gdGhlIGxhdGVzdCBlbGVjdGlvbiBuZXdzLCBhbmFseXNpcywgY29tbWVudGFyeSwgbGl2ZSB1cGRhdGVzIGFuZCBzY2hlZHVsZSBmb3IgTG9rIFNhYmhhIEVsZWN0aW9ucyAyMDE5IG9uIGZpcnN0cG9zdC5jb20vZWxlY3Rpb25zLiBGb2xsb3cgdXMgb24gVHdpdHRlciBhbmQgSW5zdGFncmFtIG9yIGxpa2Ugb3VyIEZhY2Vib29rIHBhZ2UgZm9yIHVwZGF0ZXMgZnJvbSBhbGwgNTQzIGNvbnN0aXR1ZW5jaWVzIGZvciB0aGUgdXBjb21pbmcgZ2VuZXJhbCBlbGVjdGlvbnMuIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTkiLCAidGl0bGUiOiAiTG9rIFNhYmhhIHBvbGxzOiBCSlAgdHJ5aW5nIHRvIG1pbGsgU2FiYXJpbWFsYSBpc3N1ZSBmb3Igdm90ZXMsIGJ1dCB3aW5uaW5nIFBhdGhhbmFtdGhpdHRhIHNlYXQgd2lsbCBiZSB0b3VnaCAtIEZpcnN0cG9zdCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkVuZ2FnZSBpbiBuZWdvdGlhdGlvbiIsICIgY29uZ3Jlc3MgIiwgIiBlbGVjdGlvbiJdLCAiY291bnRyaWVzIjogWyJJTkRJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siMTMuMDgzMyIsICI4MC4yODMzIl1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmluZGlhdGltZXMuY29tL25ld3MvaW5kaWEvYWxsLWluLXRoZS1mYW1pbHktcmF2aW5kcmEtamFkZWphLXMtZmF0aGVyLXNpc3Rlci1qb2luLWNvbmdyZXNzLXdpZmUtYWxyZWFkeS1hLWJqcC1sZWFkZXItMzY1NDQyLmh0bWwiLCAiY29udGVudCI6ICJBbGwgSW4gVGhlIEZhbWlseTogUmF2aW5kcmEgSmFkZWphJ3MgRmF0aGVyICYgU2lzdGVyIEpvaW4gQ29uZ3Jlc3MsIFdpZmUgQWxyZWFkeSBBIEJKUCBMZWFkZXIgIEFsbCBJbiBUaGUgRmFtaWx5OiBSYXZpbmRyYSBKYWRlamEncyBGYXRoZXIgJiBTaXN0ZXIgSm9pbiBDb25ncmVzcywgV2lmZSBBbHJlYWR5IEEgQkpQIExlYWRlciAgVGhlcmUgYXJlIHRpbWVzIHdoZW4gdGhlcmVcdTIwMTlzIGhhcmRseSBhbnkgZGlmZmVyZW5jZSBiZXR3ZWVuIGZhbWlseSBwb2xpdGljcyBhbmQgcGFydHkgcG9saXRpY3MuIFRlYW0gSW5kaWEgQWxsLXJvdW5kZXIgUmF2aW5kcmEgSmFkZWphXHUyMDE5cyBmYW1pbHkgaXMgcHJvYmFibHkgaGF2aW5nIHRoZSBzYW1lIG1vbWVudCBhcyBoaXMgZmFtaWx5IG1lbWJlcnMgaGF2ZSBjaG9zZW4gZGlmZmVyZW50IHBvbGl0aWNhbCBwYXJ0aWVzIHRvIGdvIHdpdGggaW4gdGhlIG9uZ29pbmcgZWxlY3Rpb25zIGZvciBMb2sgU2FiaGEuICBJZiB0aGUgcmVwb3J0cyBhcmUgdG8gYmUgYmVsaWV2ZWQsIGp1c3QgYSBmZXcgd2Vla3MgYWZ0ZXIgSmFkZWphXHUyMDE5cyB3aWZlIFJpdmFiYSBTb2xhbmtpIGpvaW5lZCBBbWl0IFNoYWgtbGVkIEJoYXJ0aXlhIEphbnRhIFBhcnR5LCB0d28gaW1wb3J0YW50IG1lbWJlcnMgZnJvbSBoaXMgZmFtaWx5IGhhdmUgam9pbmVkIENvbmdyZXNzLiAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIEphZGVqYVx1MjAxOXMgZmF0aGVyIEFuaXJ1ZGhzaW5oIEphZGVqYSBhbmQgTmF5bmFiYSBqb2luZWQgdGhlIENvbmdyZXNzIGluIEthbGF2YWQgY2l0eSBvZiBKYW1uYWdhciBkaXN0cmljdC4gVGhleSBkaWQgc28gaW4gdGhlIHByZXNlbmNlIG9mIGZpcmVicmFuZCBQYXRpZGFyIGxlYWRlciBIYXJkaWsgUGF0ZWwuICBIaXMgZmFtaWx5LCBpcyBhcHBhcmVudGx5IHVuaGFwcHkgd2l0aCBCSlAgb3ZlciBub3QgZnVsZmlsbGluZyB0aGUgcHJvbWlzZXMgbWFkZSB0byB0aGUgcGVvcGxlIGluIDIwMTQuICBFYXJsaWVyLCBNcnMgSmFkZWphIGpvaW5lZCB0aGUgQkpQIGZpdmUgbW9udGhzIGFmdGVyIHNoZSB3YXMgYXBwb2ludGVkIHRoZSBjaGllZiBvZiB3b21lblx1MjAxOXMgd2luZyBvZiBLYXJuaSBTZW5hIHRoYXQgaGFkIHByb3Rlc3RlZCB0aGUgcmVsZWFzZSBvZiBIaW5kaSBtb3ZpZSBQYWRtYXZhYXQuICBcdTIwMWNIaXMgcGVyc29uYWxpdHksIGhpcyBpZGVudGl0eSwgdGhlIHdheSBoZSBoYXMgbGVkIHRoZSBuYXRpb24sIGhpcyB2aXNpb24gZm9yIHRoZSBjb3VudHJ5IGFuZCB0aGUgaWRlbnRpdHkgb2YgSGluZHVzdGFuIGhlIGhhcyBjYXJ2ZWQgb3V0IGluIHRoZSB3b3JsZCwgaXQgaXMgYSBtYXR0ZXIgb2YgcHJpZGUgZm9yIGV2ZXJ5IGNpdGl6ZW4sXHUyMDFkIHNoZSB0b2xkIFRoZSBJbmRpYW4gRXhwcmVzcy4gIEphZGVqYSBpcyBjdXJyZW50bHkgcmVwcmVzZW50aW5nIENoZW5uYWkgU1VwZXIgS2luZ3MgaW4gdGhlIG9uZ29pbmcgZWRpdGlvbiBvZiB0aGUgSW5kaWEgUHJlbWllciBMZWFndWUuIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTkiLCAidGl0bGUiOiAiQWxsIEluIFRoZSBGYW1pbHk6IFJhdmluZHJhIEphZGVqYSdzIEZhdGhlciAmIFNpc3RlciBKb2luIENvbmdyZXNzLCBXaWZlIEFscmVhZHkgQSBCSlAgTGVhZGVyIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiTWFrZSBhIHZpc2l0IiwgIiBhcHBvaW50bWVudCIsICJldmlkZW5jZSIsICJvcGVyYXRpb24iXSwgImNvdW50cmllcyI6IFsiTUFMQVlTSUEiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjMuNTMyMSIsICIxMDMuNDYyIl1dLCAic291cmNlIjogImh0dHBzOi8vd3d3Lm1hbGF5bWFpbC5jb20vbmV3cy9tYWxheXNpYS8yMDE5LzA0LzE0L25hamlicy10cmlhbC1jb250aW51ZXMtdG9tb3Jyb3ctd2l0aC1kZWZlbmNlLXRvLWNyb3NzLWV4YW1pbmUtZmlyc3Qtd2l0bmVzcy8xNzQzMjMyIiwgImNvbnRlbnQiOiAiS1VBTEEgTFVNUFVSLCBBcHJpbCAxNCBcdTIwMTQgVGhlIHRyaWFsIG9mIGZvcm1lciBQcmltZSBNaW5pc3RlciBEYXR1ayBTZXJpIE5hamliIFJhemFrXHUyMDE5cyBjYXNlIGludm9sdmluZyBSTTQyIG1pbGxpb24gb2YgU1JDIEludGVybmF0aW9uYWwgU2RuIEJoZCBmdW5kcyB3aWxsIGNvbnRpbnVlIHRvbW9ycm93IHdpdGggaGlzIGRlZmVuY2UgdGVhbSB0byBjcm9zcy1leGFtaW5lIHRoZSBmaXJzdCB3aXRuZXNzLiAgT24gQXByaWwgMywgSGlnaCBDb3VydCBKdWRnZSBNb2hkIE5hemxhbiBNb2hkIEdoYXphbGkgc2V0IEFwcmlsIDE1IHVudGlsIE1heSAxMCB0byBjb250aW51ZSB0aGUgdHJpYWwgb2YgTmFqaWIsIHdobyBpcyBQZWthbiBNZW1iZXIgb2YgUGFybGlhbWVudC4gIFRoZSBoaWdoIHByb2ZpbGUgdHJpYWwgd291bGQgY29udGludWUgd2l0aCBjb3Vuc2VsIEhhcnZpbmRlcmppdCBTaW5naCByZXByZXNlbnRpbmcgTmFqaWIgdG8gY3Jvc3MtZXhhbWluZSB0aGUgZmlyc3Qgd2l0bmVzcywgTXVoYW1tYWQgQWttYWx1ZGluIEFiZHVsbGFoLCAzNSwgYXNzaXN0YW50IHJlZ2lzdHJhciBvZiBDb21wYW5pZXMgQ29tbWlzc2lvbiBvZiBNYWxheXNpYSAoU1NNKS4gIE9uIHRoZSBmaXJzdCBkYXkgb2YgdHJpYWwsIE11aGFtbWFkIEFrbWFsdWRpbiB0b2xkIHRoZSBjb3VydCB0aGF0IFNSQyBJbnRlcm5hdGlvbmFsIFNkbiBCaGQsIGhhZCBhIHBhaWQgY2FwaXRhbCBvZiBSTTEgbWlsbGlvbiB3aGVuIGl0IHJlZ2lzdGVyZWQgd2l0aCB0aGUgU1NNIG9uIEphbnVhcnkgNywgMjAxMSwgYW5kIGNoZWNrcyBvbiB0aGUgc2hhcmVob2xkZXJzIGFsc28gZm91bmQgdGhhdCBhbGwgb25lIG1pbGxpb24gc2hhcmVzIHdlcmUgaGVsZCBieSB0aGUgRmluYW5jZSBNaW5pc3RyeSAoSW5jb3Jwb3JhdGVkKS4gIE5hamliLCA2NiwgaXMgZmFjaW5nIHRocmVlIGNvdW50cyBvZiBjcmltaW5hbCBicmVhY2ggb2YgdHJ1c3QsIG9uZSBjaGFyZ2Ugb2YgYWJ1c2luZyBoaXMgcG9zaXRpb24gYW5kIHRocmVlIGNvdW50cyBvZiBtb25leSBsYXVuZGVyaW5nIG92ZXIgU1JDIEludGVybmF0aW9uYWwgU2RuIEJoZCBmdW5kcyBhbW91bnRpbmcgdG8gUk00MiBtaWxsaW9uLiAgSGUgaXMgYWxsZWdlZCB0byBoYXZlIGNvbW1pdHRlZCB0aGUgb2ZmZW5jZXMgYXQgQW1Jc2xhbWljIEJhbmsgQmVyaGFkIGluIEphbGFuIFJhamEgQ2h1bGFuIGFuZCB0aGUgUHJpbWUgTWluaXN0ZXJcdTIwMTlzIE9mZmljZSBpbiBQdXRyYWpheWEgYmV0d2VlbiBBdWd1c3QgMTcsIDIwMTEsIGFuZCBGZWJydWFyeSAxMCwgMjAxNS4gIE5hamliLCB3aG8gaXMgdGhlIHNpeHRoIHByaW1lIG1pbmlzdGVyIG9mIE1hbGF5c2lhLCBpcyB0aGUgZmlyc3QgdG8gZmluZCBoaW1zZWxmIGluIHRoZSBhY2N1c2VkIGRvY2suICBBdHRvcm5leS1HZW5lcmFsIFRvbW15IFRob21hcyBpbiBoaXMgb3BlbmluZyBzdGF0ZW1lbnQgb24gdGhlIGZpcnN0IGRheSBvZiB0cmlhbCwgYW1vbmcgb3RoZXJzLCBzYWlkIHRoZSBwcm9zZWN1dGlvbiB3aWxsIHByb3ZlIHRoYXQgTmFqaWIgaGFkIHVzZWQgaGlzIHBvc2l0aW9uIGFzIFByaW1lIE1pbmlzdGVyIGFuZCBNaW5pc3RlciBvZiBGaW5hbmNlIHRvIG9idGFpbiBmb3IgaGltc2VsZiBhIGdyYXRpZmljYXRpb24gb2YgUk00MiBtaWxsaW9uLiAgXHUyMDFjSXQgaXMgbXkgZHV0eSBhbmQgcHJpdmlsZWdlIG9mIG9wZW5pbmcgdGhlIGZpcnN0IHRyaWFsIGluIG91ciBjb3VydHMgYWdhaW5zdCBhIGZvcm1lciBwcmltZSBtaW5pc3RlciB3aG8sIGZvciBuZWFybHkgYSBkZWNhZGUsIG9jY3VwaWVkIHRoZSBtb3N0IHBvd2VyZnVsIG9mZmljZSBpbiB0aGUgbGFuZCBhbmQgd2llbGRlZCBuZWFyIGFic29sdXRlIHBvd2VyLiAgXHUyMDFjU3VjaCBwcml2aWxlZ2UgY2FycmllcyB3aXRoIGl0IGVub3Jtb3VzIHJlc3BvbnNpYmlsaXR5LCB3aGljaCBteSBvZmZpY2UgaW50ZW5kcyB0byBkaXNjaGFyZ2UgaW4gb3JkZXIgdG8gZXN0YWJsaXNoIHRoYXQgdGhlIGFjY3VzZWQgaXMgZ3VpbHR5IG9mIHRoZSBzZXZlbiBjaGFyZ2VzIHRoYXQgaGUgaXMgZmFjaW5nIGJlZm9yZSB5b3VyIGxvcmRzaGlwLiAgXHUyMDFjVGhlIGFjY3VzZWQgZHVyaW5nIGhpcyBlbnRpcmUgcGVyaW9kIGluIG9mZmljZSBhcyBQcmltZSBNaW5pc3RlciBvZiB3aGljaCB0aW1lIHRoZXNlIG9mZmVuY2VzIHdlcmUgY29tbWl0dGVkIHNpbXVsdGFuZW91c2x5IGhlbGQgdGhlIG9mZmljZSBvZiBNaW5pc3RlciBvZiBGaW5hbmNlLCB0aGVyZWJ5IGNvbWJpbmluZyBtYXhpbXVtIHBvbGl0aWNhbCBwb3dlciBhbmQgY29udHJvbCBvZiB0aGUgbmF0aW9uXHUyMDE5cyBwdXJzZSxcdTIwMWQgaGUgc2FpZC4gIFRob21hcyBhbHNvIHNhaWQgXHUyMDFjdGhlIG9wZXJhdGlvbiBvZiBBcnRpY2xlIDggKDEpIG9mIHRoZSBGZWRlcmFsIENvbnN0aXR1dGlvbiB0aGF0IFx1MjAxOGFsbCBwZXJzb25zIGFyZSBlcXVhbCBiZWZvcmUgdGhlIGxhd1x1MjAxOSBpcyBhbXBseSBkZW1vbnN0cmF0ZWQgYnkgdGhpcyB0cmlhbFx1MjAxZC4gIFx1MjAxY0EgZm9ybWVyIFByaW1lIE1pbmlzdGVyIGlzIGNoYXJnZWQgdW5kZXIgZHVlIHByb2Nlc3MgaW4gdGhlIG9yZGluYXJ5IGNvdXJ0IG9mIHRoZSBsYW5kLCBsaWtlIGFueSBvdGhlciBhY2N1c2VkLiBUaGUgYWNjdXNlZCBpcyBub3QgYWJvdmUgdGhlIGxhdyBhbmQgaGlzIHByb3NlY3V0aW9uIGFuZCB0aGlzIHRyaWFsIHNob3VsZCBzZXJ2ZSBhcyBwcmVjZWRlbnRzIGZvciBhbGwgZnV0dXJlIGhvbGRlcnMgb2YgdGhpcyBhdWd1c3Qgb2ZmaWNlLFx1MjAxZCBoZSBzYWlkLiAgRm9sbG93aW5nIGFyZSBhbW9uZyBvdGhlcnMga2V5IGluZ3JlZGllbnRzIGluIHRoZSBwcm9zZWN1dGlvblx1MjAxOXMgb3BlbmluZyBzdGF0ZW1lbnQgcmVhZCBvdXQgYnkgVGhvbWFzLiAgVGhlIHByb3NlY3V0aW9uIHdpbGwgYWJ1bmRhbnRseSBlc3RhYmxpc2ggdGhhdCB0aGUgYWNjdXNlZCB3YXMgZGlyZWN0bHkgaW52b2x2ZWQgaW4gdGhlIGRlY2lzaW9uIG9uIGJlaGFsZiBvZiB0aGUgR292ZXJubWVudCBvZiBNYWxheXNpYSB0byBnaXZlIGdvdmVybm1lbnQgZ3VhcmFudGVlcyBmb3IgdGhlIGxvYW5zIGFtb3VudGluZyB0byBSTTQgYmlsbGlvbiByZWNlaXZlZCBieSBTUkMgSW50ZXJuYXRpb25hbCBTZG4gQmhkIGZyb20gS3VtcHVsYW4gV2FuZyBQZXJzYXJhYW4gKERpcGVyYmFkYW5rYW4pIChcdTIwMWNLV0FQXHUyMDFkKS4gIFRoZSBldmlkZW5jZSB3aWxsIGFsc28gZXN0YWJsaXNoIHRoYXQgaW4gRGVjZW1iZXIgMjAxNCwgdGhlIGFjY3VzZWRcdTIwMTlzIGNyZWRpdCBjYXJkIHdhcyBjaGFyZ2VkIFVTJDEzMCw2MjUgKFJNNTM3LDQ1NikgZm9yIGV4cGVuc2VzIG1hZGUgYXQgQ2hhbmVsLCBhbiBleGNsdXNpdmUgZmFzaGlvbiBzdG9yZSBpbiBIb25vbHVsdS4gIFRoZSBwcm9zZWN1dGlvbiB3aWxsIHByb3ZlIHRoYXQgcGVyc29uYWwgY2hlcXVlcyB3ZXJlIGlzc3VlZCwgYW1vbmcgb3RoZXJzLCBhcyBwYXltZW50IGZvciByZW5vdmF0aW9uIHdvcmtzIGNhcnJpZWQgb3V0IGF0IHRoZSBhY2N1c2VkXHUyMDE5cyByZXNpZGVuY2UgYXQgSmFsYW4gTGFuZ2dhayBEdXRhLCBLdWFsYSBMdW1wdXIsIHRoZSBhY2N1c2VkXHUyMDE5cyByZXNpZGVuY2UgaW4gUGVrYW4sIFBhaGFuZyBhcyB3ZWxsIGFzIGNoZXF1ZXMgd2VyZSBpc3N1ZWQgdG8gdmFyaW91cyBCYXJpc2FuIE5hc2lvbmFsIGNvbXBvbmVudCBwb2xpdGljYWwgcGFydGllcy4gIEluIHByb3ZpbmcgdGhlIGluZ3JlZGllbnRzIG9uIHRoZSBjaGFyZ2Ugb2YgYWJ1c2luZyBoaXMgcG9zaXRpb24sIGV2aWRlbmNlLCBib3RoIG9yYWwsIGRvY3VtZW50YXJ5IGFuZCBjaXJjdW1zdGFudGlhbCB3b3VsZCBiZSBsZWQgYnkgdGhlIHByb3NlY3V0aW9uIHRvIGVzdGFibGlzaCB0aGUgcHJvcG9zZWQgZXN0YWJsaXNobWVudCBvZiBTUkMgSW50ZXJuYXRpb25hbCBTZG4gQmhkLCB0aGUgcHJvcG9zZWQgc2V0dGluZy11cCBvZiBhIFJNMyBiaWxsaW9uIGdyYW50LCBTUkMgSW50ZXJuYXRpb25hbFx1MjAxOXMgcmVxdWVzdCBmb3IgYSBnb3Zlcm5tZW50IGxvYW4gZm9yIFJNMy45NSBiaWxsaW9uLCBhcHBvaW50bWVudHMgb2YgU1JDIEludGVybmF0aW9uYWxcdTIwMTlzIEJvYXJkIG9mIERpcmVjdG9ycywgYW5kIG9uZSBOaWsgRmFpc2FsIEFyaWZmIEthbWlsIGFzIENFTyBvZiBTUkMgSW50ZXJuYXRpb25hbC4gIFRoZSBwcm9zZWN1dGlvbiB3aWxsIGFsc28gZXN0YWJsaXNoIG9uIG1hdHRlcnMgdGhhdCBsZWQgdG8gdGhlIGFwcHJvdmFsIG9mIHRoZSBNYWxheXNpYW4gZ292ZXJubWVudCwgdGhyb3VnaCB0aGUgTWluaXN0cnkgb2YgRmluYW5jZSwgdGhlIGlzc3VhbmNlIG9mIGEgUk0yIGJpbGxpb24gZ292ZXJubWVudCBndWFyYW50ZWUgaW4gZmF2b3VyIG9mIFNSQyBJbnRlcm5hdGlvbmFsIGFuZCBmb3IgdGhlIGlzc3VhbmNlIG9mIGEgZnVydGhlciBSTTIgYmlsbGlvbiBnb3Zlcm5tZW50IGd1YXJhbnRlZSBpbiBmYXZvdXIgb2YgdGhlIGNvbXBhbnkgKFNSQyBJbnRlcm5hdGlvbmFsKS4gIFRoZSBldmlkZW5jZSB3aWxsIGFsc28gYmUgbGVkIHJlZ2FyZGluZyBtb25pZXMgdG90YWxsaW5nIFJNNDIgbWlsbGlvbiwgc291cmNlZCBmcm9tIFNSQyBJbnRlcm5hdGlvbmFsLCB3ZXJlIGNoYW5uZWxsZWQgdGhyb3VnaCB0aGUgY29tcGFueSBhY2NvdW50cyBvZiBHYW5kaW5nYW4gTWVudGFyaSBTZG4gQmhkIChhIHdob2xseS1vd25lZCBzdWJzaWRpYXJ5IG9mIFNSQyBJbnRlcm5hdGlvbmFsIFNkbiBCaGQpIGFuZCBJaHNhbiBQZXJkYW5hIFNkbiBCaGQgKHB1cnBvcnRlZGx5IGFwcG9pbnRlZCBhcyBTUkMgSW50ZXJuYXRpb25hbFx1MjAxOXMgY29ycG9yYXRlIHNvY2lhbCByZXNwb25zaWJpbGl0eSBwYXJ0bmVyKS4gIEZvciB0aGUgY3JpbWluYWwgYnJlYWNoIG9mIHRydXN0IChDQlQpIGNoYXJnZXMsIHRoZSBwcm9zZWN1dGlvbiB3aWxsIGVzdGFibGlzaCB0aGF0IE5hamliLCBhcyBQcmltZSBNaW5pc3RlciBhbmQgTWluaXN0ZXIgb2YgRmluYW5jZSwgYW5kIEFkdmlzb3IgRW1lcml0dXMgb2YgU1JDIEludGVybmF0aW9uYWwsIHdoaWxzdCBlbnRydXN0ZWQgd2l0aCBtb25pZXMgYmVsb25naW5nIHRvIFNSQyBJbnRlcm5hdGlvbmFsLCBjb21taXR0ZWQgQ0JUIGluIHJlc3BlY3Qgb2YgdGhlIFJNMjcgbWlsbGlvbiwgUk01IG1pbGxpb24gYW5kIFJNMTAgbWlsbGlvbiBiZWxvbmdpbmcgdG8gU1JDIEludGVybmF0aW9uYWwuICBUaGUgcHJvc2VjdXRpb24gd2lsbCBhbHNvIHByb3ZpZGUgZXZpZGVuY2UgdGhhdCBOYWppYiBoYWQgZW5nYWdlZCBpbiBtb25leSBsYXVuZGVyaW5nIGJ5IHJlY2VpdmluZyBSTTQyIG1pbGxpb24sIGJlaW5nIHRoZSBwcm9jZWVkcyBvZiB1bmxhd2Z1bCBhY3Rpdml0eSwgaW4gaGlzIEFtUHJpdmF0ZSBCYW5raW5nIGFjY291bnQuICBUaGUgZXZpZGVuY2Ugd291bGQgYWxzbyBiZSBsZWQgdGhhdCBOYWppYiBoYWQgaXNzdWVkIDE1IGNoZXF1ZXMgZnJvbSBoaXMgYmFuayBhY2NvdW50IHRvdGFsbGluZyBSTTEwLDc3Niw1MTQuMDAuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MjEiLCAidGl0bGUiOiAiTmFqaWJcdTIwMTlzIHRyaWFsIGNvbnRpbnVlcyB0b21vcnJvdyB3aXRoIGRlZmVuY2UgdG8gY3Jvc3MtZXhhbWluZSBmaXJzdCB3aXRuZXNzIHwgTWFsYXkgTWFpbCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkNvbmZpc2NhdGUgcHJvcGVydHkiLCAiYXJyZXN0IiwgImRldGFpbiIsICJtb25pdG9yIiwgIm9wZXJhdGlvbiIsICJ0YXJnZXQiXSwgImNvdW50cmllcyI6IFsiUEhJTElQUElORVMiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjExIiwgIjEyMy41Il1dLCAic291cmNlIjogImh0dHBzOi8vY2VidWRhaWx5bmV3cy5pbnF1aXJlci5uZXQvMjI4MzY2L3A0LTVtLXNoYWJ1LXNlaXplZC00LXBlcnNvbnMtbmFiYmVkLWluLXdlZWtlbmQtZHJ1Zy1idXN0cy1pbi1jZWJ1LWNpdHkiLCAiY29udGVudCI6ICJDRUJVIENJVFksIFBoaWxpcHBpbmVzIFx1MjAxNCBUd28gc2VwYXJhdGUgYW50aS1pbGxlZ2FsIGRydWcgb3BlcmF0aW9ucyBpbiBhIHNwYW4gb2YgZWlnaHQgaG91cnMgb3ZlciB0aGUgd2Vla2VuZCBpbiBDZWJ1IENpdHkgeWllbGRlZCBQNC41IG1pbGxpb24gb2Ygc3VzcGVjdGVkIHNoYWJ1IGFuZCBuZXR0ZWQgZm91ciBwZXJzb25zLCBvbmUgb2Ygd2hvbSB3YXMgY29uc2lkZXJlZCBieSB0aGUgcG9saWNlIGFzIGEgaGlnaCB2YWx1ZSB0YXJnZXQuICBBdCBwYXN0IDggcC5tLiBvbiBTYXR1cmRheSwgQXByaWwgMTMsIGluIEJhcmFuZ2F5IFNhbiBOaWNvbGFzLCBwb2xpY2UgYXJyZXN0ZWQgQXJub2xkIFJlc3VyZWN0aW9uLCBhIHJlc2lkZW50IG9mIHRoZSBiYXJhbmdheSwgYWZ0ZXIgaGUgd2FzIGNhdWdodCB3aXRoIGhhbGYgYSBraWxvIG9mIHN1c3BlY3RlZCBzaGFidSBkdXJpbmcgYSBidXktYnVzdCBvcGVyYXRpb24sIHNhaWQgTGlldXRlbmFudCBDb2xvbmVsIEdsZW5uIE1heWFtLCBQaGlsaXBwaW5lIERydWcgRW5mb3JjZW1lbnQgR3JvdXAgVmlzYXlhcyBjaGllZiwgZHVyaW5nIGFuIGludGVydmlldyB3aXRoIENETiBEaWdpdGFsLiAgTWF5YW0gc2FpZCB0aGF0IHRoZSBzaXggbGFyZ2UgcGFja3Mgb2Ygc3VzcGVjdGVkIHNoYWJ1IGNvbmZpc2NhdGVkIGZyb20gUmVzdXJlY3Rpb24gaGFkIGFuIGVzdGltYXRlZCBEYW5nZXJvdXMgRHJ1Z3MgQm9hcmQgdmFsdWUgb2YgUDMuNCBtaWxsaW9uLiAgSGUgc2FpZCB0aGF0IHRoZXkgaGFkIG1vbml0b3JlZCB0aGUgc3VzcGVjdCBmb3IgdGhyZWUgd2Vla3MgYWZ0ZXIgdGhleSBnb3QgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGhpcyBpbGxlZ2FsIGFjdGl2aXRpZXMgZnJvbSBhIHN1c3BlY3RlZCBkcnVnIGNvdXJpZXIgaW4gb25lIG9mIHRoZWlyIGFudGktaWxsZWdhbCBkcnVnIG9wZXJhdGlvbnMgaW4gdGhlIHBhc3QgbW9udGguICBIZSBzYWlkIHRoYXQgdGhleSBsZWFybmVkIHRoYXQgdGhlIHN1c3BlY3Qgd2FzIGFsbGVnZWRseSBhIGRydWcgdXNlciwgYSBkcnVnIGNvdXJpZXIgYW5kIHdhcyBhbGxlZ2VkbHkgbGlua2VkIHRvIGEgZ3JvdXAgaGVhZGVkIGJ5IGEgZHJ1ZyBsb3JkIG9wZXJhdGluZyB3aXRoaW4gdGhlIGNpdHkuICBNYXlhbSwgaG93ZXZlciwgcmVmdXNlZCB0byBuYW1lIHRoZSBzdXNwZWN0ZWQgZHJ1ZyBsb3JkIHRoYXQgUmVzdXJlY3Rpb24gd2FzIGxpbmtlZCB0by4gIFJlc3VyZWN0aW9uIHdhcyBkZXRhaW5lZCBhdCB0aGUgQWJlbGxhbmEgUG9saWNlIFByZWNpbmN0IGRldGVudGlvbiBjZWxsIHBlbmRpbmcgdGhlIGZpbGluZyBvZiBjaGFyZ2VzLiAgQXQgcGFzdCA0IGEubS4gb24gU3VuZGF5LCBBcHJpbCAxNCwgdGhyZWUgcGVyc29ucyB3ZXJlIGFycmVzdGVkIGluY2x1ZGluZyBvbmUsIHdob20gcG9saWNlIGNvbnNpZGVyZWQgYSBoaWdoIHZhbHVlIHRhcmdldCBpbiBhIGJ1eS1idXN0IG9wZXJhdGlvbiBpbiBhIHJlbnRlZCBhcGFydG1lbnQgaW4gYSBzdWJkaXZpc2lvbiBpbiBCYXJhbmdheSBCdWxhY2FvLCBDZWJ1IENpdHkuICBBcmNoaWUgQWJlbGxhbmEgYWxzbyBrbm93biBhcyBBcmNoaWUgQmF5b3QsIDM5LCBvZiBCYXJhbmdheSBTdWJhIGluIENlYnUgQ2l0eTsgTWFyam9yeSBBcnJpZXNnYWRvLCAzMywgb2YgU2l0aW8gQ2Fib3RveSwgQmFyYW5nYXkgUG9vYyBpbiBUYWxpc2F5IENpdHk7IGFuZCBMZW5kb24gR29uemFnYSwgMzcsIG9mIEJhcmFuZ2F5IEJ1bGFjYW8gaW4gQ2VidSBDaXR5OyB3ZXJlIGFycmVzdGVkIGFmdGVyIHRoZXkgd2VyZSBjYXVnaHQgd2l0aCBQMS4xIG1pbGxpb24gd29ydGggb2Ygc3VzcGVjdGVkIHNoYWJ1LCBzYWlkIFBvbGljZSBNYWpvciBSZWdpbm8gTWFyYW1hZywgUGFyZG8gUG9saWNlIFByZWNpbmN0IGNoaWVmLCBpbiBhIHNlcGFyYXRlIGludGVydmlldyB3aXRoIENETiBEaWdpdGFsLiAgTWFyYW1hZyBzYWlkIHRoYXQgQWJlbGxhbmEsIGFsbGVnZWRseSB3YXMgdGhlIGhlYWQgb2YgYSBkcnVnIHN5bmRpY2F0ZSBhbmQgd2hvIGhhZCBiZWVuIGluIGFuZCBvdXQgb2YgamFpbCB3aGlsZSBoaXMgdHdvIGFsbGVnZWQgY29ob3J0cywgQXJyaWVzZ2FkbyBhbmQgR29uemFnYSB3ZXJlIGFsbGVnZWRseSBBYmVsbGFuYVx1MjAxOXMgdHJ1c3RlZCBhaWRlcyBhbmQgY291cmllcnMuICBIZSBzYWlkIHRoYXQgdGhleSBjb25maXNjYXRlZCAxNjguMTQgZ3JhbXMgb2Ygc3VzcGVjdGVkIHNoYWJ1IGZyb20gdGhlIHN1c3BlY3RzIHdoaWNoIGhhZCBhbiBlc3RpbWF0ZWQgRERCIHZhbHVlIG9mIFAxLjEgbWlsbGlvbi4gIFRoZSBzdXNwZWN0cyB3ZXJlIGRldGFpbmVkIGF0IHRoZSBQYXJkbyBQb2xpY2UgUHJlY2luY3QgZGV0ZW50aW9uIGNlbGwgcGVuZGluZyB0aGUgZmlsaW5nIG9mIGNoYXJnZXMuL2RicyIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjIxIiwgInRpdGxlIjogIlA0LjVNIHNoYWJ1IHNlaXplZDsgNCBwZXJzb25zIG5hYmJlZCBpbiB3ZWVrZW5kIGRydWcgYnVzdHMgaW4gQ2VidSBDaXR5In0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiSG9zdCBhIHZpc2l0IiwgIiBjaGVtaWNhbCAiLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIkFVU1RSQUxJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siLTIyLjczMzMiLCAiMTQ5LjQ1Il1dLCAic291cmNlIjogImh0dHA6Ly93d3cuZ2VvbG9neXBhZ2UuY29tLzIwMTkvMDQvd2hlcmUtd2FzLXRoZS1tb3N0LWdvbGQtZm91bmQtaW4tdGhlLXVuaXRlZC1zdGF0ZXMuaHRtbCIsICJjb250ZW50IjogIkdvbGQgaXMgYSBjaGVtaWNhbCBlbGVtZW50IHdpdGggc3ltYm9sIEF1IGFuZCBhdG9taWMgbnVtYmVyIDc5LCBtYWtpbmcgaXQgb25lIG9mIHRoZSBoaWdoZXIgYXRvbWljIG51bWJlciBlbGVtZW50cyB0aGF0IG9jY3VyIG5hdHVyYWxseS4gSW4gaXRzIHB1cmVzdCBmb3JtLCBpdCBpcyBhIGJyaWdodCwgc2xpZ2h0bHkgcmVkZGlzaCB5ZWxsb3csIGRlbnNlLCBzb2Z0LCBtYWxsZWFibGUsIGFuZCBkdWN0aWxlIG1ldGFsLiBDaGVtaWNhbGx5LCBnb2xkIGlzIGEgdHJhbnNpdGlvbiBtZXRhbCBhbmQgYSBncm91cCAxMSBlbGVtZW50LiAgV2hlcmUgdG8gRmluZCBHb2xkIGluIHRoZSBVbml0ZWQgU3RhdGVzPyAgR29sZCB3YXMgZGlzY292ZXJlZCBpbiBBbGFiYW1hIGFib3V0IDE4MzAsIHNob3J0bHkgZm9sbG93aW5nIHRoZSBHZW9yZ2lhIEdvbGQgUnVzaC4gVGhlIHByaW5jaXBhbCBkaXN0cmljdHMgd2VyZSB0aGUgQXJiYWNvb2NoZWUgZGlzdHJpY3QgaW4gQ2xlYnVybmUgQ291bnR5LCBtb3N0bHkgZnJvbSBwbGFjZXIgZGVwb3NpdHMsIGFuZCB0aGUgSG9nIE1vdW50YWluIGRpc3RyaWN0IGluIFRhbGxhcG9vc2EgQ291bnR5LCB3aGljaCBwcm9kdWNlZCAyNCwwMDAgdHJveSBvdW5jZXMgKDc1MCBrZykgZnJvbSB2ZWlucyBpbiBzY2hpc3QuICBSdXNzaWFuIGV4cGxvcmVycyBkaXNjb3ZlcmVkIHBsYWNlciBnb2xkIGluIHRoZSBLZW5haSBSaXZlciBpbiAxODQ4LCBidXQgbm8gZ29sZCB3YXMgcHJvZHVjZWQuIEdvbGQgbWluaW5nIHN0YXJ0ZWQgaW4gMTg3MCBmcm9tIHBsYWNlcnMgc291dGhlYXN0IG9mIEp1bmVhdS4gQWxhc2thIHByb2R1Y2VkIGEgdG90YWwgb2YgNDAsMzAwLDAwMCB0cm95IG91bmNlcyAoMSwyNTAsMDAwIGtnKSBvZiBnb2xkIGZyb20gMTg4MCB0aHJvdWdoIHRoZSBlbmQgb2YgMjAwNy4gSW4gMjAxNSBBbGFza2FuIG1pbmVzIHByb2R1Y2VkIDg3Myw5ODQgdHJveSBvdW5jZXMgKDI3LDE4My45IGtnKSBvZiBnb2xkLCAxMi43JSBvZiBVUyBwcm9kdWN0aW9uLiBUaGUgbGFyZ2VzdCBnb2xkIHByb2R1Y2VyIGlzIHRoZSBGb3J0IEtub3ggbWluZSwgYSBsYXJnZSBvcGVuIHBpdCBhbmQgY3lhbmlkZSBsZWFjaGluZyBvcGVyYXRpb24gaW4gdGhlIEZhaXJiYW5rcyBtaW5pbmcgZGlzdHJpY3QuICBBcml6b25hIGhhcyBwcm9kdWNlZCBtb3JlIHRoYW4gMTYgbWlsbGlvbiB0cm95IG91bmNlcyAoNDk4IHRvbm5lcykgb2YgZ29sZC4gIEdvbGQgbWluaW5nIGluIEFyaXpvbmEgcmVwb3J0ZWRseSBiZWdhbiBpbiAxNzc0IHdoZW4gU3BhbmlzaCBwcmllc3QgTWFudWVsIExvcGV6IGRpcmVjdGVkIFBhcGFnbyBJbmRpYW5zIHRvIHdhc2ggZ29sZCBmcm9tIGdyYXZlbCBvbiB0aGUgZmxhbmtzIG9mIHRoZSBRdWlqb3RvYSBNb3VudGFpbnMsIFBpbWEgQ291bnR5LiBHb2xkIG1pbmluZyBjb250aW51ZWQgdGhlcmUgdW50aWwgMTg0OSwgd2hlbiB0aGUgTWV4aWNhbiBtaW5lcnMgd2VyZSBsdXJlZCBhd2F5IGJ5IHRoZSBDYWxpZm9ybmlhIEdvbGQgUnVzaC4gT3RoZXIgZ29sZCBtaW5pbmcgdW5kZXIgU3BhbmlzaCBhbmQgTWV4aWNhbiBydWxlIHRvb2sgcGxhY2UgaW4gdGhlIE9ybyBCbGFuY28gZGlzdHJpY3Qgb2YgU2FudGEgQ3J1eiBDb3VudHksIGFuZCB0aGUgQXJpdmFjYSBkaXN0cmljdCwgUGltYSBDb3VudHkuICBNb3VudGFpbiBtYW4gUGF1bGluZSBXZWF2ZXIgZGlzY292ZXJlZCBwbGFjZXIgZ29sZCBvbiB0aGUgZWFzdCBzaWRlIG9mIHRoZSBDb2xvcmFkbyBSaXZlciBpbiAxODYyLiBXZWF2ZXJcdTIwMTlzIGRpc2NvdmVyeSBzdGFydGVkIHRoZSBDb2xvcmFkbyBSaXZlciBHb2xkIFJ1c2ggdG8gdGhlIG5vdyBnaG9zdCB0b3duIG9mIExhIFBheiwgQXJpem9uYSBhbmQgb3RoZXIgbG9jYXRpb25zIGFsb25nIHRoZSByaXZlciBpbiB0aGUgZW5zdWluZyB5ZWFycy4gIFNwYW5pc2ggcHJvc3BlY3RvcnMgZm91bmQgZ29sZCBpbiB0aGUgUG90aG9sZXMgZGlzdHJpY3QgYmV0d2VlbiAxNzc1IGFuZCAxNzgwLCBhbG9uZyB0aGUgQ29sb3JhZG8gUml2ZXIsIGluIHByZXNlbnQgSW1wZXJpYWwgQ291bnR5LCBDYWxpZm9ybmlhLCBhYm91dCB0ZW4gbWlsZXMgbm9ydGhlYXN0IGZyb20gWXVtYSwgQXJpem9uYS4gVGhlIGdvbGQgd2FzIHJlY292ZXJlZCBmcm9tIGRyeSBwbGFjZXJzLiBPdGhlciBwbGFjZXIgZGVwb3NpdHMgb24gdGhlIHdlc3QgYmFuayBvZiB0aGUgQ29sb3JhZG8gUml2ZXIgd2VyZSBxdWlja2x5IGZvdW5kLCBpbmNsdWRpbmcgdGhlIFBpY2FjaG8gYW5kIENhcmdvIE11Y2hhY2hvIGRpc3RyaWN0cy4gIFBsYWNlciBnb2xkIGRlcG9zaXRzIHdlcmUgZm91bmQgYXQgU2FuIFlzaWRybyBpbiBTYW4gRGllZ28gQ291bnR5IGluIDE4MjgsIFNhbiBGcmFuY2lzcXVpdG8gQ2FueW9uIGFuZCBQbGFjZXJpdGEgQ2FueW9uIGluIExvcyBBbmdlbGVzIENvdW50eSBpbiAxODM1IGFuZCAxODQyLCByZXNwZWN0aXZlbHkgIE1ham9yIGdvbGQgbWluaW5nIGluIENhbGlmb3JuaWEgYmVnYW4gZHVyaW5nIHRoZSBDYWxpZm9ybmlhIEdvbGQgUnVzaC4gR29sZCB3YXMgZm91bmQgYnkgSmFtZXMgTWFyc2hhbGwgYXQgU3V0dGVycyBNaWxsLCBwcm9wZXJ0eSBvZiBKb2huIFN1dHRlciwgaW4gcHJlc2VudC1kYXkgQ29sb21hLiBJbiAxODQ5LCBwZW9wbGUgc3RhcnRlZCBoZWFyaW5nIGFib3V0IHRoZSBnb2xkIGFuZCBhZnRlciBqdXN0IGEgZmV3IHllYXJzIFNhbiBGcmFuY2lzY29cdTIwMTlzIHBvcHVsYXRpb24gaW5jcmVhc2VkIHRvIHRob3VzYW5kcy4gIEdvbGQgd2FzIGRpc2NvdmVyZWQgaW4gMTg1OCBkdXJpbmcgdGhlIFBpa2VcdTIwMTlzIFBlYWsgR29sZCBSdXNoIGluIHRoZSB2aWNpbml0eSBvZiBwcmVzZW50LWRheSBEZW52ZXIgaW4gMTg1OCwgYnV0IHRoZSBkZXBvc2l0cyB3ZXJlIHNtYWxsLiBUaGUgZmlyc3QgaW1wb3J0YW50IGdvbGQgZGlzY292ZXJpZXMgaW4gQ29sb3JhZG8gd2VyZSBpbiB0aGUgQ2VudHJhbCBDaXR5LUlkYWhvIFNwcmluZ3MgZGlzdHJpY3QgaW4gSmFudWFyeSAxODU5LiBPbmx5IG9uZSBDb2xvcmFkbyBtaW5lIGNvbnRpbnVlcyB0byBwcm9kdWNlIGdvbGQsIHRoZSBDcmlwcGxlIENyZWVrICYgVmljdG9yIEdvbGQgTWluZSBhdCBWaWN0b3IgbmVhciBDb2xvcmFkbyBTcHJpbmdzLCBhbiBvcGVuLXBpdCBoZWFwIGxlYWNoIG9wZXJhdGlvbiBvd25lZCBieSBOZXdtb250IE1pbmluZyBDb3Jwb3JhdGlvbiwgd2hpY2ggcHJvZHVjZWQgMzYwLDAwMCB0cm95IG91bmNlcyAoMTEsMDAwIGtnKSBvZiBnb2xkIGluIDIwMTguICBTbWFsbCBhbW91bnRzIG9mIGdvbGQgd2VyZSBtaW5lZCBjb21tZXJjaWFsbHkgaW4gTm9ydGggRWFzdGVybiBGbG9yaWRhIGR1cmluZyB0aGUgbGF0ZSAxOXRoIENlbnR1cnksIGF0IHRoZSBzaXRlIHdoZXJlIE1pa2UgUm9lc3MgR29sZCBIZWFkIEJyYW5jaCBTdGF0ZSBQYXJrIGlzIGxvY2F0ZWQgdG9kYXkuIE5vIHJlY29yZHMgYXJlIGV4dGFudCBvbiB0aGUgYW1vdW50IG9mIGdvbGQgcHJvZHVjZWQsIGJ1dCB0aGUgZmluZCB3YXMgaW5zdWZmaWNpZW50IHRvIGtlZXAgdGhlIG9wZXJhdGlvbiBydW5uaW5nIGNvbW1lcmNpYWxseSwgYW5kIHRoZSBzbWFsbCBhbW91bnQgb2YgcGF5IGRpcnQgd2FzIGRlcGxldGVkIHdpdGhpbiBhIG1hdHRlciBvZiBtb250aHMuICBHZW9yZ2lhIGlzIGNyZWRpdGVkIHdpdGggYSB0b3RhbCBoaXN0b3JpY2FsIHByb2R1Y3Rpb24gb2YgODcxLDAwMCB0cm95IG91bmNlcyAoMjcsMTAwIGtnKSBvZiBnb2xkIGZyb20gMTgzMCB0aHJvdWdoIDE5NTkuIEFsdGhvdWdoIGhpc3RvcmljYWxseSBpbXBvcnRhbnQsIHRoZSBzdGF0ZSBpcyBub3QgY3VycmVudGx5IGEgZ29sZCBwcm9kdWNlci4gIEdvbGQgd2FzIGZpcnN0IGRpc2NvdmVyZWQgaW4gSWRhaG8gaW4gMTg2MCwgaW4gUGllcmNlIGF0IHRoZSBqdW5jdHVyZSB3aGVyZSBDYW5hbCBDcmVlayBtZWV0cyBPcm9maW5vIENyZWVrLiAgVGhlIGxlYWRpbmcgaGlzdG9yaWNhbCBnb2xkLXByb2R1Y2luZyBkaXN0cmljdCBpcyB0aGUgQm9pc2UgQmFzaW4gaW4gQm9pc2UgQ291bnR5LCB3aGljaCB3YXMgZGlzY292ZXJlZCBpbiAxODYyIGFuZCBwcm9kdWNlZCAyLjkgbWlsbGlvbiB0cm95IG91bmNlcyAoOTAuMiB0b25uZXMpLCBtb3N0bHkgZnJvbSBwbGFjZXJzLiAgVGhlIEZyZW5jaCBDcmVlay1GbG9yZW5jZSBkaXN0cmljdCBpbiBJZGFobyBDb3VudHkgYmVnYW4gaW4gdGhlIDE4NjBzLCBhbmQgaGFzIHByb2R1Y2VkIGFib3V0IDEgbWlsbGlvbiB0cm95IG91bmNlcyAoMzEgdG9ubmVzKSBmcm9tIHBsYWNlcnMuICBUaGUgU2lsdmVyIENpdHkgZGlzdHJpY3QgaW4gT3d5aGVlIENvdW50eSBiZWdhbiBwcm9kdWNpbmcgaW4gMTg2MywgYW5kIG1hZGUgb3ZlciAxIG1pbGxpb24gdHJveSBvdW5jZXMgKDMxIHRvbm5lcyksIG1vc3RseSBmcm9tIGxvZGUgZGVwb3NpdHMuICBUaGUgQ29ldXIgZFx1MjAxOUFsZW5lIGRpc3RyaWN0IGluIFNob3Nob25lIENvdW50eSBoYXMgbWFkZSA0NCwwMDAgdHJveSBvdW5jZXMgKDEsNDAwIGtnKSBvZiBnb2xkIGFzIGJ5cHJvZHVjdCB0byBzaWx2ZXIgbWluaW5nLiAgSW4gMjAwNiwgYWN0aXZlIGdvbGQgbWluZXMgaW4gSWRhaG8gaW5jbHVkZWQgdGhlIFNpbHZlciBTdHJhbmQgbWluZSBhbmQgdGhlIEJvbmQgbWluZS4gIEdvbGQgd2FzIHJlcG9ydGVkIGluIE1hcnlsYW5kIGFzIGVhcmx5IGFzIDE4MzAsIGJ1dCBubyBwcm9kdWN0aW9uIHJlc3VsdGVkLiBQbGFjZXIgZ29sZCB3YXMgZGlzY292ZXJlZCBhdCBHcmVhdCBGYWxscyBuZWFyIFdhc2hpbmd0b24sIERDIGluIDE4NjEgZHVyaW5nIHRoZSBBbWVyaWNhbiBDaXZpbCBXYXIgYnkgVW5pb24gc29sZGllcnMgZnJvbSBDYWxpZm9ybmlhLiBBZnRlciB0aGUgd2FyIGEgbnVtYmVyIG9mIG1pbmVzIHdlcmUgb3BlbmVkIG9uIGdvbGQtYmVhcmluZyBxdWFydHogdmVpbnMgaW4gTW9udGdvbWVyeSBDb3VudHkuIE5vIGdvbGQgcHJvZHVjdGlvbiBoYXMgYmVlbiByZXBvcnRlZCBzaW5jZSAxOTUxLiBUb3RhbCBwcm9kdWN0aW9uIHdhcyBhYm91dCA2LDAwMCB0cm95IG91bmNlcyAoMTkwIGtnKS4gIEFwcHJveGltYXRlbHkgMjksMDAwIHRyb3kgb3VuY2VzICg5MDAga2cpIG9mIGdvbGQgd2VyZSBwcm9kdWNlZCBmcm9tIHRoZSBSb3BlcyBnb2xkIG1pbmUgbm9ydGhlYXN0IG9mIElzaHBlbWluZyBpbiBNYXJxdWV0dGUgQ291bnR5LCBNaWNoaWdhbi4gVGhlIHVuZGVyZ3JvdW5kIG1pbmUsIG9yaWdpbmFsbHkgb3BlcmF0ZWQgZnJvbSAxODgwIHRvIDE4OTcsIGFuZCByZW9wZW5lZCBmcm9tIDE5ODNcdTIwMTMxOTg5LCBleHRyYWN0ZWQgZ29sZCBmcm9tIHF1YXJ0eiB2ZWlucyBpbiBwZXJpZG90aXRlLiAgR29sZCB3YXMgZmlyc3QgZGlzY292ZXJlZCBpbiBNb250YW5hIGluIDE4NTIsIGJ1dCBtaW5pbmcgZGlkIG5vdCBiZWdpbiB1bnRpbCAxODYyLCB3aGVuIGdvbGQgcGxhY2VycyB3ZXJlIGRpc2NvdmVyZWQgYXQgQmFubmFjaywgTW9udGFuYSBpbiAxODYyLiBUaGUgcmVzdWx0aW5nIGdvbGQgcnVzaCByZXN1bHRlZCBpbiBtb3JlIHBsYWNlciBkaXNjb3ZlcmllcywgaW5jbHVkaW5nIHRob3NlIGF0IFZpcmdpbmlhIENpdHkgaW4gMTg2MywgYW5kIGF0IEhlbGVuYSBhbmQgQnV0dGUgaW4gMTg2NC4gSW4gMTg2NywgdGhlIEF0bGFudGljIENhYmxlIFF1YXJ0eiBMb2RlIHdhcyBsb2NhdGVkLiAgVGhlIEJ1dHRlIGRpc3RyaWN0LCBhbHRob3VnaCBtaW5lZCBwcmltYXJpbHkgZm9yIGNvcHBlciwgcHJvZHVjZWQgMi45IG1pbGxpb24gb3VuY2VzICg5MSB0b25lcykgb2YgZ29sZCB0aHJvdWdoIDE5OTAsIGFsbW9zdCBhbGwgYXMgYSBieXByb2R1Y3Qgb2YgY29wcGVyIHByb2R1Y3Rpb24uICBDdXJyZW50IGFjdGl2ZSBoYXJkcm9jayBnb2xkIG1pbmVzIGluY2x1ZGUgdGhlIE1vbnRhbmEgVHVubmVscyBtaW5lLCBhbmQgdGhlIEdvbGRlbiBTdW5saWdodCBtaW5lLiBBY3RpdmUgZ29sZCBwbGFjZXJzIGluY2x1ZGUgdGhlIEJyb3ducyBHdWxjaCBwbGFjZXIgYW5kIHRoZSBDb25mZWRlcmF0ZSBHdWxjaCBwbGFjZXIuIEdvbGQgaXMgYWxzbyBwcm9kdWNlZCBmcm9tIHRocmVlIHBsYXRpbnVtIG1pbmVzIGluIHRoZSBTdGlsbHdhdGVyIGlnbmVvdXMgY29tcGxleDogdGhlIFN0aWxsd2F0ZXIgbWluZSwgdGhlIExvZGVzdGFyIG1pbmUsIGFuZCB0aGUgRWFzdCBCb3VsZGVyIFByb2plY3QuICBOZXZhZGEgaXMgdGhlIGxlYWRpbmcgZ29sZC1wcm9kdWNpbmcgc3RhdGUgaW4gdGhlIG5hdGlvbiwgaW4gMjAxNiBwcm9kdWNpbmcgNSw0NjcsNjQ2IHRyb3kgb3VuY2VzICgxNzAuMDYgdG9ubmVzKSwgcmVwcmVzZW50aW5nIDgxJSBvZiBVUyBnb2xkIGFuZCA1LjUlIG9mIHRoZSB3b3JsZFx1MjAxOXMgcHJvZHVjdGlvbi4gTXVjaCBvZiB0aGUgZ29sZCBpbiBOZXZhZGEgY29tZXMgZnJvbSBsYXJnZSBvcGVuIHBpdCBtaW5pbmcgYW5kIHdpdGggaGVhcCBsZWFjaGluZyByZWNvdmVyeS4gU29tZSBvZiB0aGUgd29ybGRcdTIwMTlzIG1ham9yIG1pbmluZyBjb21wYW5pZXMsIGluY2x1ZGluZyBOZXdtb250IE1pbmluZywgQmFycmljayBHb2xkIGFuZCBLaW5yb3NzIEdvbGQsIG9wZXJhdGUgZ29sZCBtaW5lcyBpbiB0aGUgc3RhdGUuIEFjdGl2ZSBtYWpvciBtaW5lcyBpbmNsdWRlIENvcnRleiwgVHdpbiBDcmVla3MsIEJldHotUG9zdCwgTWVpa2xlLCBNYXJpZ29sZCwgUm91bmQgTW91bnRhaW4sIEplcnJpdHQgQ2FueW9uIGFuZCBHZXRjaGVsbC4gIE5ld21vbnQgYW5kIEJhcnJpY2sgb3BlcmF0ZSB0aGUgbGFyZ2VzdCBtaW5pbmcgb3BlcmF0aW9ucywgb24gdGhlIHByb2xpZmljIENhcmxpbiBUcmVuZCwgb25lIG9mIHRoZSB3b3JsZFx1MjAxOXMgcmljaGVzdCBtaW5pbmcgZGlzdHJpY3RzLiAgR29sZCB3YXMgZmlyc3QgZGlzY292ZXJlZCBpbiBOZXcgTWV4aWNvIGluIDE4MjggaW4gdGhlIFx1MjAxY09sZCBQbGFjZXJzXHUyMDFkIGRpc3RyaWN0IGluIHRoZSBPcnRpeiBNb3VudGFpbnMsIFNhbnRhIEZlIENvdW50eSwgTmV3IE1leGljby4gVGhlIHBsYWNlciBnb2xkIGRpc2NvdmVyeSB3YXMgZm9sbG93ZWQgYnkgZGlzY292ZXJ5IG9mIGEgbmVhcmJ5IGxvZGUgZGVwb3NpdC4gIEluIDE4NzcsIHR3byBwcm9zcGVjdG9ycyBjb2xsZWN0ZWQgZmxvYXQgaW4gdGhlIGFyZWEgb2YgdGhlIGZ1dHVyZSBPcHBvcnR1bml0eSBNaW5lIG5lYXIgSGlsbHNib3JvLCBOZXcgTWV4aWNvLCB3aGljaCB3YXMgYXNzYXllZCBhdCAkMTYwIHBlciB0b24gaW4gZ29sZCBhbmQgc2lsdmVyLiBTb29uLCBvcmUgd2FzIGRpc2NvdmVyZWQgYXQgdGhlIG5lYXJieSBSYXR0bGVzbmFrZSB2ZWluIGFuZCBhIHBsYWNlciBkZXBvc2l0IG9mIGdvbGQgd2FzIGZvdW5kIGluIE5vdmVtYmVyIGF0IHRoZSBSYXR0bGVzbmFrZSBhbmQgV2lja3MgZ3VsY2hlcy4gVG90YWwgcHJvZHVjdGlvbiBwcmlvciB0byAxOTA0IHdhcyBhYm91dCAkNiw3NTAsMDAwLiAgSW4gMjAwNyBhbGwgZ29sZCBwcm9kdWN0aW9uIGluIE5ldyBNZXhpY28gKDEzLDAwMCB0cm95IG91bmNlcyAoNDAwIGtnKSkgY2FtZSBhcyBhIGJ5cHJvZHVjdCBvZiBjb3BwZXIgbWluaW5nIGZyb20gdHdvIGxhcmdlIG9wZW4gcGl0IG1pbmVzIGluIEdyYW50IENvdW50eS4gSG93ZXZlciwgdHdvIHByaW1hcnkgZ29sZCBtaW5lcyBhcmUgYmVpbmcgcmVhZGllZCBmb3IgcHJvZHVjdGlvbjogdGhlIE5vcnRoc3RhciBtaW5lIGluIFJpbyBBcnJpYmEgQ291bnR5LCBhbmQgdGhlIFNhbiBMb3JlbnpvIENsYWltcyBtaW5lIGluIFNvY29ycm8gQ291bnR5LiAgTm9ydGggQ2Fyb2xpbmEgd2FzIHRoZSBzaXRlIG9mIHRoZSBmaXJzdCBnb2xkIHJ1c2ggaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIGZvbGxvd2luZyB0aGUgZGlzY292ZXJ5IG9mIGEgMTctcG91bmQgKDcuNyBrZykgZ29sZCBudWdnZXQgYnkgMTIteWVhci1vbGQgQ29ucmFkIFJlZWQgaW4gYSBjcmVlayBhdCBoaXMgZmF0aGVyXHUyMDE5cyBmYXJtIGluIDE3OTkuIFRoZSBSZWVkIEdvbGQgTWluZSwgc291dGh3ZXN0IG9mIEdlb3JnZXZpbGxlIGluIENhYmFycnVzIENvdW50eSwgTm9ydGggQ2Fyb2xpbmEgcHJvZHVjZWQgYWJvdXQgNTAsMDAwIHRyb3kgb3VuY2VzICgxLDYwMCBrZykgb2YgZ29sZCBmcm9tIGxvZGUgYW5kIHBsYWNlciBkZXBvc2l0cy4gIEdvbGQgd2FzIHByb2R1Y2VkIGZyb20gMTUgZGlzdHJpY3RzLCBhbG1vc3QgYWxsIGluIHRoZSBQaWVkbW9udCByZWdpb24gb2YgdGhlIHN0YXRlLiBUb3RhbCBnb2xkIHByb2R1Y3Rpb24gaXMgZXN0aW1hdGVkIGF0IDEuMiBtaWxsaW9uIHRyb3kgb3VuY2VzICgzNy4zIHRvbm5lcykuICBBbHRob3VnaCBnb2xkIG1pbmVzIGFyZSBzcHJlYWQgb3ZlciBtdWNoIG9mIE9yZWdvbiwgYWxtb3N0IGFsbCBvZiB0aGUgZ29sZCBwcm9kdWNlZCBoYXMgY29tZSBmcm9tIHR3byBwcmluY2lwYWwgYXJlYXM6IHRoZSBLbGFtYXRoIE1vdW50YWlucyBpbiBzb3V0aHdlc3QgT3JlZ29uLCBpbmNsdWRpbmcgQ29vcywgQ3VycnksIERvdWdsYXMsIEphY2tzb24gYW5kIEpvc2VwaGluZSBjb3VudGllczsgYW5kIHRoZSBCbHVlIE1vdW50YWlucyBpbiBub3J0aGVhc3QgT3JlZ29uLCBtb3N0bHkgaW4gQmFrZXIgYW5kIEdyYW50IGNvdW50aWVzLiAgUHJvc3BlY3RvcnMgZnJvbSBJbGxpbm9pcyBkaXNjb3ZlcmVkIHBsYWNlciBnb2xkIGluIHRoZSBLbGFtYXRoIE1vdW50YWlucyBvZiBzb3V0aHdlc3QgT3JlZ29uIGluIDE4NTAsIHN0YXJ0aW5nIGEgcnVzaCB0byB0aGUgYXJlYS4gTG9kZSBnb2xkIGRlcG9zaXRzIHdlcmUgYWxzbyBkaXNjb3ZlcmVkLiAgVHJhdmVsbGVycyBhbG9uZyB0aGUgT3JlZ29uIFRyYWlsIGJvdW5kIGZvciB0aGUgV2lsbGFtZXR0ZSBWYWxsZXkgYXJlIHNhaWQgdG8gaGF2ZSBkaXNjb3ZlcmVkIGdvbGQgaW4gbm9ydGhlYXN0ZXJuIE9yZWdvbiBpbiAxODQ1LCBidXQgbWluaW5nIGluIGVhcm5lc3QgZGlkIG5vdCBiZWdpbiB1bnRpbCAxODYxLiAgQWJvdXQgMzcsMDAwIHRyb3kgb3VuY2VzICgxLDIwMCBrZykgb2YgZ29sZCB3YXMgcHJvZHVjZWQgZnJvbSB0aGUgQ29ybndhbGwgaXJvbiBtaW5lIGZpdmUgbWlsZXMgc291dGggb2YgTGViYW5vbiwgTGViYW5vbiBDb3VudHksIFBlbm5zeWx2YW5pYS4gQWx0aG91Z2ggdGhlIGRlcG9zaXQgcHJvZHVjZWQgaXJvbiBzaW5jZSAxNzQyLCBubyBnb2xkIHdhcyByZXBvcnRlZCBmcm9tIHRoZSBtaW5lIHVudGlsIDE4NzguICBTb3V0aCBDYXJvbGluYSBoYWQgYSBudW1iZXIgb2YgbG9kZSBnb2xkIG1pbmVzIGFsb25nIHRoZSBDYXJvbGluYSBTbGF0ZSBCZWx0LlszOF0gIFRoZSBIYWlsZSBkZXBvc2l0IHdhcyBkaXNjb3ZlcmVkIGluIExhbmNhc3RlciBDb3VudHkgaW4gMTgyNywgYW5kIGF0IGxlYXN0IDI1NywwMDAgdHJveSBvdW5jZXMgKDgsMDAwIGtnKSBvZiBnb2xkIHdlcmUgZXh0cmFjdGVkIGludGVybWl0dGVudGx5IGJldHdlZW4gdGhlbiBhbmQgMTk0Miwgd2hlbiB0aGUgZ29sZCBtaW5lIHdhcyBvcmRlcmVkIGNsb3NlZCBhcyBub25lc3NlbnRpYWwgdG8gdGhlIHdhciBlZmZvcnQuIEJlZ2lubmluZyBpbiAxOTUxLCB0aGUgZGVwb3NpdCB3YXMgbWluZWQgZm9yIGFzc29jaWF0ZWQgc2VyaWNpdGUsIHdoaWNoIHdhcyB1c2VkIGFzIGEgd2hpdGUgZmlsbGVyLiAgVGhlIG9ubHkgb3BlcmF0aW5nIGdvbGQgbWluZSBpbiBTb3V0aCBEYWtvdGEgaXMgdGhlIFdoYXJmIG1pbmUsIGF0IExlYWQsIGFuIG9wZW4gcGl0IGhlYXAgbGVhY2ggb3BlcmF0aW9uIG9wZXJhdGVkIGJ5IENvZXVyIE1pbmluZyB0aGF0IHByb2R1Y2VkIDEwOSwwMDAgb3VuY2VzIG9mIGdvbGQgaW4gMjAxNi4gIFBsYWNlciBnb2xkIHdhcyBkaXNjb3ZlcmVkIG9uIENva2VyIENyZWVrIGluIE1vbnJvZSBDb3VudHksIFRlbm5lc3NlZSBpbiAxODI3LiBUaGUgZGlzdHJpY3QgcHJvZHVjZWQgYWJvdXQgOSwwMDAgdHJveSBvdW5jZXMgKDI4MCBrZykuICBBYm91dCAxNSwwMDAgdHJveSBvdW5jZXMgKDQ3MCBrZykgb2YgZ29sZCB3YXMgcmVjb3ZlcmVkIGZyb20gdGhlIG1hc3NpdmUgc3VsZmlkZSBjb3BwZXIgb3JlcyBhdCBEdWNrdG93biwgVGVubmVzc2VlLiAgU29tZSBwcm9zcGVjdHMgaGF2ZSBiZWVuIGV4Y2F2YXRlZCBmb3IgZ29sZCBvbiB0aGUgTGxhbm8gVXBsaWZ0IG9mIGNlbnRyYWwgVGV4YXMuIEdvbGQgcHJvc3BlY3RzIGluY2x1ZGUgdGhlIEhlYXRoIG1pbmUgYW5kIHRoZSBCYWJ5aGVhZCBkaXN0cmljdCwgYm90aCBpbiBMbGFubyBDb3VudHksIGFuZCB0aGUgQ2VudHJhbCBUZXhhcyBtaW5lIGluIEdpbGxlc3BpZSBDb3VudHkuIEdvbGQgcHJvZHVjdGlvbiwgaWYgYW55LCBpcyBub3Qga25vd24uIEhpc3RvcmljYWxseSwgdGhlIExvc3QgTmlnZ2VyIEdvbGQgTWluZSBtYXkgYmUgaW4gVGV4YXMuICBNb3N0IGdvbGQgcHJvZHVjZWQgaW4gVXRhaCB0b2RheSBpcyBhIGJ5cHJvZHVjdCBvZiB0aGUgaHVnZSBCaW5naGFtIENhbnlvbiBjb3BwZXIgbWluZSwgc291dGh3ZXN0IG9mIFNhbHQgTGFrZSBDaXR5LiBJbiAyMDEzLCB0aGUgQmluZ2hhbSBDYW55b24gbWluZSBwcm9kdWNlZCAxOTIsMzAwIHRyb3kgb3VuY2VzICg1LDk4MCBrZykgb2YgZ29sZC4gT3ZlciBpdHMgbGlmZSwgQmluZ2hhbSBDYW55b24gaGFzIHByb2R1Y2VkIG1vcmUgdGhhbiAyMyBtaWxsaW9uIG91bmNlcyAoNzE1IHRvbm5lcykgb2YgZ29sZCwgbWFraW5nIGl0IG9uZSBvZiB0aGUgbGFyZ2VzdCBnb2xkIHByb2R1Y2VycyBpbiB0aGUgVVMuICBUaGUgQmFybmV5cyBDYW55b24gbWluZSBpbiBTYWx0IExha2UgQ291bnR5LCB0aGUgbGFzdCBwcmltYXJ5IGdvbGQgbWluZSB0byBvcGVyYXRlIGluIFV0YWgsIHN0b3BwZWQgbWluaW5nIGluIDIwMDEsIGJ1dCBpcyBzdGlsbCByZWNvdmVyaW5nIGdvbGQgZnJvbSBpdHMgaGVhcCBsZWFjaGluZyBwYWRzLiBVdGFoIGdvbGQgcHJvZHVjdGlvbiB3YXMgNDYwLDAwMCB0cm95IG91bmNlcyAoMTQsMDAwIGtnKSBpbiAyMDA2LiAgTW9zdCBnb2xkIG1pbmluZyBpbiBWaXJnaW5pYSB3YXMgY29uY2VudHJhdGVkIGluIHRoZSBWaXJnaW5pYSBHb2xkLVB5cml0ZSBiZWx0IGluIGEgbGluZSB0aGF0IHJ1bnMgbm9ydGhlYXN0IHRvIHNvdXRod2VzdCB0aHJvdWdoIHRoZSBjb3VudGllcyBvZiBGYWlyZmF4LCBQcmluY2UgV2lsbGlhbSwgU3RhZmZvcmQsIEZhdXF1aWVyLCBDdWxwZXBlciwgU3BvdHN5bHZhbmlhLCBPcmFuZ2UsIExvdWlzYSwgRmx1dmFubmEsIEdvb2NobGFuZCwgQ3VtYmVybGFuZCwgYW5kIEJ1Y2tpbmdoYW0uIFNvbWUgZ29sZCB3YXMgYWxzbyBtaW5lZCBpbiBIYWxpZmF4LCBGbG95ZCwgYW5kIFBhdHJpY2sgY291bnRpZXMuICBHb2xkIHdhcyBmaXJzdCBkaXNjb3ZlcmVkIGluIFdhc2hpbmd0b24gaW4gMTg1MywgYXMgcGxhY2VyIGRlcG9zaXRzIGluIHRoZSBZYWtpbWEgVmFsbGV5LiBQcm9kdWN0aW9uIGZyb20gdGhlIHN0YXRlIG5ldmVyIGV4Y2VlZGVkIDUwLDAwMCB0cm95IG91bmNlcyBwZXIgeWVhciB1bnRpbCB0aGUgbWlkLTE5MzBzLCB3aGVuIGxhcmdlIGhhcmQgcm9jayBkZXBvc2l0cyB3ZXJlIGRldmVsb3BlZCBuZWFyIHRoZSBDaGVsYW4gTGFrZSBhbmQgV2VuYXRjaGVlIGRlcG9zaXRzIGluIENoZWxhbiBDb3VudHksIGFuZCB0aGUgUmVwdWJsaWMgZGVwb3NpdCBpbiBGZXJyeSBDb3VudHkuIFByb2R1Y3Rpb24gdGhyb3VnaCAxOTY1IGlzIGVzdGltYXRlZCB0byBiZSAyLjMgbWlsbGlvbiBvdW5jZXMuICBHb2xkIHdhcyBkaXNjb3ZlcmVkIGF0IHRoZSBTb3V0aCBQYXNzLUF0bGFudGljIENpdHktU3dlZXR3YXRlciBkaXN0cmljdCBpbiBwcmVzZW50IEZyZW1vbnQgQ291bnR5IGluIDE4NDIuIFRoZSBwbGFjZXJzIHdlcmUgd29ya2VkIGludGVybWl0dGVudGx5IHVudGlsIDE4NjcsIHdoZW4gdGhlIGZpcnN0IGltcG9ydGFudCBnb2xkIHZlaW4gd2FzIGRpc2NvdmVyZWQsIGFuZCBwcm9zcGVjdG9ycyBhbmQgbWluZXJzIHJ1c2hlZCB0byB0aGUgYXJlYS4uIFRoZSB0b3ducyBvZiBTb3V0aCBQYXNzIENpdHksIEF0bGFudGljIENpdHksIGFuZCBNaW5lclx1MjAxOXMgRGVsaWdodCBjYXRlcmVkIHRvIHRoZSBtaW5lcnMuIFRoZSBkaXN0cmljdCB3YXMgbmVhcmx5IGRlc2VydGVkIGJ5IDE4NzUsIGFuZCB3YXMgd29ya2VkIG9ubHkgaW50ZXJtaXR0ZW50bHkgYWZ0ZXJ3YXJkLiBUb3RhbCBnb2xkIHByb2R1Y3Rpb24gd2FzIGFib3V0IDMwMCwwMDAgdHJveSBvdW5jZXMgKDksMzAwIGtnKS4gSW4gMTk2MiwgdGhlIGRpc3RyaWN0IGJlY2FtZSB0aGUgc2l0ZSBvZiBhIG1ham9yIGlyb24gbWluZS4gIFRoZSBmaXJzdCBzaWduaWZpY2FudCBnb2xkIHJ1c2ggaW4gdGhlIFVuaXRlZCBTdGF0ZXMgd2FzIGluIENhYmFycnVzIENvdW50eSwgTm9ydGggQ2Fyb2xpbmEgKGVhc3Qgb2YgQ2hhcmxvdHRlKSwgaW4gMTc5OSBhdCB0b2RheVx1MjAxOXMgUmVlZFx1MjAxOXMgR29sZCBNaW5lLiBUaGlydHkgeWVhcnMgbGF0ZXIsIGluIDE4MjksIHRoZSBHZW9yZ2lhIEdvbGQgUnVzaCBpbiB0aGUgc291dGhlcm4gQXBwYWxhY2hpYW5zIG9jY3VycmVkLiBJdCB3YXMgZm9sbG93ZWQgYnkgdGhlIENhbGlmb3JuaWEgR29sZCBSdXNoIG9mIDE4NDhcdTIwMTM1NSBpbiB0aGUgU2llcnJhIE5ldmFkYSwgd2hpY2ggY2FwdHVyZWQgdGhlIHBvcHVsYXIgaW1hZ2luYXRpb24uICBUaGUgQ2FsaWZvcm5pYSBnb2xkIHJ1c2ggbGVkIGRpcmVjdGx5IHRvIHRoZSBzZXR0bGVtZW50IG9mIENhbGlmb3JuaWEgYnkgQW1lcmljYW5zIGFuZCB0aGUgcmFwaWQgZW50cnkgb2YgdGhhdCBzdGF0ZSBpbnRvIHRoZSB1bmlvbiBpbiAxODUwLiBUaGUgZ29sZCBydXNoIGluIDE4NDkgc3RpbXVsYXRlZCB3b3JsZHdpZGUgaW50ZXJlc3QgaW4gcHJvc3BlY3RpbmcgZm9yIGdvbGQsIGFuZCBsZWQgdG8gbmV3IHJ1c2hlcyBpbiBBdXN0cmFsaWEsIFNvdXRoIEFmcmljYSwgV2FsZXMgYW5kIFNjb3RsYW5kLiAgU3VjY2Vzc2l2ZSBnb2xkIHJ1c2hlcyBvY2N1cnJlZCBpbiB3ZXN0ZXJuIE5vcnRoIEFtZXJpY2E6IEZyYXNlciBDYW55b24sIHRoZSBDYXJpYm9vIGRpc3RyaWN0IGFuZCBvdGhlciBwYXJ0cyBvZiBCcml0aXNoIENvbHVtYmlhLCBpbiBOZXZhZGEsIGluIHRoZSBSb2NreSBNb3VudGFpbnMgaW4gQ29sb3JhZG8sIElkYWhvLCBNb250YW5hLCBlYXN0ZXJuIE9yZWdvbiwgYW5kIHdlc3Rlcm4gTmV3IE1leGljbyBUZXJyaXRvcnkgYW5kIGFsb25nIHRoZSBsb3dlciBDb2xvcmFkbyBSaXZlci4gUmVzdXJyZWN0aW9uIENyZWVrLCBuZWFyIEhvcGUsIEFsYXNrYSB3YXMgdGhlIHNpdGUgb2YgQWxhc2thXHUyMDE5cyBmaXJzdCBnb2xkIHJ1c2ggaW4gdGhlIG1pZFx1MjAxMzE4OTBzLiBPdGhlciBub3RhYmxlIEFsYXNrYSBHb2xkIFJ1c2hlcyB3ZXJlIE5vbWUsIEZhaXJiYW5rcywgYW5kIHRoZSBGb3J0eW1pbGUgUml2ZXIuICBPbmUgb2YgdGhlIGxhc3QgXHUyMDFjZ3JlYXQgZ29sZCBydXNoZXNcdTIwMWQgd2FzIHRoZSBLbG9uZGlrZSBHb2xkIFJ1c2ggaW4gQ2FuYWRhXHUyMDE5cyBZdWtvbiBUZXJyaXRvcnkgKDE4OTZcdTIwMTM5OSkuIFRoaXMgZ29sZCBydXNoIGlzIGltbW9ydGFsaXNlZCBpbiB0aGUgbm92ZWxzIG9mIEphY2sgTG9uZG9uLCBhbmQgQ2hhcmxpZSBDaGFwbGluXHUyMDE5cyBmaWxtIFRoZSBHb2xkIFJ1c2guIFJvYmVydCBXaWxsaWFtIFNlcnZpY2UgZGVwaWN0ZWQgd2l0aCB0YWxlbnQgaW4gaGlzIHBvZXRyaWVzIHRoZSBkcmFtYXRpYyBldmVudCBvZiB0aGUgR29sZCBSdXNoLCBlc3BlY2lhbGx5IGluIHRoZSBib29rIFRoZSBUcmFpbCBvZiBcdTIwMTk5OC4gVGhlIG1haW4gZ29sZGZpZWxkIHdhcyBhbG9uZyB0aGUgc291dGggZmxhbmsgb2YgdGhlIEtsb25kaWtlIFJpdmVyIG5lYXIgaXRzIGNvbmZsdWVuY2Ugd2l0aCB0aGUgWXVrb24gUml2ZXIgbmVhciB3aGF0IHdhcyB0byBiZWNvbWUgRGF3c29uIENpdHkgaW4gQ2FuYWRhXHUyMDE5cyBZdWtvbiBUZXJyaXRvcnksIGJ1dCBpdCBhbHNvIGhlbHBlZCBvcGVuIHVwIHRoZSByZWxhdGl2ZWx5IG5ldyBVUyBwb3NzZXNzaW9uIG9mIEFsYXNrYSB0byBleHBsb3JhdGlvbiBhbmQgc2V0dGxlbWVudCwgYW5kIHByb21vdGVkIHRoZSBkaXNjb3Zlcnkgb2Ygb3RoZXIgZ29sZCBmaW5kcy4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToyMyIsICJ0aXRsZSI6ICJXaGVyZSBXYXMgVGhlIE1vc3QgR29sZCBGb3VuZCBJbiBUaGUgVW5pdGVkIFN0YXRlcz8gfCBHZW9sb2d5IFBhZ2UifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJZaWVsZCwgbm90IHNwZWNpZmllZCBiZWxvdyIsICIgYXR0YWNrICIsICJhcnJlc3QiLCAiZGV0YWluIl0sICJjb3VudHJpZXMiOiBbIlVOSVRFRCBBUkFCIEVNSVJBVEVTIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIyNS4yNTIyIiwgIjU1LjI4Il1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmV4cHJlc3MuY28udWsvbmV3cy91ay8xMTE0MTMyL21vdGhlci1kdWJhaS1wcmlzb24taG9yc2UtZmFjZWJvb2stTGFsZWgtU2hhaHJhdmVzaCIsICJjb250ZW50IjogIkxhbGVoIFNoYWhyYXZlc2ggc3BlbnQgMzMgZGF5cyBkZXRhaW5lZCBpbiB0aGUgZW1pcmF0ZSBiZWZvcmUgYmVjb21pbmcgdGhlIGZpcnN0IEJyaXRpc2ggY2l0aXplbiB0byBiZSBjb252aWN0ZWQgdW5kZXIgdGhlIFVBRSdzIHN0cmljdCBjeWJlciBjcmltZSBsYXdzLiBUaGUgd2lmZSBoYWQgcmVwb3J0ZWQgaGVyIHRvIHBvbGljZSBmb3IgdHdvIHNvY2lhbCBtZWRpYSBtZXNzYWdlcyBwb3N0ZWQgb24gRmFjZWJvb2sgaW4gMjAxNi4gU2hlIHdhcyBmaW5hbGx5IHJldW5pdGVkIHdpdGggaGVyIDE0LXllYXItb2xkIGRhdWdodGVyIFBhcmlzIGluIHRoZSBhcnJpdmFscyBoYWxsIGF0IEhlYXRocm93IG9uIEZyaWRheSwgZm9sbG93aW5nIGFuIGludGVybmF0aW9uYWwgb3V0Y3J5IG92ZXIgaGVyIHRyZWF0bWVudC4gTGFsZWgsIDU1LCBmcm9tIFJpY2htb25kLCBTdXJyZXksIHdlcHQgYXMgc2hlIGFkbWl0dGVkOiBcIlRoZSBkYXkgYmVmb3JlIEkgd2FzIHRvbGQgSSB3YXMgZnJlZSB0byBnbyBJJ2QgZ2l2ZW4gdXAgaG9wZSBhbmQgd2FzIHN1aWNpZGFsLiBcIkkgZmVsdCBsaWtlIEkgd2FzIG5ldmVyIGdvaW5nIHRvIHNlZSBteSBkYXVnaHRlciBhZ2FpbiBhbmQgc2VudCBhIG1lc3NhZ2UgdG8gbXkgc2lzdGVyIHNheWluZyAnSSBjYW4ndCBkbyB0aGlzIGFueW1vcmUnLiBJIHRvbGQgaGVyICdJdCdzIGtpbGxpbmcgbWUsIGV2ZXJ5IGRheSBpcyBraWxsaW5nIG1lLiBJIGZlbHQgc28gbXVjaCBwYWluIGFuZCB0aGVuIEkgdHVybmVkIG9mZiBteSBwaG9uZS4gSSBjb3VsZCBzZWUgbXkgd2hvbGUgbGlmZSBmbGFzaGluZyBiZWZvcmUgbXkgZXllcyBhbmQgSSBqdXN0IHdhbnRlZCB0byBkaWUuIEl0IHdhcyB0b3J0dXJlIHRvIG1lLlwiICBMYWxlaCwgYSBwcml2YXRlbHkgZWR1Y2F0ZWQgZG9jdG9yJ3MgZGF1Z2h0ZXIsIHdhcyBhcnJlc3RlZCBhdCBEdWJhaSBJbnRlcm5hdGlvbmFsIEFpcnBvcnQgb24gTWFyY2ggMTAgYWZ0ZXIgc2hlIGFuZCBQYXJpcyB0cmF2ZWxsZWQgdG8gdGhlIGVtaXJhdGUgc28gdGhleSBjb3VsZCBncmlldmUgYXQgdGhlIGdyYXZlc2lkZSBvZiBMYWxlaCdzIGV4LWh1c2JhbmQgUGVkcm8gQ29ycmVpYSBEb3MgU2FudG9zIGFmdGVyIGhlIGRpZWQgb2YgYSBoZWFydCBhdHRhY2sgYWdlZCA1MSwgc2V2ZW4gZGF5cyBlYXJsaWVyLiBBdCBwYXNzcG9ydCBjb250cm9sIExhbGVoIHdhcyBoYXVsZWQgYXdheSBieSBwb2xpY2UsIHdobyB0b2xkIGhlciB0aGF0IGhlciBleCdzIG5ldyB3aWZlIGhhZCBtYWRlIGEgbGVnYWwgY29tcGxhaW50IGFib3V0IHR3byBGYWNlYm9vayBwb3N0cywgaW5jbHVkaW5nIG9uZSB3aGVyZSBzaGUgaGFkIGJlZW4gZGVzY3JpYmVkIGFzIFwiYSBob3JzZVwiLiBMYWxlaCBzYWlkOiBcIkkgY291bGRuJ3QgdW5kZXJzdGFuZCB3aGF0IHdhcyBoYXBwZW5pbmcgYW5kIHRoZW4gYSBwb2xpY2Ugb2ZmaWNlciBjYW1lIGluIGFuZCBzYWlkICdUaGVyZSdzIGEgY29tcGxhaW50IGFnYWluc3QgeW91IC0gZG8geW91IGtub3cgU2FtYWggYWwgSGFtbWFkaT8nIFwiSSBqdXN0IGJ1cnN0IGludG8gdGVhcnMuIEkgaGFkIGJlZW4gYXJyZXN0ZWQgZm9yIHR3byBGYWNlYm9vayBwb3N0cyBtYWRlIGluIHRoZSBVSyB0aHJlZSB5ZWFycyBhZ28uIFwiSSBzdGlsbCBoYWQgbm8gaWRlYSBhYm91dCB3aGF0IHdhcyBnb2luZyB0byB1bmZvbGQgYW5kIHRoZSBmdWxsIGV4dGVudCBvZiB0aGUgdHJvdWJsZSBJIHdhcyBpbi4gSSBqdXN0IHRob3VnaHQgJ1RoaXMgd2lsbCBhbGwgYmUgZmluZSBhbmQgb3ZlciBieSB0b21vcnJvdycuXCIgIExhbGVoIHNwZW50IDEyIGhvdXJzIGF0IGEgcG9saWNlIHN0YXRpb24gd2hlcmUgc2hlIHdhcyBvcmRlcmVkIHRvIHNpZ24gYSBzdGF0ZW1lbnQsIGRlc3BpdGUgaXQgYmVpbmcgaW4gQXJhYmljIGFuZCBoZXIgaGF2aW5nIG5vIHVuZGVyc3RhbmRpbmcgb2Ygd2hhdCBpdCBzYWlkLiBTaGUgbGF0ZXIgZGlzY292ZXJlZCB0aGUgdHJhbnNsYXRpb24gb2YgdGhlIEZhY2Vib29rIHBvc3QgYm9yZSBubyByZWxhdGlvbiB0byB3aGF0IHNoZSBoYWQgd3JpdHRlbiwgd2l0aCBhIHN3ZWFyIHdvcmQgc3Vic3RpdHV0ZWQgZm9yIHRoZSB3b3JkIFwiaG9yc2VcIi4gVGhlIHBvc3RzLCB3aGljaCBMYWxlaCB3cm90ZSBhZnRlciBzZWVpbmcgYSBwaG90byBvZiBoZXIgZXgtaHVzYmFuZCBnZXR0aW5nIG1hcnJpZWQgdG8gaGlzIG5ldyBUdW5pc2lhbiBsb3ZlciBTYW1haCBhbCBIYW1tYWRpLCA0Miwgc2FpZDogXCJJIGhvcGUgeW91IGdvIHVuZGVyIHRoZSBncm91bmQgeW91IGlkaW90LiBEYW1uIHlvdS4gWW91IGxlZnQgbWUgZm9yIHRoaXMgaG9yc2VcIiBhbmQgXCJZb3UgbWFycmllZCBhIGhvcnNlIHlvdSBpZGlvdFwiLiBTaGUgc2FpZDogXCJJIGtub3cgSSBzaG91bGRuJ3QgaGF2ZSBwb3N0ZWQgdGhlIG1lc3NhZ2VzLCBidXQgYXQgdGhlIHRpbWUgSSB3YXMgZGlzdHJhdWdodC4gXCJJdCBoYWQgbmV2ZXIgb2NjdXJyZWQgdG8gbWUgYW5kIHRvb2sgbWUgY29tcGxldGVseSBieSBzdXJwcmlzZS4gSSB3YXMgYmVpbmcgYXJyZXN0ZWQgZm9yIGNhbGxpbmcgaGVyIGEgaG9yc2UsIEkgdGhvdWdodCAndGhpcyBpcyBub25zZW5zZScuXCIgIExhbGVoLCB3aG8gd2FzIGVkdWNhdGVkIGF0IFRvcm1lYWQgU2Nob29sIGluIEd1aWxkZm9yZCwgU3VycmV5LCBhbmQgdXNlZCB0byB3b3JrIGZvciBMb25kb24gYXVjdGlvbmVlcnMgQm9uaGFtcywgd2FzIHRvbGQgc2hlIHdhcyBiZWluZyBoZWxkIGluIER1YmFpIHdoaWxlIHNoZSBhd2FpdGVkIGEgY291cnQgaGVhcmluZy4gSXQgd2FzIGF0IHRoYXQgcG9pbnQgc2hlIG1hZGUgdGhlIGhlYXJ0YnJlYWtpbmcgZGVjaXNpb24gdG8gc2VuZCBQYXJpcyBob21lIG9uIGhlciBvd24uIExhbGVoIHNhaWQ6IFwiUGFyaXMgd2FzIGFic29sdXRlbHkgdGVycmlmaWVkLiBJIHRob3VnaHQgJ0kgY2FuJ3Qgc3ViamVjdCBoZXIgdG8gb25lIG1vcmUgbWludXRlIG9mIHRoaXMnLiBcIkknbSBzdGlsbCBnZXR0aW5nIHNoYWtlcyBub3cgdGhpbmtpbmcgYWJvdXQgdGhhdCBtb21lbnQgYmVjYXVzZSBJIHRoaW5rIHRoYXQgd2FzIHdoZW4gSSByZWFsaXNlZCBldmVyeXRoaW5nIGhhZCBiZWNvbWUgcmVhbC4gXCJJdCB3YXMgdGhlIHNpbmdsZSBoYXJkZXN0IHRoaW5nIEkndmUgZXZlciBoYWQgdG8gZG8uIFwiSGVyIGZhdGhlciBoYWQgZGllZCBsZXNzIHRoYW4gdHdvIHdlZWtzIGVhcmxpZXIgYW5kIG5vdyBzaGUgd2FzIGxvc2luZyBoZXIgbW90aGVyLiBJIGZlbHQgbGlrZSBJIHdhcyBmYWlsaW5nIGhlciBhcyBhIHBhcmVudCwgYnV0IEkga25ldyBJIGhhZCBubyBwb3dlciBvdmVyIHRoZSBzaXR1YXRpb24uXCIgIE9uIFRodXJzZGF5LCBhZnRlciBQYXJpcyB3cm90ZSBhIHRvdWNoaW5nIGxldHRlciB0byBTaGVpa2ggTW9oYW1tZWQsIHRoZSBydWxlciBvZiBEdWJhaSBhbmQgcHJpbWUgbWluaXN0ZXIgb2YgdGhlIFVBRSwgTGFsZWggZmluYWxseSBhcHBlYXJlZCBiZWZvcmUgdGhlIER1YmFpIENvdXJ0IG9mIE1pc2RlbWVhbm91cnMuIEp1ZGdlIE1vaGFtZWQgTXVzdGFmYSBJYnJhaGltIEtoYWxpbCBzYWlkIHNoZSBjb3VsZCBiZSByZWxlYXNlZCBmcm9tIHRoZSBjb3VudHJ5IGlmIHNoZSBwYWlkIGEgXHUwMGEzNjI0IGZpbmUuIFNoZSBzYWlkOiBcIkl0IGZlbHQgbGlrZSBJIHdhcyBkcmVhbWluZyBhbmQgSSBkaWRuJ3QgYmVsaWV2ZSBpdCB3YXMgcmVhbC4gXCJJIGJ1cnN0IGludG8gdGVhcnMgb2YgaGFwcGluZXNzIGFuZCBkaXNiZWxpZWYgd2hlbiBJIGdvdCBteSBwYXNzcG9ydCwgYnV0IEkgZGlkbid0IGFsbG93IG15c2VsZiB0byBiZWxpZXZlIGl0IHdhcyBhbGwgcmVhbGx5IGFsbCBvdmVyIHVudGlsIEkgZ290IG9uIHRoZSBwbGFuZS4gSSBqdXN0IGZlbHQgbnVtYi5cIiBBZnRlciBiZWluZyBwdXQgb24gYSBmbGlnaHQgZnJvbSBEdWJhaSBpbiB0aGUgZWFybHkgaG91cnMgb2YgRnJpZGF5IG1vcm5pbmcgc2hlIHdhcyBmaW5hbGx5IHJldW5pdGVkIHdpdGggUGFyaXMgYXQgSGVhdGhyb3cuIExhbGVoIHNhaWQ6IFwiVGhlIG1vbWVudCBJIHNhdyBQYXJpcyBhdCB0aGUgYWlycG9ydCB3YXMgc3VjaCBhbiBvdmVyd2hlbG1pbmcgbW9tZW50LiBNeSBoZWFydCB3YXMgYWNoaW5nIGZvciBoZXIgYW5kIGJlaW5nIGFibGUgdG8gaG9sZCBteSBnaXJsIGFnYWluIHdhcyBzbyBlbW90aW9uYWwuICBcIkknbGwgbmV2ZXIgZm9yZ2V0IHRoYXQgbW9tZW50LiBCZWluZyBhcGFydCBmcm9tIGhlciBoYWQgYmVlbiBicnV0YWwuIFwiSSBzdGlsbCBmZWVsIGxpa2UgSSdtIGluIGEgZGF6ZSBhbmQgSSBmZWVsIGxpa2UgYSBmcmFjdGlvbiBvZiB0aGUgcGVyc29uIEkgd2FzIGJlZm9yZS4gXCJUaGlzIGxhc3QgbW9udGggaGFzIGNvbXBsZXRlbHkgYnJva2VuIG1lIHBoeXNpY2FsbHkgYW5kIG1lbnRhbGx5LCBpdCBoYXMgdHJhdW1hdGlzZWQgbWUuIFwiSSBqdXN0IHdhbnQgdG8gZW5qb3kgbGlmZSB3aXRoIFBhcmlzIG5vdyBhbmQgY2hlcmlzaCBldmVyeSBtb21lbnQuXCIiLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToyNSIsICJ0aXRsZSI6ICJNb3RoZXIgaGVsZCBpbiBEdWJhaSBqYWlsOiAifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJSZXR1cm4sIHJlbGVhc2UgcGVyc29uKHMpIiwgIiBhc3NhdWx0ICJdLCAiY291bnRyaWVzIjogWyJVTklURUQgQVJBQiBFTUlSQVRFUyJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siMjQiLCAiNTQiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly9mb3JjZWNoYW5nZS5jb20vNTMwNzc5L2ZyZWUtYXdhcmQtd2lubmluZy1odW1hbi1yaWdodHMtZGVmZW5kZXItZHlpbmctb24taHVuZ2VyLXN0cmlrZS8iLCAiY29udGVudCI6ICJHb2FsOiBGcmVlIGh1bWFuIHJpZ2h0cyBhY3RpdmlzdCBiZWZvcmUgaGUgZGllcyBmcm9tIGh1bmdlciBzdHJpa2UuICBBIGh1bWFuIHJpZ2h0cyBhY3RpdmlzdCBzaXRzIGluIHByaXNvbiwgaGlzIGhlYWx0aCBkZXRlcmlvcmF0aW5nIGZyb20gYSBsb25nIGh1bmdlciBzdHJpa2UuIEFobWVkIE1hbnNvb3IgaXMgYW4gYXdhcmQtd2lubmluZyBodW1hbiByaWdodHMgZGVmZW5kZXIgd2hvIGhhcyBzdGFydmVkIGhpbXNlbGYgZm9yIG92ZXIgYSBtb250aCBhcyBoZSBzaXRzIGluIHByaXNvbiBpbiB0aGUgVW5pdGVkIEFyYWIgRW1pcmF0ZXMuIERlbWFuZCBoZSBiZSByZWxlYXNlZC4gIE1hbnNvb3IgZmFjZXMgdXAgdG8gdGVuIHllYXJzIGluIHByaXNvbiBmb3IgY2FsbGluZyBmb3IgcHJvZ3Jlc3NpdmUgZ292ZXJubWVudCByZWZvcm0uIEhlIGhhZCBubyBhY2Nlc3MgdG8gYSBsYXd5ZXIgZHVyaW5nIGhpcyB0cmlhbCBhbmQgYXV0aG9yaXRpZXMgaGF2ZSB5ZXQgdG8gYW5ub3VuY2Ugd2hlcmUgaGUgaXMgYmVpbmcgaGVsZC4gSGUgZmFjZWQgcGh5c2ljYWwgYXNzYXVsdCBhbmQgb3RoZXIgdmlvbGVuY2UgYmVoaW5kIGJhcnMuIFRvIHByb3Rlc3QgaGlzIHRyZWF0bWVudCwgaGUgaGFzIGJlZW4gc3RhcnZpbmcgaGltc2VsZi4gTm93LCByZXBvcnRzIGluZGljYXRlIGhlIG1heSBiZSBvbiB0aGUgYnJpbmsgb2YgZGVhdGguICBEZW1hbmQgdGhhdCB0aGUgZ292ZXJubWVudCBvZiB0aGUgVW5pdGVkIEFyYWIgRW1pcmF0ZXMgcmVsZWFzZSBNYW5zb29yIGZyb20gaGlzIGluaHVtYW5lIGltcHJpc29ubWVudC4gRGVtYW5kIHRoYXQgdGhleSBhbGxvdyBoaW0gdG8gcmV0dXJuIHRvIGhpcyBsb3ZlZCBvbmVzIGFuZCBoaXMgY29tbWVuZGFibGUgZHV0eS4gIEF3YXJkLXdpbm5pbmcgaHVtYW4gcmlnaHRzIGFjdGl2aXN0IEFobWVkIE1hbnNvb3IgcmVtYWlucyBpbiBwcmlzb24sIG9uIHRoZSBicmluayBvZiBkZWF0aCBhZnRlciBhIG1vbnRoLWxvbmcgaHVuZ2VyIHN0cmlrZS4gTWFuc29vciBoYXMgYmVlbiBsYXVkZWQgYXJvdW5kIHRoZSB3b3JsZCBmb3IgaGlzIGFkdm9jYWN5IGZvciBmcmVlZG9tIG9mIHNwZWVjaCBhbmQgZXhwcmVzc2lvbi4gSG93ZXZlciwgeW91ciBnb3Zlcm5tZW50IHNhdyB0aGlzIHBlYWNlZnVsIHByb3Rlc3QgYXMgYSB0aHJlYXQgYW5kIHN1YmplY3RlZCBoaW0gdG8gYW4gdW5mYWlyIHRyaWFsIGFuZCBpbXByaXNvbm1lbnQuICBCZWZvcmUgaGlzIGhlYWx0aCBmYWlscyBldmVuIG1vcmUsIHJlbGVhc2UgTWFuc29vciB0byB0aGUgY2FyZSBvZiBoaXMgZmFtaWx5IGFuZCBsb3ZlZCBvbmVzLiBFbmQgeW91ciBhYnVzZSBvZiBwZWFjZWZ1bCBodW1hbiByaWdodHMgYWR2b2NhdGVzLiAgW1lvdXIgTmFtZSBIZXJlXSIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjI3IiwgInRpdGxlIjogIkZyZWUgQXdhcmQtV2lubmluZyBIdW1hbiBSaWdodHMgRGVmZW5kZXIgRHlpbmcgb24gSHVuZ2VyIFN0cmlrZSJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkhvc3QgYSB2aXNpdCIsICJvcGVyYXRpb24iXSwgImNvdW50cmllcyI6IFsiVU5JVEVEIEFSQUIgRU1JUkFURVMiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjI1LjI1MjIiLCAiNTUuMjgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cua2hhbGVlanRpbWVzLmNvbS9lbWlyYXRlcy10by1kZXBsb3ktbGF0ZXN0LWJvZWluZy03NzctMzAwZXItdG8tcml5YWRoLWFuZC1rdXdhaXQiLCAiY29udGVudCI6ICJFbWlyYXRlcyBoYXMgYW5ub3VuY2VkIHRoYXQgaXQgd2lsbCBiZSBvcGVyYXRpbmcgaXRzIGxhdGVzdCBCb2VpbmcgNzc3LTMwMEVSIGFpcmNyYWZ0IGZpdHRlZCB3aXRoIHRoZSAnR2FtZSBDaGFuZ2VyJyBGaXJzdCBDbGFzcyBzdWl0ZXMgZnJvbSBEdWJhaSB0byBSaXlhZGggc3RhcnRpbmcgZnJvbSBBcHJpbCAxNiwgMjAxOSBhbmQgS3V3YWl0IHN0YXJ0aW5nIGZyb20gSnVuZSAxLCAyMDE5LiAgQWRpbCBBbCBHaGFpdGgsIHNlbmlvciB2aWNlIHByZXNpZGVudCBvZiBDb21tZXJjaWFsIE9wZXJhdGlvbnMgR3VsZiwgTWlkZGxlIEVhc3QgJiBJcmFuIHNhaWQ6IFwiVGhlIEtpbmdkb20gb2YgU2F1ZGkgQXJhYmlhIGFuZCBLdXdhaXQgd2lsbCBiZSB0aGUgZmlyc3QgY291bnRyaWVzIGluIHRoZSBNaWRkbGUgRWFzdCBhbmQgR0NDIHRvIGJlIHNlcnZlZCBieSB0aGUgbGF0ZXN0IEVtaXJhdGVzIEJvZWluZyA3NzcgYWlyY3JhZnQgZmVhdHVyaW5nIGZ1bGx5LWVuY2xvc2VkIHByaXZhdGUgc3VpdGVzIGluc3BpcmVkIGJ5IGx1eHVyeSBhdXRvbWFrZXIgTWVyY2VkZXMtQmVuei4gRGVwbG95aW5nIHRoZSBuZXdlc3QgQm9laW5nIDc3NyB0byBib3RoIFJpeWFkaCBhbmQgS3V3YWl0IHdpbGwgY2F0ZXIgdG8gdGhlIHNpZ25pZmljYW50IHByZW1pdW0gZGVtYW5kIHdlIHNlZSBvbiB0aGVzZSByb3V0ZXMsIGFuZCBpcyBpbiBsaW5lIHdpdGggb3VyIGNvbW1pdG1lbnQgdG8gcHJvdmlkZSBvdXIgY3VzdG9tZXJzIGFjcm9zcyBhbGwgY2xhc3NlcyB3aXRoIG91dHN0YW5kaW5nIHNlcnZpY2UgYW5kIGluZHVzdHJ5LWxlYWRpbmcgb25ib2FyZCBwcm9kdWN0cyBmb3IgYSBiZXR0ZXIgZmx5aW5nIGV4cGVyaWVuY2UuIFRoZSB1bmlxdWUgRmlyc3QgQ2xhc3Mgc3VpdGVzIG9uYm9hcmQgdGhlIEJvZWluZyA3Nzcgd2lsbCBvZmZlciBvdXIgcHJlbWl1bSBwYXNzZW5nZXJzIHVucGFyYWxsZWxlZCBwcml2YWN5LCBjb21mb3J0IGFuZCBsdXh1cnksIHdpdGggZXhwZXJpZW5jZXMgdGFpbG9yZWQgdG8gdGhlaXIgaW5kaXZpZHVhbCBuZWVkcy5cIiAgVHJhdmVsbGVycyB0by9mcm9tIFNhdWRpIEFyYWJpYSBjYW4gZXhwZXJpZW5jZSB0aGUgbmV3IEJvZWluZyA3NzcgcHJvZHVjdCBvbiBmbGlnaHQgRUsgODE5IGRlcGFydGluZyBEdWJhaSBhdCAwNjU1aHJzLCBhcnJpdmluZyBpbiBSaXlhZGggYXQgMDc1MGhycy4gVGhlIHJldHVybiBmbGlnaHQgRUsgODIwIGxlYXZlcyBSaXlhZGggYXQgMDkzNWhycywgYXJyaXZpbmcgaW4gRHViYWkgYXQgMTIzMGhycy4gVGhlIG5ldyBCb2VpbmcgNzc3IGFpcmNyYWZ0IHdpbGwgYmVnaW4gb3BlcmF0aW5nIHRoZSByb3V0ZSBmaXZlIHRpbWVzIGEgd2VlaywgYW5kIGZyb20gSnVuZSAxLCAyMDE5IHdpbGwgYmVnaW4gZmx5aW5nIG9uIGEgZGFpbHkgYmFzaXMuIEN1c3RvbWVycyBmbHlpbmcgb24gdGhlIGxhdGVzdCBFbWlyYXRlcyBCb2VpbmcgNzc3IGFyZSB0aGVuIGFibGUgdG8gZW5qb3kgc2VhbWxlc3MgY29ubmVjdGlvbnMgdmlhIER1YmFpIHRvIExvbmRvbiBIZWF0aHJvdywgUGFyaXMsIE1hZHJpZCwgTmV3IFlvcmsgSkZLLCBIeWRlcmFiYWQsIEJhcmNlbG9uYSwgTG9zIEFuZ2VsZXMsIEdlbmV2YSBhbmQgQW1zdGVyZGFtLiAgRW1pcmF0ZXMgd2lsbCBiZSBleHBhbmRpbmcgaXRzIHByZW1pdW0gQm9laW5nIDc3NyBleHBlcmllbmNlIHRvL2Zyb20gS3V3YWl0IG9uIEVLIDg1NSwgd2hpY2ggZGVwYXJ0cyBEdWJhaSBhdCAwNzQ1aHJzLCBhcnJpdmluZyBpbiBLdXdhaXQgYXQgMDgyNWhycy4gVGhlIHJldHVybiBmbGlnaHQgRUsgODU2IGxlYXZlcyBLdXdhaXQgYXQgMDk1MGhycywgYXJyaXZpbmcgaW4gRHViYWkgYXQgMTI0MGhycy4gVGhlIHNlcnZpY2Ugd2lsbCBvcGVyYXRlIGRhaWx5IHRvIEt1d2FpdC4gVGhlIER1YmFpLUt1d2FpdCByb3V0ZSB3YXMgcmFua2VkIG9uZSBvZiB0aGUgJ1dvcmxkJ3MgMjAgQnVzaWVzdCBSb3V0ZXMnLCBhY2NvcmRpbmcgdG8gT0FHIEF2aWF0aW9uLCBhbmQgaXMgdGhlIGJ1c2llc3Qgcm91dGUgYWNyb3NzIHRoZSBNaWRkbGUgRWFzdCBhbmQgTm9ydGggQWZyaWNhLiIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjMwIiwgInRpdGxlIjogIkVtaXJhdGVzIHRvIGRlcGxveSBsYXRlc3QgQm9laW5nIDc3Ny0zMDBFUiB0byBSaXlhZGggYW5kIEt1d2FpdCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIlNlaXplIG9yIGRhbWFnZSBwcm9wZXJ0eSwgbm90IHNwZWNpZmllZCBiZWxvdyIsICIga25pZmUgIiwgImludmVzdGlnYXQiXSwgImNvdW50cmllcyI6IFsiQVVTVFJBTElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyItMzcuNzMzMyIsICIxNDUuMTE3Il1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmRhaWx5bWFpbC5jby51ay9uZXdzL2FydGljbGUtNjkyMDcwNS9TZXJpYWwtcHJlZGF0b3ItTXItQ3J1ZWwtYXR0YWNrZWQteW91bmctTWVsYm91cm5lLXNjaG9vbC1naXJscy1hbGl2ZS5odG1sIiwgImNvbnRlbnQiOiAiT25lIG9mIEF1c3RyYWxpYSdzIG1vc3Qgbm90b3Jpb3VzIHNlcmlhbCByYXBpc3RzIGtub3duIGFzICdNciBDcnVlbCcgY291bGQgdmVyeSB3ZWxsIHN0aWxsIGJlIGFsaXZlIDI4IHllYXJzIGFmdGVyIHRlcnJvcmlzaW5nIE1lbGJvdXJuZSwgaW52ZXN0aWdhdG9ycyBoYXZlIHJldmVhbGVkLiAgVGhlIHNlcmlhbCBwcmVkYXRvciBhbmQgc3VzcGVjdGVkIGtpbGxlciBpcyBiZWxpZXZlZCB0byBiZSByZXNwb25zaWJsZSBmb3IgcmFwaW5nIGFuZCBraWRuYXBwaW5nIGF0IGxlYXN0IGEgZG96ZW4geW91bmcgZ2lybHMgYWNyb3NzIHRoZSBjaXR5IGluIHRoZSBsYXRlIDE5ODBzIGFuZCBlYXJseSA5MHMgLSBhbmQgdG8gdGhpcyBkYXkgaGFzIG5ldmVyIGJlZW4gY2F1Z2h0IG9yIGlkZW50aWZpZWQuICBUd28gZ2lybHMga2lkbmFwcGVkIGJ5IE1yIENydWVsIC0gU2hhcm9uIFdpbGxzLCB0ZW4sIGFuZCBOaWNvbGEgTHluYXMsIDEzIC0gd2VyZSBldmVudHVhbGx5IHJlbGVhc2VkLCBidXQgMTMteWVhci1vbGQgS2FybWVpbiBDaGFuJ3MgcmVtYWlucyB3ZXJlIGZvdW5kIGEgeWVhciBhZnRlciBoZXIgYWJkdWN0aW9uLiBTaGUgaGFkIGJlZW4gc2hvdCB0aHJlZSB0aW1lcyBpbiB0aGUgaGVhZC4gIEF1c3RyYWxpYW4gQ3JpbWUgU3RvcmllcyByZXZpc2l0ZWQgdGhlIE1lbGJvdXJuZSBzY2hvb2xnaXJsJ3MgY2FzZSBvbiB0aGUgMjh0aCBhbm5pdmVyc2FyeSBvZiBoZXIgYWJkdWN0aW9uIGFuZCBtdXJkZXIgb24gU3VuZGF5IG5pZ2h0LiAgS2FybWVpbidzIGNhc2Ugc3Rvb2Qgb3V0IGZyb20gYWxsIHRoZSBvdGhlcnMgYmVjYXVzZSBzaGUgd2FzIHRoZSBvbmx5IHZpY3RpbSB0byBiZSBraWxsZWQgYnkgdGhlIHJhcGlzdCBhZnRlciBzaGUgd2FzIHRha2VuLiAgS2FybWVpbidzIGNhc2Ugc3Rvb2Qgb3V0IGZyb20gYWxsIHRoZSBvdGhlcnMgYmVjYXVzZSBzaGUgd2FzIHRoZSBvbmx5IHZpY3RpbSB0byBiZSBraWxsZWQgYnkgdGhlIHJhcGlzdCBhZnRlciBzaGUgd2FzIHRha2VuLiBIZXIgbXVyZGVyIGFsc28gbWFya2VkIHRoZSBlbmQgb2YgTXIgQ3J1ZWwncyB0aHJlZS15ZWFyIHJlaWduIG9mIHRlcnJvciBpbiAxOTkxIC0gd2hlbiBoZSBmZWxsIG9mZiB0aGUgcmFkYXIgYW5kIG5ldmVyIHN0cnVjayBhZ2FpbiAgSGVyIG11cmRlciBhbHNvIG1hcmtlZCB0aGUgZW5kIG9mIE1yIENydWVsJ3MgdGhyZWUteWVhciByZWlnbiBvZiB0ZXJyb3IgaW4gMTk5MSAtIHdoZW4gaGUgZmVsbCBvZmYgdGhlIHJhZGFyIGFuZCBuZXZlciBzdHJ1Y2sgYWdhaW4uICBNciBDcnVlbCBhdHRhY2tlZCBnaXJscyBhcyB5b3VuZyBhcyAxMSBpbiBcdTAwYWRNZWxib3VybmUgaW4gdGhlIDE5ODBzIGFuZCAxOTkwcy4gVGhlIHBhZWRvcGhpbGUgaGFzIG5ldmVyIGJlZW4gaWRlbnRpZmllZC4gQXVndXN0IDIyLCAxOTg3LCBMb3dlciBQbGVudHk6IEhlIGJyb2tlIGludG8gaG91c2UgaW4gdGhlIG5pZ2h0LCBsb2NrZWQgdGhlIHBhcmVudHMgaW4gYSB3YXJkcm9iZSBhbmQgYXR0YWNrZWQgdGhlaXIgMTEteWVhci1vbGQgZGF1Z2h0ZXIgRGVjZW1iZXIgMjcsIDE5ODgsIFJpbmd3b29kOiBIZSBicm9rZSBpbnRvIGEgaG91c2UsIHRpZWQgdXAgdGhlIHBhcmVudHMgYW5kIGFiZHVjdGVkIHRoZWlyIDEwLXllYXItb2xkIGRhdWdodGVyLCByZWxlYXNpbmcgaGVyIGF0IGEgc2Nob29sIDE4IGhvdXJzIGxhdGVyIEp1bHkgMywgMTk5MCwgQ2FudGVyYnVyeTogSGUgYnJva2UgaW50byBob3VzZSBhbmQgYWJkdWN0ZWQgYSAxMy15ZWFyLW9sZC4gSGUgZHJvdmUgaGVyIHRvIGFub3RoZXIgaG91c2Ugd2hlcmUgaGUga2VwdCBoZXIgZm9yIDUwIGhvdXJzIGJlZm9yZSByZWxlYXNlLiBBcHJpbCAxMywgMTk5MSBUZW1wbGVzdG93ZTogSGUgYnJva2UgaW50byBhIGhvdXNlIGFuZCBhYmR1Y3RlZCBLYXJtZWluIENoYW4sIDEzLiBIZXIgYm9keSB3YXMgZm91bmQgYSB5ZWFyIGxhdGVyLiAgJ0l0IGRvZXNuJ3QgbWFrZSBhbnkgc2Vuc2UuIEdvb2QgY3JpbWluYWxzLCBvZmZlbmRlcnMsIHNlcmlhbCBvZmZlbmRlcnMsIHRoZXkgZG9uJ3QgZ2V0IHNjYXJlZCBvZmYuIFRoZXkgYmVsaWV2ZSwgdGhlaXIgZWdvIGJlbGlldmVzIHRoZXkncmUgYmV0dGVyIHRoYW4gdGhlIHN5c3RlbSwgdGhleSdyZSBiZXR0ZXIgdGhhbiBpbnZlc3RpZ2F0b3JzLCcgRHIgU3RlcGhlbiBCYXJyb24sIHBzeWNob2xvZ2lzdCBhbmQgZm9ybWVyIHBvbGljZSBpbnNwZWN0b3Igc2FpZC4gIEFsdGhvdWdoIE1yIENydWVsIGhhZCBiZWVuIHBlcmNlaXZlZCBhcyBhIGRhcmssIG15c3RlcmlvdXMgZmlndXJlIGluIHRoZSBwdWJsaWMgZXllLCBpbnZlc3RpZ2F0b3JzIHN1Z2dlc3RlZCB0aGUgc2VyaWFsIHJhcGlzdCBjb3VsZCBhY3R1YWxseSBqdXN0IGJlICdNciBBdmVyYWdlLicgIEZvbGxvd2luZyBLYXJtZWluJ3MgYWJkdWN0aW9uLCBBdXN0cmFsaWFuIGF1dGhvcml0aWVzIGhhZCBzb3VnaHQgaGVscCBmcm9tIHRoZSBBbWVyaWNhbiBGQkkgLSB3aG8gcmV2ZWFsZWQgdGhlcmUgd2FzIG5vdGhpbmcgcGFydGljdWxhcmx5IHN0cmlraW5nIGFib3V0IE1yIENydWVsJ3MgcHJvZmlsZS4gIEhlIHdhcyBiZWxpZXZlZCB0byBiZSBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQsIGJldHdlZW4gMTY1IGFuZCAxODNjbSB0YWxsLCB0aGluIHRvIG1lZGl1bSBidWlsZCB3aXRoIGEgcG90YmVsbHkuICBIZSBhbHNvIGRpZCBub3QgaGF2ZSBhIGRpc3RpbmN0IGFjY2VudCBhbmQgd2FzIGRlc2NyaWJlZCBhcyBxdWlldGx5IHNwb2tlbi4gIE1yIENydWVsJ3Mgd2VhcG9uIG9mIGNob2ljZSB3YXMgYSBrbmlmZSBhbmQgaGUgd2FzIGtub3duIHRvIHdlYXIgYSBiYWxhY2xhdmEgYW5kIGhhZCB0YXBlZCBvdmVyIGhpcyB2aWN0aW1zJyBleWVzIHRvIHNoaWVsZCBoaXMgaWRlbnRpdHkuICBPdGhlciB0aGVvcmllcyBzdWdnZXN0IEthcm1laW4gaGFkIGJlZW4gYm9sZCBlbm91Z2ggdG8gcmlwIG9mZiB0aGUgdGFwZSBmcm9tIGhlciBleWVzIG9yIGhhZCBwdWxsZWQgTXIgQ3J1ZWwncyBtYXNrIG9mZiwgcmV2ZWFsaW5nIGhpcyBpZGVudGl0eSBhbmQgZm9yY2luZyBoaW0gdG8ga2lsbCBoZXIuICBCdXQgc29tZSBpbnZlc3RpZ2F0b3JzIHNheSBpdCBpcyB1bmxpa2VseSBhIHNlcmlhbCBvZmZlbmRlciB3b3VsZCBiZSAnc2NhcmVkIG9mZicgYW5kIGJlbGlldmUgaXQgaXMgcG9zc2libGUgTXIgQ3J1ZWwgd2VudCBxdWlldCBiZWNhdXNlIGhlIGxlZnQgdG93biB0byBjb250aW51ZSBoaXMgYXR0YWNrcyBvdmVyc2VhcyBvciBlbHNld2hlcmUuICAnTXkgc3VzcGljaW9uIGlzIHRoYXQgaGUgcHJvYmFibHkganVzdCBsZWZ0IHRvd24gb3IgaGUgd2VudCB0byBqYWlsIGFuZCBkaWVkLCcgQ3JpbWluYWwgcHN5Y2hvbG9naXN0IFRpbSBXYXRzb24gTXVucm8gc2FpZC4gICdUaGVyZSB3ZXJlIHRoZSBIaWxsc2lkZSBTdHJhbmdsZXJzIGluIExvcyBBbmdlbGVzLiBBIGd1eSBhbmQgaGlzIGNvdXNpbiB3ZXJlIGFiZHVjdGluZywgcmFwaW5nIGFuZCBtdXJkZXJpbmcgd29tZW4gaW4gdGhlIEhpbGxzIGRpc3RyaWN0IG9mIExBLCBkdW1waW5nIHRoZSBjYWRhdmVycyBvbiB0aGUgZnJvbnQgbGF3bnMgb2YgcGxhY2VzIGFzIGFsbCBwYXJ0IG9mIHRoZSBob3Jyb3Igc2hvdywgYW5kIGl0IHN0b3BwZWQgYXMgYWJydXB0bHkgYXMgaXQgc3RhcnRlZC4gICdIZSB3YXMgZXZlbnR1YWxseSBkaXNjb3ZlcmVkIGluIE9yZWdvbiwgc28sIGhlJ2QgcmVsb2NhdGVkLCBoZSdkIGdvbmUgZnVydGhlciBub3J0aCwgaW50byBhIGRpZmZlcmVudCBzdGF0ZS4gSXQgc3RhcnRlZCBhZ2Fpbi4nICBBbHRob3VnaCBuZWFybHkgdGhyZWUgZGVjYWRlcyBoYXZlIHBhc3NlZCBzaW5jZSBNciBDcnVlbCdzIGxhc3QgYXR0YWNrLCByZXRpcmVkIERldGVjdGl2ZSBDaHJpcyBPJ0Nvbm5vciBzYWlkIHRoZSBpbnZlc3RpZ2F0aW9uIHJlbWFpbnMgYWN0aXZlLiIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjM2IiwgInRpdGxlIjogIkF1c3RyYWxpYSdzIHNlcmlhbCByYXBpc3QgTXIgQ3J1ZWwnIGNvdWxkIHN0aWxsIGJlIGFsaXZlIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiRW5nYWdlIGluIG5lZ290aWF0aW9uIiwgIiBlc3Bpb25hZ2UgIiwgInNlY3VyaXR5IiwgImludmVzdGlnYXQiLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIkNISU5BIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIzNSIsICIxMDUiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cuYW1lcmljYW50aGlua2VyLmNvbS9ibG9nLzIwMTkvMDQvdXNfYnVzaW5lc3NfaXRzX293bl93b3JzdF9lbmVteV9pbl9maWdodGluZ19jaGluYV9oYWNraW5nLmh0bWwiLCAiY29udGVudCI6ICJBbiBpbnZlc3RpZ2F0aW9uIGJ5IE5hdGlvbmFsIFB1YmxpYyBSYWRpbyBhbmQgUEJTIGZvdW5kIHRoYXQgZmVhciBvZiBsb3NpbmcgcHJvZml0cyBoYXMgZHJpdmVuIHRoZSBzaWxlbmNlIGZyb20gVVMgY29tcGFuaWVzIHdobyBzZWUgcm9ja2luZyB0aGUgYm9hdCBhcyBtb3JlIG9mIGEgdGhyZWF0IHRvIHRoZWlyIGxpdmVsaWhvb2QgdGhhbiB0YWtpbmcgc3Ryb25nIGFjdGlvbi4gIFRoZSBwcm9ibGVtIG9mIENoaW5hIGhhY2tpbmcgVVMgYnVzaW5lc3NlcyBhbmQgc3RlYWxpbmcgaW50ZWxsZWN0dWFsIHByb3BlcnR5IGhhcyBiZWVuIGdvaW5nIG9uIGZvciBkZWNhZGVzLiBCdXQgd2hlbiBpdCBjb21lcyB0byBmaWdodGluZyB0aGUgY3JpbWUgd2F2ZSBmcm9tIENoaW5hLCB0aGUgVVMgZ292ZXJubWVudCBoYXMgYmVlbiBoYW1wZXJlZCBieSBhIGxhY2sgb2YgY29vcGVyYXRpb24gZnJvbSB0aGUgdmljdGltcy4gIEluIGRvemVucyBvZiBpbnRlcnZpZXdzIHdpdGggVS5TLiBnb3Zlcm5tZW50IGFuZCBidXNpbmVzcyByZXByZXNlbnRhdGl2ZXMsIG9mZmljaWFscyBpbnZvbHZlZCBpbiBjb21tZXJjZSB3aXRoIENoaW5hIHNhaWQgaGFja2luZyBhbmQgdGhlZnQgd2VyZSBhbiBvcGVuIHNlY3JldCBmb3IgYWxtb3N0IHR3byBkZWNhZGVzLCBhbGxvd2VkIHRvIHF1aWV0bHkgY29udGludWUgYmVjYXVzZSBVLlMuIGNvbXBhbmllcyBoYWQgdG9vIG11Y2ggbW9uZXkgYXQgc3Rha2UgdG8gbWFrZSB3YXZlcy4gV2VuZHkgQ3V0bGVyLCB3aG8gd2FzIGEgdmV0ZXJhbiBuZWdvdGlhdG9yIGF0IHRoZSBPZmZpY2Ugb2YgdGhlIFUuUy4gVHJhZGUgUmVwcmVzZW50YXRpdmUsIHNheXMgaXQgd2Fzbid0IGp1c3QgdGhhdCBVLlMuIGJ1c2luZXNzZXMgd2VyZSBoZXNpdGFudCB0byBjb21lIGZvcndhcmQgaW4gc3BlY2lmaWMgY2FzZXMuIFNoZSBzYXlzIGJ1c2luZXNzZXMgZGlkbid0IHdhbnQgdGhlIHRyYWRlIG9mZmljZSB0byB0YWtlIFwiYW55IHN0cm9uZyBhY3Rpb24uXCIgXCJXZSBhcmUgbm90IGFzIGVmZmVjdGl2ZSBpZiB3ZSBkb24ndCBoYXZlIHRoZSBVLlMuIGJ1c2luZXNzIGNvbW11bml0eSBzdXBwb3J0aW5nIHVzLFwiIHNoZSBzYXlzLiBcIkxvb2tpbmcgYmFjayBvbiBpdCwgaW4gcmV0cm9zcGVjdCwgSSB0aGluayB3ZSBwcm9iYWJseSBzaG91bGQgaGF2ZSBiZWVuIG1vcmUgYWN0aXZlIGFuZCBtb3JlIHJlc3BvbnNpdmUuIFdlIGtpbmQgb2YgbG9zdCB0aGUgYmlnIHBpY3R1cmUgb2Ygd2hhdCB3YXMgcmVhbGx5IGhhcHBlbmluZy5cIiBOb25lIG9mIHRoZSBkb3plbnMgb2YgY29tcGFuaWVzIG9yIG9yZ2FuaXphdGlvbnMgdGhhdCBOUFIgcmVhY2hlZCBvdXQgdG8gdGhhdCBoYXZlIGJlZW4gdmljdGltcyBvZiB0aGVmdCBvciBjb3Jwb3JhdGUgZXNwaW9uYWdlIG9yaWdpbmF0aW5nIGZyb20gQ2hpbmEgd291bGQgZ28gb24gdGhlIHJlY29yZC4gQW5kIGZvciBpdHMgcGFydCwgdGhlIENoaW5lc2UgZ292ZXJubWVudCBvZmZpY2lhbGx5IGRlbmllZCB0byBOUFIgYW5kIEZyb250bGluZSB0aGF0IGl0IGhhcyBiZWVuIGludm9sdmVkIGluIHN1Y2ggcHJhY3RpY2VzLiAgSXQncyBlc3RpbWF0ZWQgdGhhdCBDaGluZXNlIHVuZmFpciBidXNpbmVzcyBwcmFjdGljZXMgYXJlIGNvc3RpbmcgQW1lcmljYW4gY29tcGFuaWVzICQ1NyBiaWxsaW9uIGEgeWVhci4gQnV0IHRoZSBleHBvc3VyZSBvZiBjb21wYW55IHNlY3JldHMgY2FuIG1lYW4gYW4gaW5jYWxjdWFibGUgbG9zcy4gIEJ1dCBub3cgdGhlIGltcGFjdCBvZiB0aGF0IHNlY3JlY3kgaXMgY29taW5nIHRvIGxpZ2h0LCB0aGV5IHNheS4gQ29tcGFuaWVzIGFyZSBmYWNpbmcgaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiBmdXR1cmUgbG9zc2VzIGZyb20gdGhlIHRoZWZ0LCBhbmQgVS5TLiBvZmZpY2lhbHMgc2F5IHRoZXkgYXJlIHllYXJzIGJlaGluZCB0cnlpbmcgdG8gdGFja2xlIHRoZSBwcm9ibGVtLiBNaWNoYWVsIFdlc3NlbCwgY29tbWlzc2lvbmVyIG9uIHRoZSBVLlMuIGdvdmVybm1lbnQncyBVLlMuLUNoaW5hIEVjb25vbWljIGFuZCBTZWN1cml0eSBSZXZpZXcgQ29tbWlzc2lvbiwgc2F5cyBpdCB3YXNuJ3Qgc3VwcG9zZWQgdG8gYmUgdGhpcyB3YXkuIFUuUy4gb2ZmaWNpYWxzIGhhZCBoaWdoIGhvcGVzIHdoZW4gQ2hpbmEgb2ZmaWNpYWxseSBqb2luZWQgdGhlIFdvcmxkIFRyYWRlIE9yZ2FuaXphdGlvbiBpbiAyMDAxLiBcIlRoZXJlIHdhcyBhIGhvbmV5bW9vbiBwZXJpb2QgaW4gdGhlIGZpcnN0IHNpeCBvciBzZXZlbiB5ZWFycywgYSBkZXNpcmUgdG8gdHJ5IFt0b10gbWFrZSB0aGluZ3Mgd29yayxcIiBXZXNzZWwgc2F5cy4gQnV0LCBoZSBzYXlzLCBzdGFydGluZyBhcm91bmQgMjAwNiwgYnVzaW5lc3NlcyBiZWdhbiBjb21pbmcgdG8gaGltIHNheWluZyB0aGF0IENoaW5hIGhhZCBzdG9sZW4gdGhlaXIgZGVzaWducyBvciBpZGVhcyBvciBoYWQgcHJlc3N1cmVkIHRoZW0gaW50byBwYXJ0bmVyc2hpcHMgYW5kIHRha2VuIHRoZWlyIHRlY2hub2xvZ3kuIEp1c3QgbGlrZSB3aXRoIEhpY2t0b24sIFdlc3NlbCBzYXlzLCB0aGV5IHdvdWxkbid0IGNvbWUgZm9yd2FyZCBwdWJsaWNseS4gIENoaW5hIGlzIGNvdW50aW5nIG9uIHRoaXMgY29kZSBvZiBvbWVydGEgYnkgQW1lcmljYW4gYnVzaW5lc3NlcyBhcyB0aGV5IGNvbnRpbnVlIHdpdGggYnVzaW5lc3MgYXMgdXN1YWwuIEJ1dCB5b3Ugd291bGQgdGhpbmsgdGhhdCBldmVudHVhbGx5LCBDaGluYSdzIHN0ZWFsaW5nIHdpbGwgYmVjb21lIHNvIHByZXZlbGFudCwgdGhhdCBVUyBjb21wYW5pZXMgd2lsbCBiZSBmb3JjZWQgdG8gY29vcGVyYXRlIGZvciBzZWxmIHByZXNlcnZhdGlvbi4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMTozOCIsICJ0aXRsZSI6ICJVUyBidXNpbmVzcyBpdHMgb3duIHdvcnN0IGVuZW15IGluIGZpZ2h0aW5nIENoaW5hIGhhY2tpbmcifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgImRldGFpbiIsICJkZXRhaW4iLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIklORE9ORVNJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siNC4zNDM5IiwgIjk2LjAzMzgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cubWFsYXltYWlsLmNvbS9uZXdzL21hbGF5c2lhLzIwMTkvMDQvMTQvZm91ci1jaGlsZHJlbi1hbW9uZy0xMDAtZm9yZWlnbmVycy1kZXRhaW5lZC1pbi1zaGFoLWFsYW0vMTc0MzIzNiIsICJjb250ZW50IjogIlNIQUggQUxBTSwgQXByaWwgMTQgXHUyMDE0IEZvdXIgY2hpbGRyZW4gd2VyZSBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBieSB0aGUgU2VsYW5nb3IgSW1taWdyYXRpb24gRGVwYXJ0bWVudCBpbiBhIGZvdXItaG91ciBpbnRlZ3JhdGVkIG9wZXJhdGlvbiBjb25kdWN0ZWQgYXJvdW5kIFNoYWggQWxhbSB5ZXN0ZXJkYXkuICBJdHMgZGlyZWN0b3IsIE1vaGFtYWQgU2h1a3JpIE5hd2ksIHNhaWQgdGhlIG9wZXJhdGlvbiB3aGljaCBiZWdhbiBhcm91bmQgMTIgbWlkbmlnaHQgYW5kIHBhcnRpY2lwYXRlZCBieSA5NiBwZXJzb25uZWwgd2FzIGNvbmNlbnRyYXRlZCBvbiBmb3JlaWduIHdvcmtlcnNcdTIwMTkgbGl2aW5nIHF1YXJ0ZXJzIGluIFBhZGFuZyBKYXdhIGFuZCBLb3RhIEtlbXVuaW5nIGFyZWFzLiAgSGUgc2FpZCBkdXJpbmcgdGhlIG9wZXJhdGlvbiA0MzAgZm9yZWlnbmVycyB3ZXJlIHF1ZXN0aW9uZWQgYW5kIG9mIHRoZSB0b3RhbCA5NCBtZW4sIHR3byB3b21lbiBhbmQgZm91ciBjaGlsZHJlbiB3ZXJlIGRldGFpbmVkIGZvciB2YXJpb3VzIG9mZmVuY2VzLiAgXHUyMDFjVGhlIGZvcmVpZ25lcnMgYWdlZCBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQgYXJlIGZyb20gSW5kb25lc2lhLCBCYW5nbGFkZXNoLCBNeWFubWFyLCBJbmRpYSwgTmVwYWwsIFBha2lzdGFuIGFuZCBWaWV0bmFtLiAgXHUyMDFjVGhlIGNoaWxkcmVuLCB0aHJlZSBib3lzIGFuZCBhIGdpcmwgYWdlZCBiZXR3ZWVuIGZvdXIgbW9udGhzIGFuZCB0d28geWVhcnMgYXJlIEluZG9uZXNpYW5zLFx1MjAxZCBoZSBzYWlkIGluIGEgc3RhdGVtZW50IGhlcmUgdG9kYXkuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTAiLCAidGl0bGUiOiAiRm91ciBjaGlsZHJlbiBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBpbiBTaGFoIEFsYW0gfCBNYWxheSBNYWlsIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiTWFrZSBhIHZpc2l0IiwgImFycmVzdCIsICJhcnJlc3QiLCAiaW52ZXN0aWdhdCIsICJtaXNzaW5nIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxNy4zNzUzIiwgIjc4LjQ3NDQiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly9tZW5hZm4uY29tLzEwOTgzODc1MDIvSHlkZXJhYmFkLUJveWZyaWVuZC1tdXJkZXJzLXRlY2hpZS1zdHVmZnMtYm9keS1pbi1zdWl0Y2FzZS1hcnJlc3RlZCIsICJjb250ZW50IjogIk9uIFN1bmRheSwgcG9saWNlIGZvdW5kIGEgYm9keSBzdHVmZmVkIGluc2lkZSBhIHN1aXRjYXNlIGluIE1lZGNoYWwgYXJlYSwgd2hpY2ggaXMgYWJvdXQgb25lIGhvdXIgYXdheSBmcm9tIEh5ZGVyYWJhZC4gIEFmdGVyIGFuIGluaXRpYWwgaW52ZXN0aWdhdGlvbiwgcG9saWNlIGxlYXJuZWQgdGhlIGJvZHkgd2FzIExhdmFueWEncywgYSAyNS15ZWFyLW9sZCB0ZWNoaWUgd2hvIHdlbnQgbWlzc2luZyBhIGZldyBkYXlzIGFnby4gIFN1YnNlcXVlbnRseSwgcG9saWNlIGFycmVzdGVkIGhlciBib3lmcmllbmQgU3VuaWwgZm9yIGtpZG5hcHBpbmcgYW5kIGtpbGxpbmcgdGhlIHZpY3RpbS4gQSBjYXNlIHVuZGVyIElQQyBTZWN0aW9uIDMwMiAobXVyZGVyKSB3YXMgcmVnaXN0ZXJlZC4gIExhdmFueWEgYW5kIFN1bmlsIGtuZXcgZWFjaCBvdGhlciBzaW5jZSBjb2xsZWdlICAgIEFmZmFpciAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIExhdmFueWEgd2FzIGFuIGVuZ2luZWVyIGZyb20gR2FjaGlib3dsaSBhbmQgd2FzIGluIGxvdmUgd2l0aCBTdW5pbCwgd2hvIHdhcyBhIHN0cnVjdHVyYWwgZW5naW5lZXIuIFRoZSBkdW8gbWV0IGluIGNvbGxlZ2UgYW5kIGdyZXcgY2xvc2UuICBBcHBhcmVudGx5LCBMYXZhbnlhIHdhbnRlZCBTdW5pbCB0byBtYXJyeSBoZXIgYnV0IGhlIGtlcHQgZGVsYXlpbmcgaXQuICBMYXRlciwgaGUgdG9sZCBMYXZhbnlhIGFuZCBoZXIgcGFyZW50cyB0aGF0IGhlIGdvdCBhIGpvYiBpbiBNdXNjYXQuIFN1bmlsIGNvbnZpbmNlZCBMYXZhbnlhJ3MgcGFyZW50cyB0byBhbGxvdyBoZXIgdG8gZ28gd2l0aCBoaW0uICBTdW5pbCB0b29rIExhdmFueWEgdG8gYSBsb2RnZSBhbmQgYWxsZWdlZGx5IGtpbGxlZCBoZXIgICAgTXVyZGVyICBPbiBBcHJpbCA0LCBMYXZhbnlhJ3MgZmFtaWx5IGRyb3BwZWQgaGVyIGF0IFJHSSBBaXJwb3J0IGluIEh5ZGVyYWJhZCBmb3IgaGVyIGpvdXJuZXkgdG8gTXVzY2F0LiAgQWZ0ZXIgaGVyIGZhbWlseSBtZW1iZXJzIGxlZnQsIFN1bmlsIHJlcG9ydGVkbHkgY29udmluY2VkIExhdmFueWEgdG8gY29tZSB3aXRoIGhpbSB0byBhIGxvZGdlLCB3aGVyZSBoZSBhbGxlZ2VkbHkga2lsbGVkIGhlci4gIFwiSGUgdGhyb3R0bGVkIGhlciBhdCB0aGUgbG9kZ2UgYW5kIHN0dWZmZWQgdGhlIGJvZHkgaW4gYSBzdWl0Y2FzZSxcIiBSQyBQdXJhbSBpbnNwZWN0b3IgUiBSYW1hIENoYW5kcmEgUmFvIHRvbGQgVE9JLiAgU3VuaWwgcG9zZWQgYXMgTGF2YW55YSB0byBzcGVhayB0byBoZXIgc2lzdGVyICAgIENoYXR0aW5nICBOb3RhYmx5LCBMYXZhbnlhIGhhZCB0b2xkIGhlciBwYXJlbnRzIHRoYXQgc2hlIHdvdWxkIHJldHVybiBmcm9tIE11c2NhdCBieSBBcHJpbCA3LiBIZXIgc2lzdGVyIHNlbnQgaGVyIHRleHRzIG9uIFdoYXRzQXBwIGFuZCBTdW5pbCByZXBsaWVkIHBvc2luZyBhcyBMYXZhbnlhLiAgT24gQXByaWwgNywgaGUgc3dpdGNoZWQgb2ZmIGhlciBwaG9uZSBwcm9tcHRpbmcgaGVyIHBhcmVudHMgdG8gbG9kZ2UgYSBtaXNzaW5nIHBlcnNvbiBjb21wbGFpbnQuICBCYXNlZCBvbiBMYXZhbnlhJ3MgY2FsbCByZWNvcmRzLCBwb2xpY2UgemVyb2VkIGluIG9uIFN1bmlsLCB3aG8gaGFpbHMgZnJvbSBCaWhhciwgYXMgYSBzdXNwZWN0LiAgUmVwb3J0ZWRseSwgU3VuaWwgaGlkIExhdmFueWEncyBib2R5IGJlbmVhdGggYSBjdWx2ZXJ0IGluIGEgZHJhaW4uIFdoZW4gbG9jYWxzIHNhdyB0aGUgc3VzcGljaW91cyBzdWl0Y2FzZSwgdGhleSBhbGVydGVkIHBvbGljZS4gU3VuaWwgcmVwb3J0ZWRseSB0b2xkIHBvbGljZSBvZmZpY2VycyBoZSBtdXJkZXJlZCBMYXZhbnlhIGFzIHNoZSB3YXMgcHJlc3N1cml6aW5nIGhpbSB0byBnZXQgbWFycmllZC4gSGUgaGFzIGJlZW4gY2hhcmdlZCB3aXRoIG11cmRlciBhbmQga2lkbmFwcGluZy4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToxMiIsICJ0aXRsZSI6ICJIeWRlcmFiYWQ6IEJveWZyaWVuZCBtdXJkZXJzIHRlY2hpZSwgc3R1ZmZzIGJvZHkgaW4gc3VpdGNhc2UgYXJyZXN0ZWQifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgIm9wZXJhdGlvbiIsICJ0YXJnZXQiXSwgImNvdW50cmllcyI6IFsiSkFQQU4iXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjM1LjczMDIiLCAiMTM5LjcxMSJdXSwgInNvdXJjZSI6ICJodHRwOi8vd3d3Lm12YXJpZXR5LmNvbS9jbm1pL2NubWktbmV3cy9sb2NhbC8xMTIwMTEtdGV0ZXRvLWJlYWNoLWlzLTEtYWdhaW4tYXQtamFwYW4tbWFyaW5lLWRpdmluZy1mYWlyIiwgImNvbnRlbnQiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciAgKE1WQSkgXHUyMDE0IEZvciB0aGUgc2Vjb25kIHN0cmFpZ2h0IHllYXIsIFRldGV0byBCZWFjaCBvbiB0aGUgaXNsYW5kIG9mIFJvdGEgaW4gdGhlIE1hcmlhbmFzIHdhcyBzZWxlY3RlZCBhcyB0aGUgTm8uIDEgUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaCBhdCB0aGUgRGl2ZSBhbmQgVHJhdmVsIEF3YXJkcyBvZiB0aGUgYW5udWFsIE1hcmluZSBEaXZpbmcgRmFpciBpbiBKYXBhbiBvbiBBcHJpbCA1LTcsIDIwMTkuICBJbiBhZGRpdGlvbiwgTWVndW1pIFRha2FrdSBvZiBCbHVlIFBhbG1zIERpdmUgU2VydmljZSBSb3RhIHdvbiAxc3QgcGxhY2UgUmVhZGVyc1x1MjAxOSBDaG9pY2UgRmF2b3JpdGUgRGl2ZSBHdWlkZSwgT3ZlcnNlYXMsIGFkZGluZyBhY2NvbGFkZXMgdG8gaGVyIDJuZCBwbGFjZSBsYXN0IHllYXIsIGFuZCBCbHVlIFBhbG1zIHdvbiAybmQgcGxhY2UsIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEZhdm9yaXRlIERpdmUgT3BlcmF0b3IsIE92ZXJzZWFzLiAgXHUyMDFjT25jZSBhZ2FpbiwgUm90YSBpcyBzZXR0aW5nIHRoZSBzdGFuZGFyZCBpbiB0aGUgaW5kdXN0cnkgZm9yIGV4dHJhb3JkaW5hcnkgZGl2ZSBhbmQgYmVhY2ggZXhwZXJpZW5jZXMgYW5kIGV4Y2VwdGlvbmFsIGN1c3RvbWVyIGNhcmUsXHUyMDFkIHNhaWQgTWFyaWFuYXMgVmlzaXRvcnMgQXV0aG9yaXR5IE1hbmFnaW5nIERpcmVjdG9yIENocmlzdG9waGVyIEEuIENvbmNlcGNpb24uIFx1MjAxY1x1MjAxY0ksIG15c2VsZiwgaGF2ZSBoYWQgdGhlIHByaXZpbGVnZSBvZiBkaXZpbmcgaW4gUm90YSwgYW5kIEkgaGF2ZSB0byBzYXkgdGhhdCBSb3RhIGhhcyB0aGUgYmVzdCB2aXNpYmlsaXR5IG9mIGFueSBvZiB0aGUgaXNsYW5kcyBpbiB0aGUgTWFyaWFuYXMuIFRoZSBjb3JhbCByZWVmcywgc2VhIGxpZmUgYW5kIHVuaXF1ZSB1bmRlcndhdGVyIGZvcm1hdGlvbnMgbWFrZSBSb3RhIGEgZGl2ZSBoYXZlbi4gV2UgY2FuIGFsbCBsb29rIHRvIHRoZSBjYXJlIG9mIHRoZSBSb3RhIGNvbW11bml0eSBmb3IgdGhlIGNsZWFubGluZXNzIGFuZCBwcm90ZWN0aW9uIG9mIHRoZWlyIG5hdHVyYWwgcmVzb3VyY2VzIGFuZCB0byB0aGVpciBob3NwaXRhbGl0eSBhbmQgY2FyZSBmb3IgZWFjaCB2aXNpdG9yIGFzIGFuIGV4YW1wbGUgb2Ygd2hhdCB3ZSBjYW4gb2ZmZXIgdmlzaXRvcnMgdG8gZWFjaCBvZiB0aGUgaXNsYW5kcyBvZiB0aGUgTWFyaWFuYXMuIFdlIGhhdmUgbXVjaCB0byBiZSBwcm91ZCBvZi5cdTIwMWQgIEluIGFkZGl0aW9uLCBTYWlwYW4sIFRpbmlhbiwgYW5kIFJvdGEgY29tYmluZWQgd29uIDR0aCBwbGFjZSBmb3IgdGhlIHNlY29uZCB5ZWFyIGluIGEgcm93IGFzIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEJlc3QgRGl2aW5nIEFyZWEsIE92ZXJzZWFzLCBhbmQgTWFuYWdhaGEgd29uIDEwdGggcGxhY2UgaW4gUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaC4gIERpdmluZyBvcHBvcnR1bml0aWVzIG9uIFJvdGEgYW5kIHRocm91Z2hvdXQgdGhlIE1hcmlhbmFzIHdlcmUgdG91dGVkIGJ5IE1WQSB0byBvdmVyIDUwLDAwMCBhdHRlbmRlZXMgYXQgdGhlIGZhaXIsIHdoaWNoIGlzIEphcGFuXHUyMDE5cyBsZWFkaW5nIGNvbnN1bWVyIGRpdmluZyBzaG93LCB0YXJnZXRpbmcgY29uc3VtZXJzIGFuZCB0cmFkZSByZXByZXNlbnRhdGl2ZXMgaW4gSmFwYW4gYW5kIG90aGVyIEFzaWFuIGNvdW50cmllcy4gVGhlIGZhaXIgd2FzIGhlbGQgYXQgSWtlYnVrdXJvIFN1bnNoaW5lIENpdHkgQ29udmVudGlvbiBDZW50ZXIgaW4gVG9reW8uICBNVkEgaG9zdGVkIGFuIGluZm9ybWF0aW9uIGJvb3RoIGF0IHRoZSBldmVudCBpbiB0aGUgXHUyMDFjT2NlYW4sIElzbGFuZHMgYW5kIFRyYXZlbFx1MjAxZCBzZWN0aW9uLiBNVkEgc2hvd2VkIHRoZSBtb3ZpZSBcdTIwMWNEaXZpbmcgaW4gdGhlIE1hcmlhbmFzLFx1MjAxZCBkaXN0cmlidXRlZCBkaXZpbmcgbWFwcyBhbmQgbGVhZmxldHMsIGlzbGFuZCBtYXBzLCBhbmQgb3RoZXIgbWF0ZXJpYWw7IGFuZCBhbnN3ZXJlZCBxdWVzdGlvbnMgZnJvbSBhdHRlbmRlZXMgYXQgdGhlIHNob3csIHdoaWNoIGF0dHJhY3RlZCAxMDAgZXhoaWJpdG9ycyByZXByZXNlbnRpbmcgZGVzdGluYXRpb25zLCBkaXZpbmcgc2hvcHMsIHVuZGVyd2F0ZXIgY2FtZXJhIG1hbnVmYWN0dXJlcnMsIGFuZCBvdGhlciBhcmVhcyBvZiB0aGUgaW5kdXN0cnkuICBJbiBjb29wZXJhdGlvbiB3aXRoIE1WQSwgdGhlIGV2ZW50IHdhcyBhbHNvIGF0dGVuZGVkIGJ5IGZvdXIgbWVtYmVycyBvZiB0aGUgTm9ydGhlcm4gTWFyaWFuYXMgRGl2aW5nIE9wZXJhdGlvbnMgQXNzb2NpYXRpb24uIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTQiLCAidGl0bGUiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIllpZWxkLCBub3Qgc3BlY2lmaWVkIGJlbG93IiwgIiBjb25ncmVzcyAiLCAiIGVsZWN0aW9uIiwgIiBhdHRhY2sgIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxMS44MzMzIiwgIjc1LjU2NjciXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cuZmlyc3Rwb3N0LmNvbS9wb2xpdGljcy9sb2stc2FiaGEtcG9sbHMtYmpwLXRyeWluZy10by1taWxrLXNhYmFyaW1hbGEtaXNzdWUtZm9yLXZvdGVzLWJ1dC13aW5uaW5nLXBhdGhhbmFtdGhpdHRhLXNlYXQtd2lsbC1iZS10b3VnaC02NDQ3MDUxLmh0bWwiLCAiY29udGVudCI6ICJLYWxhdmF0aGkgd2FzIHNjYXJlZCB3aGVuIHNoZSB3YXMgYXNrZWQgdG8gam9pbiBhIGdyb3VwIG9mIHJlbGF0aXZlcyBhbmQgZnJpZW5kcyB0byBnbyB0byBTYWJhcmltYWxhIGluIFBhdGhhbmFtdGhpdHRhIGRpc3RyaWN0IG9mIEtlcmFsYSBmb3IgVmlzaHVrYW5pIGRhcnNoYW4gYXQgdGhlIExvcmQgQXl5YXBwYSB0ZW1wbGUgb24gMTUgQXByaWwuIFRoZSAzMi15ZWFyLW9sZCB3b21hbiBmcm9tIENvaW1iYXRvcmUgaW4gVGFtaWwgTmFkdSBmb3VuZCBoZXIgZmVhcnMgbWlzcGxhY2VkIHdoZW4gc2hlIGZvdW5kIG5vbmUgdG8gYmxvY2sgaGVyIGF0IHRoZSBOaWxha2thbCBiYXNlIGNhbXAgb24gdGhlIGV2ZSBvZiB0aGUgVmlzaHUsIHRoZSBNYWxheWFsYW0gTmV3IFllYXIgZGF5LiAgVGhpcyB3YXMgbm90IHRoZSBjYXNlIHNpeCBtb250aHMgYWdvLCB3aGVuIHdvcmtlcnMgb2YgcmlnaHQtd2luZyBvdXRmaXRzIGZvcmNlZCB0aGUgd29tZW4gd2hvIGJldHdlZW4gMTAgYW5kIDUwIHllYXJzIG9mIGFnZSB0byByZXR1cm4uIFRoZSBwcm90ZXN0ZXJzIGhhZCBhbHNvIHRha2VuIHBvc2l0aW9uIGF0IG90aGVyIGVudHJ5IHBvaW50cyBhbmQgdGhlIGVudGlyZSBoaWxsb2NrIHRvIGVuc3VyZSB0aGF0IG5vIG1lbnN0cnVhdGluZyB3b21lbiBlbnRlcmVkIHRoZSB0ZW1wbGUuICBUaGUgcHJvdGVzdHMgZm9sbG93aW5nIHRoZSAyOCBTZXB0ZW1iZXIgU3VwcmVtZSBDb3VydCB2ZXJkaWN0IGFsbG93aW5nIHdvbWVuIG9mIGFsbCBhZ2VzIHRvIGVudGVyIHRoZSB0ZW1wbGUgdHVybmVkIHZpb2xlbnQgbW9zdCB3aGVuIHRoZSB0ZW1wbGUgd2FzIG9wZW5lZCBmb3IgdGhlIG1vbnRobHkgcHVqYSBhbmQgZHVyaW5nIHRoZSBtYWluIHBpbGdyaW0gc2Vhc29uLiBIdW5kcmVkcyBvZiBwZW9wbGUsIGluY2x1ZGluZyBwb2xpY2UgYW5kIG1lZGlhIHBlcnNvbm5lbCwgaGFkIGNvbWUgdW5kZXIgYXR0YWNrIGZyb20gdGhlIHNlbGYtc3R5bGVkIGd1YXJkaWFucyBvZiB0aGUgY3VzdG9tcyBhbmQgdHJhZGl0aW9ucyBvZiB0aGUgdGVtcGxlLiAgS2FsYXZhdGhpIHdhcyBhZnJhaWQgdG8gdmlzaXQgU2FiYXJpbWFsYSBhcyBzaGUgaGFkIHJlYWQgcmVwb3J0cyBhYm91dCB0aGUgdmlvbGVuY2UuIEhvd2V2ZXIsIHNoZSB3YXMgcmVsaWV2ZWQgd2hlbiBzaGUgZGlkIG5vdCBmaW5kIGFueSBwcm90ZXN0ZXJzIGluIHRoZSB2aWNpbml0eSBvZiBTYWJhcmltYWxhIHdoZW4gdGhleSBhcnJpdmVkIGFzIE5pbGFra2FsLiBQb2xpY2UgcGVyc29ubmVsIHBvc3RlZCBhdCB0aGUgYmFzZSBjYW1wIHNhaWQgdGhhdCBwcm90ZXN0ZXJzIGJlbG9uZ2luZyB0byBhbGwgcG9saXRpY2FsIGh1ZXMgaGFkIGRpc2FwcGVhcmVkIGZyb20gdGhlIGhpbGwgc2hyaW5lIGZvbGxvd2luZyB0aGUgYW5ub3VuY2VtZW50IG9mIHRoZSBlbGVjdGlvbi4gIFx1MjAxY1RoZXkgc2VlbSB0byBoYXZlIGFiYW5kb25lZCBBeXlhcHBhIGZvciB0aGUgc2FrZSBvZiB2b3Rlcy4gSXQgaXMgbm93IGNsZWFyIHRoYXQgYWxsIHRoZSBkcmFtYSB0aGF0IFNhYmFyaW1hbGEgd2l0bmVzc2VkIGFmdGVyIHRoZSBTdXByZW1lIENvdXJ0IHBhc3NlZCB0aGUgb3JkZXIgd2FzIHBvbGl0aWNhbCxcdTIwMWQgc2FpZCBhbiBvZmZpY2VyIHdobyBkaWQgbm90IHdhbnQgdG8gYmUgaWRlbnRpZmllZC4gIEJoYXJhdGl5YSBKYW5hdGEgUGFydHkgZ2VuZXJhbCBzZWNyZXRhcnkgSyBTdXJlbmRyYW4sIHdobyB3YXMgYXQgdGhlIGZvcmVmcm9udCBvZiB0aGUgcHJvdGVzdHMsIGlzIG5vdyB0aGUgQkpQIGNhbmRpZGF0ZSBpbiB0aGUgUGF0aGFuYW10aGl0dGEgTG9rIFNhYmhhIGNvbnN0aXR1ZW5jeS4gV2hlbiBhc2tlZCB3aHkgdGhleSBoYXZlIGRyb3BwZWQgdGhlIHZpZ2lsIGF0IFNhYmFyaW1hbGEsIGhlIHNhaWQgdGhleSBkaWQgbm90IGZlZWwgdGhlIG5lZWQgZm9yIHRoZSBzYW1lIGFzIHRoZSBMZWZ0IEZyb250IGdvdmVybm1lbnQgaXRzZWxmIGhhZCBhYmFuZG9uZWQgdGhlaXIgZGVjaXNpb24gdG8gdGFrZSB3b21lbiBvZiB0aGUgZm9yYmlkZGVuIGFnZSB0byBTYWJhcmltYWxhLiAgXHUyMDFjV2UgaGFkIGVudGVyZWQgdGhlIHNjZW5lIGFmdGVyIENoaWVmIE1pbmlzdGVyIFBpbmFyYXlpIFZpamF5YW4gYXBwZWFyZWQgYWRhbWFudCBpbiBpbXBsZW1lbnRpbmcgdGhlIGFwZXggY291cnQgdmVyZGljdC4gSGUgaGFzIHJlYWxpc2VkIHRoZSBmb2xseSBvZiBoaXMgZGVjaXNpb24gYW5kIGhhcyByZWZyYWluZWQgZnJvbSB0YWtpbmcgeW91bmcgd29tZW4gdG8gdGhlIGhpbGwgc2hyaW5lLiBUaGVyZWZvcmUsIHRoZXJlIGlzIG5vIG5lZWQgZm9yIHVzIHRvIGd1YXJkIHRoZSB0ZW1wbGUgbm93LFx1MjAxZCBoZSBzYWlkLiAgU3VyZW5kcmFuIHNhaWQgdGhhdCB0aGUgcHJvdGVzdHMgdGhleSBvcmdhbmlzZWQgaGFkIGFsc28gY3JlYXRlZCBhd2FyZW5lc3MgYW1vbmcgdGhlIGRldm90ZWVzIGFib3V0IHRoZSBldmlsIGRlc2lnbnMgb2YgdGhlIGdvdmVybm1lbnQuIFx1MjAxY1RoZXkgdGhlbXNlbHZlcyBhcmUgY29taW5nIGZvcndhcmQgdG8gcHJvdGVjdCB0aGUgY3VzdG9tcyBhbmQgdHJhZGl0aW9ucyBvZiB0aGUgdGVtcGxlIHdpdGhvdXQgYW55Ym9keSBwcm9tcHRpbmcgdGhlbSxcdTIwMWQgaGUgYWRkZWQuICBIb3dldmVyLCBTdXJlbmRyYW4gYW5kIGhpcyBwYXJ0eSBhcmUgbm90IHJlYWR5IHRvIGxlYXZlIFNhYmFyaW1hbGEgaW4gdGhlIGVsZWN0aW9uLCBkZXNwaXRlIGEgYmFyIG9uIGludm9raW5nIHRoZSBuYW1lcyBvZiBMb3JkIEF5eWFwcGEgaW4gdGhlIGVsZWN0aW9uIGJ5IHRoZSBFbGVjdGlvbiBDb21taXNzaW9uLiBXb21lblx1MjAxOXMgZW50cnkgaW50byB0aGUgdGVtcGxlIGlzIHRoZSBzaW5nbGUgbGFyZ2VzdCBpc3N1ZSBvZiBTdXJlbmRyYW4gYXQgUGF0aGFuYW10aGl0dGEsIHdoaWNoIGlzIGEgQ29uZ3Jlc3MgYmFzdGlvbi4gV2l0aG91dCBtZW50aW9uaW5nIHRoZSBuYW1lIG9mIHRoZSBkZWl0eSwgU3VyZW5kcmFuIGhhcyBiZWVuIHNlZWtpbmcgdm90ZXMgZm9yIEF5eWFwcGFuLiAgXHUyMDFjSSBrbm93IHlvdSBoYXZlIGdhdGhlcmVkIGhlcmUgYnJhdmluZyB0aGUgc2NvcmNoaW5nIHN1bW1lciBoZWF0IG5vdCBiZWNhdXNlIG9mIHlvdXIgbG92ZSBmb3IgbWUuIEkgZG9uXHUyMDE5dCBuZWVkIHRvIHRlbGwgeW91IHdobyBoYXMgYnJvdWdodCB5b3UgaGVyZS4gUGxlYXNlIHZvdGUgZm9yIGhpbSBhbmQgdGVhY2ggdGhlIExlZnQgYSBsZXNzb24sXHUyMDFkIFN1cmVuZHJhbiB0b2xkIGEgbW9kZXJhdGUgY3Jvd2Qgb2YgbWVuIGFuZCB3b21lbiB3aG8gaGFkIGdhdGhlcmVkIG5lYXIgS29ubmksIDQwIGttcyBmcm9tIE5pbGFra2FsLCB0byBncmVldCBoaW0uICBCZWZvcmUgaGUgcmVhY2hlZCB0aGUgc3BvdCwgdGhlIGxvY2FsIGxlYWRlcnMgZGVzY3JpYmVkIGhpbSBhcyBhICdtYXJ0eXInLiBUaGV5IHBvaW50ZWQgb3V0IHRoYXQgMjQyIGNhc2VzIHNsYXBwZWQgYnkgdGhlIEtlcmFsYSBwb2xpY2UgYWdhaW5zdCBoaW0gaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBTYWJhcmltYWxhIGlzc3VlIHdhcyBwYXJ0IG9mIHRoZSBnb3Zlcm5tZW50XHUyMDE5cyBhdHRlbXB0IHRvIHNpbGVuY2UgdGhvc2UgZmlnaHRpbmcgZm9yIHRoZSByaWdodHMgb2YgdGhlIGZhaXRoZnVsLiAgSWYgdGhlIGZhaXRoZnVsIGNvbnNpZGVyIHRoZSBwZXJzb25hbCBzdHJ1Z2dsZSB3YWdlZCBieSBoaW0gaW4gZGVmZW5kaW5nIHRoZSBjdXN0b21zIGFuZCB0cmFkaXRpb25zIG9mIHRoZSBTYWJhcmltYWxhIHRlbXBsZSBnZW51aW5lLCBLIFN1cmVuZHJhbiBzaG91bGQgd2luIHRoZSBlbGVjdGlvbiBoYW5kcyBkb3duLiBIb3dldmVyLCBpdCBpcyBubyBjYWtlIHdhbGsgZm9yIHRoZSBCSlAgY2FuZGlkYXRlLiAgTWFueSBvZiB0aGUgZmFpdGhmdWwgaGF2ZSBzdGFydGVkIHJlYWxpc2luZyB0aGF0IHRoZSBhZ2dyZXNzaXZlIHN0YW5kIHRoYXQgU3VyZW5kcmFuIGFuZCBoaXMgcGFydHkgaGFkIHRha2VuIGFnYWluc3QgdGhlIExERiBnb3Zlcm5tZW50XHUyMDE5cyBhdHRlbXB0IHRvIGltcGxlbWVudCB0aGUgYXBleCBjb3VydCB2ZXJkaWN0IHdhcyBub3QgYm9ybmUgb3V0IG9mIGdlbnVpbmUgY29uY2VybiBmb3IgZmFpdGggYnV0IGFpbWVkIGF0IHBvbGl0aWNhbCBjYXBpdGFsLiAgVGhlIE5haXIgU2VydmljZSBTb2NpZXR5IChOU1MpLCBhIGNvbW11bml0eSBvcmdhbmlzYXRpb24gb2YgdGhlIHVwcGVyIGNhc3RlIE5haXJzIHRoYXQgYXBwcmVjaWF0ZWQgdGhlIHN1cHBvcnQgZ2l2ZW4gYnkgdGhlIFNhbmdoIFBhcml2YXIgaW4gb3Bwb3NpbmcgdGhlIGVudHJ5IG9mIHlvdW5nIHdvbWVuIGluIHRoZSB0ZW1wbGUsIGhhcyBjaG9zZW4gbm90IHRvIHJlY2lwcm9jYXRlIHRoZSBzdXBwb3J0IGluIHRoZSBwb2xpdGljYWwgYXJlbmEuIFRoZSBvcmdhbmlzYXRpb24gdGhhdCBob2xkcyBzd2F5IG92ZXIgdGhlIDE0IHBlcmNlbnQgTmFpciBwb3B1bGF0aW9uIGluIHRoZSBkaXN0cmljdCBoYXMgZGVjaWRlZCB0byBjb250aW51ZSB3aXRoIGl0cyBwb2xpY3kgb2YgbWFpbnRhaW5pbmcgZXF1aS1kaXN0YW5jZSBmcm9tIGJvdGggdGhlIExlZnQgYW5kIHRoZSBSaWdodC4gIFNhYmFyaW1hbGEgS2FybWEgU2FtaXRoaSBwYXRyb24gU3dhbWkgQ2hpZGFuYW5kYXB1cmlcdTIwMTlzIGNhbGwgdG8gdGhlIEF5eWFwcGEgZGV2b3RlZXMgdG8gdm90ZSBmb3IgdGhlIENvbmdyZXNzLWxlZCBVbml0ZWQgRGVtb2NyYXRpYyBGcm9udFx1MjAxOXMgY2FuZGlkYXRlcyBpbiBjb25zdGl0dWVuY2llcyB3aGVyZSB0aGUgTkRBIGlzIHdlYWsgaGFzIGFsc28gY29tZSBhcyBhIHNldGJhY2sgdG8gdGhlIEJKUFx1MjAxOXMgZWZmb3J0cyB0byB1c2UgdGhlIGlzc3VlIHRvIHN0cmVuZ3RoZW4gdGhlIHBhcnR5IGJhc2UgaW4gdGhlIHN0YXRlLiAgVGhvdWdoIHRoZSBvcGluaW9uIG9uIHNvY2lhbCBtZWRpYSB3YXMgaW50ZW5kZWQgdG8gZW5zdXJlIHRoZSBkZWZlYXQgb2YgdGhlIExERiwgc2VuaW9yIEJKUCBsZWFkZXJzIGZlYXIgdGhhdCB0aGUgY29uZnVzaW9uIGl0IGNyZWF0ZXMgd2lsbCBhZmZlY3QgdGhlIHBhcnR5XHUyMDE5cyBwcm9zcGVjdHMgaW4gbWFyZ2luYWwgc2VhdHMuICBCSlAgd2FzIGNvdW50aW5nIG9uIHRoZSBzdXBwb3J0IG9mIE5TUyBmb3IgdGhlIHZpY3Rvcnkgb2YgU3VyZW5kcmFuIGF0IFBhdGhhbmFtdGhpdHRhLiBTb3VyY2VzIGluIHRoZSBvcmdhbmlzYXRpb24gc2FpZCB0aGF0IHRoZSBOU1MgbGVhZGVyc2hpcCB3YXMgbm90IGhhcHB5IHdpdGggdGhlIHdheSBTdXJlbmRyYW4sIGluIHBhcnRpY3VsYXIsIGFuZCB0aGUgc2FmZnJvbiBwYXJ0eSBpbiBnZW5lcmFsIGRyYWdnZWQgdGhlIGlzc3VlIGludG8gdGhlIHN0cmVldHMuIE5TUycgb2ZmaWNpYWwgam91cm5hbCBTZXJ2aWNlIGFjY3VzZWQgYWxsIHBvbGl0aWNhbCBwYXJ0aWVzIG9mIHRyeWluZyB0byB1c2UgU2FiYXJpbWFsYSBmb3IgdGhlaXIgZWxlY3RvcmFsIGdhaW5zLiAgVGhlIE5TUyBqb3VybmFsIGFsc28gZG91YnRzIHRoZSBzaW5jZXJpdHkgb2YgdGhlIEJKUCBpbiBmaW5kaW5nIGEgbGVnYWwgc29sdXRpb24gdG8gdGhlIGlzc3VlLiBJbiBpdHMgZWRpdG9yaWFsLCBTZXJ2aWNlIHNhaWQgdGhhdCB0aGUgcGFydHkgaGFkIHRyaWVkIHRvIHByZXZlbnQgd29tZW4gb24gdGhlIHN0cmVldHMgaW5zdGVhZCBvZiBwYXlpbmcgYXR0ZW50aW9uIHRvIHRoZSBsZWdhbCBtYXR0ZXJzLiBUaGUgTlNTIGxlYWRlcnNoaXAgaXMgYWxzbyBub3QgaW1wcmVzc2VkIGJ5IHRoZSBwcm9taXNlIGdpdmVuIGJ5IHRoZSBCSlAgaW4gaXRzIGVsZWN0aW9uIG1hbmlmZXN0byB0byBzZWN1cmUgY29uc3RpdHV0aW9uYWwgcHJvdGVjdGlvbiBvbiBpc3N1ZXMgcmVsYXRlZCB0byBmYWl0aCBhbmQgYmVsaWVmIHNpbmNlIGl0IGRpZCBub3RoaW5nIHRvIGZ1bGZpbCBpdHMgcHJvbWlzZSByZWdhcmRpbmcgdGhlIFJhbSB0ZW1wbGUgYXQgQXlvZGh5YSBkdXJpbmcgaXRzIHRlcm0uIEhlIHNhaWQgdGhhdCB0aGUgQkpQIGNhbm5vdCBmb29sIHRoZSBwZW9wbGUgaW4gS2VyYWxhIHdpdGggc3VjaCBlbXB0eSB3b3Jkcy4gIEJKUCBjYW4gd2luIHRoZSBzZWF0IG9ubHkgaWYgaXQgaXMgYWJsZSB0byBwb29sIHRoZSB2b3RlcyBvZiB0aGUgZW50aXJlIG1ham9yaXR5IGNvbW11bml0eSwgd2hpY2ggYWNjb3VudHMgZm9yIGFib3V0IDU3IHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24gaW4gdGhlIGRpc3RyaWN0LiBOb25lIGV4cGVjdHMgdGhlIGVudGlyZSBIaW5kdSB2b3RlcyB0byBmYWxsIGluIHRoZSBCSlAga2l0dHkgc2luY2UgYSBzdWJzdGFudGlhbCBjaHVuayBvZiB0aGVtIGhhdmUgYmVlbiB0cmFkaXRpb25hbCBzdXBwb3J0ZXJzIG9mIFVERiBhbmQgTERGIGFuZCBpdCB3b25cdTIwMTl0IGJlIGVhc3kgZm9yIHRoZW0gdG8gY2hhbmdlIHBvbGl0aWNhbCBhZmZpbGlhdGlvbnMgYmFzZWQgb24gb25lIGlzc3VlLiAgXHUyMDFjSSBrbm93IHdoYXQgdGhlIGdvdmVybm1lbnQgaGFzIGRvbmUgYXQgU2FiYXJpbWFsYSB3YXMgbm90IHJpZ2h0LiBJIGFtIGFsc28gaHVydCBieSB0aGUgaGFzdGUgd2l0aCB3aGljaCB0aGUgZ292ZXJubWVudCB0cmllZCB0byBpbXBsZW1lbnQgdGhlIFNDIHZlcmRpY3QuIEhvd2V2ZXIsIEkgY2Fubm90IHRoaW5rIG9mIGNoYW5naW5nIG15IHBvbGl0aWNhbCBhZmZpbGlhdGlvbiBhcyBJIGFuZCBteSBmYW1pbHkgaGF2ZSBiZWVuIHN1cHBvcnRpbmcgdGhlIENvbW11bmlzdCBQYXJ0eSBvZiBJbmRpYSBmcm9tIG15IGNoaWxkaG9vZC4gSSB3aWxsIHZvdGUgZm9yIHRoZSBwYXJ0eSBjYW5kaWRhdGUgdGhpcyB0aW1lIHRvbyxcdTIwMWQgc2FpZCBHb3ZpbmdhIFBpbGxhaSwgYSA3NS15ZWFyLW9sZCB0cmFkZXIgbmVhciBLb25uaS4gIEhvd2V2ZXIsIGhpcyB3aWZlIExhbGl0aGEgc2FpZCBzaGUgd291bGQgbm90IHZvdGUgZm9yIHRoZSBDUE0gdGhpcyB0aW1lLiBCdXQgc2hlIGhhcyBub3QgYmVlbiBhYmxlIHRvIGRlY2lkZSB3aGV0aGVyIHRvIHZvdGUgZm9yIEJKUCBvciBDb25ncmVzcy4gU2hlIHNhaWQgbWFueSBvZiBoZXIgZnJpZW5kcyBpbiB0aGUgYXJlYSB3ZXJlIGFsc28gY29uZnVzZWQgbGlrZSBoZXIuIFx1MjAxY1dlIHdpbGwgdGFrZSBhIGRlY2lzaW9uIGFmdGVyIHNlZWluZyB0aGUgY2FtcGFpZ24sXHUyMDFkIHNhaWQgTGFsaXRoYS4gIENvbmdyZXNzIGhhcyBiZWVuIHdpbm5pbmcgdGhlIHNlYXQgZXZlciBzaW5jZSB0aGUgY29uc3RpdHVlbmN5IHdhcyBjYXJ2ZWQgb3V0IGluIDIwMDkgd2l0aCB0aGUgc3VwcG9ydCBvZiBhIHNlY3Rpb24gb2YgdGhlIE5haXIgY29tbXVuaXR5IGFuZCB0aGUgbWlub3JpdGllcywgd2hvIGFjY291bnQgZm9yIDQzIHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24uIEhvd2V2ZXIsIHBhcnR5IGNhbmRpZGF0ZSBBbnRvIEFudG9ueVx1MjAxOXMgdmljdG9yeSBtYXJnaW4gc2F3IGEgZHJvcCBmcm9tIDEsMTEsMjA2IHZvdGVzIGluIDIwMDkgdG8gNTYsMTkxIHZvdGVzIGluIDIwMTQuICBUaGlzIHdhcyBtYWlubHkgZHVlIHRvIGFuIGltcHJvdmVkIHNob3dpbmcgYnkgdGhlIEJKUCwgd2hpY2ggaW5jcmVhc2VkIGl0cyB2b3RlIHNoYXJlIGZyb20gNy4wOCBwZXJjZW50IHRvIDE1Ljk4IHBlcmNlbnQgdm90ZXMgZHVyaW5nIHRoZSBwZXJpb2QuIEEgc3dpbmcgaW4gbWlub3JpdHkgdm90ZXMgaW4gdGhlIDIwMTYgQXNzZW1ibHkgZWxlY3Rpb24gc2F3IHRoZSBMREYgd2lubmluZyBmb3VyIEFzc2VtYmx5IHNlZ21lbnRzLiAgSG93ZXZlciwgdGhlIENvbmdyZXNzIGNhbXAgZXhwZWN0cyB0aGF0IHRoZSBtb2RlcmF0ZSBzZWN0aW9ucyBvZiB0aGUgbWFqb3JpdHkgY29tbXVuaXR5IHdpbGwgc3VwcG9ydCB0aGUgVURGLCBtYWtpbmcgQW50b1x1MjAxOXMgdmljdG9yeSBlYXN5LiBUaGUgTERGIGNhbXAgaXMgcGlubmluZyB0aGVpciBob3BlIG9uIHRoZSBwcm9ncmVzc2l2ZSBzZWN0aW9ucyBvZiB0aGUgc29jaWV0eS4gQSB0b3VyIGFjcm9zcyB0aGUgY29uc3RpdHVlbmN5LCBjb21wcmlzaW5nIGZvdXIgQXNzZW1ibHkgc2VnbWVudHMgaW4gUGF0aGFuYW10aGl0dGEgZGlzdHJpY3QgYW5kIHR3byBpbiBLb3R0YXlhbSBkaXN0cmljdCwgc2hvdyB0aGVpciBudW1iZXIgdG9vIHNob3J0IGZvciBhIHZpY3RvcnkgZm9yIFZlZW5hIEdlb3JnZSwgdGhlIExERiBjYW5kaWRhdGUuICBUaGUgZmlnaHQgaW4gUGF0aGFuYW10aGl0dGEgaXMgYmV0d2VlbiBCSlAgYW5kIHRoZSBDb25ncmVzcy4gSXQgaXMgdG9vIGVhcmx5IHRvIHByZWRpY3Qgd2hvIHdpbGwgaGF2ZSB0aGUgbGFzdCBsYXVnaCBpbiB0aGlzIGV4dHJlbWVseSBjbG9zZSBmaWdodC4gIFlvdXIgZ3VpZGUgdG8gdGhlIGxhdGVzdCBlbGVjdGlvbiBuZXdzLCBhbmFseXNpcywgY29tbWVudGFyeSwgbGl2ZSB1cGRhdGVzIGFuZCBzY2hlZHVsZSBmb3IgTG9rIFNhYmhhIEVsZWN0aW9ucyAyMDE5IG9uIGZpcnN0cG9zdC5jb20vZWxlY3Rpb25zLiBGb2xsb3cgdXMgb24gVHdpdHRlciBhbmQgSW5zdGFncmFtIG9yIGxpa2Ugb3VyIEZhY2Vib29rIHBhZ2UgZm9yIHVwZGF0ZXMgZnJvbSBhbGwgNTQzIGNvbnN0aXR1ZW5jaWVzIGZvciB0aGUgdXBjb21pbmcgZ2VuZXJhbCBlbGVjdGlvbnMuIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTkiLCAidGl0bGUiOiAiTG9rIFNhYmhhIHBvbGxzOiBCSlAgdHJ5aW5nIHRvIG1pbGsgU2FiYXJpbWFsYSBpc3N1ZSBmb3Igdm90ZXMsIGJ1dCB3aW5uaW5nIFBhdGhhbmFtdGhpdHRhIHNlYXQgd2lsbCBiZSB0b3VnaCAtIEZpcnN0cG9zdCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkVuZ2FnZSBpbiBuZWdvdGlhdGlvbiIsICIgY29uZ3Jlc3MgIiwgIiBlbGVjdGlvbiJdLCAiY291bnRyaWVzIjogWyJJTkRJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siMTMuMDgzMyIsICI4MC4yODMzIl1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmluZGlhdGltZXMuY29tL25ld3MvaW5kaWEvYWxsLWluLXRoZS1mYW1pbHktcmF2aW5kcmEtamFkZWphLXMtZmF0aGVyLXNpc3Rlci1qb2luLWNvbmdyZXNzLXdpZmUtYWxyZWFkeS1hLWJqcC1sZWFkZXItMzY1NDQyLmh0bWwiLCAiY29udGVudCI6ICJBbGwgSW4gVGhlIEZhbWlseTogUmF2aW5kcmEgSmFkZWphJ3MgRmF0aGVyICYgU2lzdGVyIEpvaW4gQ29uZ3Jlc3MsIFdpZmUgQWxyZWFkeSBBIEJKUCBMZWFkZXIgIEFsbCBJbiBUaGUgRmFtaWx5OiBSYXZpbmRyYSBKYWRlamEncyBGYXRoZXIgJiBTaXN0ZXIgSm9pbiBDb25ncmVzcywgV2lmZSBBbHJlYWR5IEEgQkpQIExlYWRlciAgVGhlcmUgYXJlIHRpbWVzIHdoZW4gdGhlcmVcdTIwMTlzIGhhcmRseSBhbnkgZGlmZmVyZW5jZSBiZXR3ZWVuIGZhbWlseSBwb2xpdGljcyBhbmQgcGFydHkgcG9saXRpY3MuIFRlYW0gSW5kaWEgQWxsLXJvdW5kZXIgUmF2aW5kcmEgSmFkZWphXHUyMDE5cyBmYW1pbHkgaXMgcHJvYmFibHkgaGF2aW5nIHRoZSBzYW1lIG1vbWVudCBhcyBoaXMgZmFtaWx5IG1lbWJlcnMgaGF2ZSBjaG9zZW4gZGlmZmVyZW50IHBvbGl0aWNhbCBwYXJ0aWVzIHRvIGdvIHdpdGggaW4gdGhlIG9uZ29pbmcgZWxlY3Rpb25zIGZvciBMb2sgU2FiaGEuICBJZiB0aGUgcmVwb3J0cyBhcmUgdG8gYmUgYmVsaWV2ZWQsIGp1c3QgYSBmZXcgd2Vla3MgYWZ0ZXIgSmFkZWphXHUyMDE5cyB3aWZlIFJpdmFiYSBTb2xhbmtpIGpvaW5lZCBBbWl0IFNoYWgtbGVkIEJoYXJ0aXlhIEphbnRhIFBhcnR5LCB0d28gaW1wb3J0YW50IG1lbWJlcnMgZnJvbSBoaXMgZmFtaWx5IGhhdmUgam9pbmVkIENvbmdyZXNzLiAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIEphZGVqYVx1MjAxOXMgZmF0aGVyIEFuaXJ1ZGhzaW5oIEphZGVqYSBhbmQgTmF5bmFiYSBqb2luZWQgdGhlIENvbmdyZXNzIGluIEthbGF2YWQgY2l0eSBvZiBKYW1uYWdhciBkaXN0cmljdC4gVGhleSBkaWQgc28gaW4gdGhlIHByZXNlbmNlIG9mIGZpcmVicmFuZCBQYXRpZGFyIGxlYWRlciBIYXJkaWsgUGF0ZWwuICBIaXMgZmFtaWx5LCBpcyBhcHBhcmVudGx5IHVuaGFwcHkgd2l0aCBCSlAgb3ZlciBub3QgZnVsZmlsbGluZyB0aGUgcHJvbWlzZXMgbWFkZSB0byB0aGUgcGVvcGxlIGluIDIwMTQuICBFYXJsaWVyLCBNcnMgSmFkZWphIGpvaW5lZCB0aGUgQkpQIGZpdmUgbW9udGhzIGFmdGVyIHNoZSB3YXMgYXBwb2ludGVkIHRoZSBjaGllZiBvZiB3b21lblx1MjAxOXMgd2luZyBvZiBLYXJuaSBTZW5hIHRoYXQgaGFkIHByb3Rlc3RlZCB0aGUgcmVsZWFzZSBvZiBIaW5kaSBtb3ZpZSBQYWRtYXZhYXQuICBcdTIwMWNIaXMgcGVyc29uYWxpdHksIGhpcyBpZGVudGl0eSwgdGhlIHdheSBoZSBoYXMgbGVkIHRoZSBuYXRpb24sIGhpcyB2aXNpb24gZm9yIHRoZSBjb3VudHJ5IGFuZCB0aGUgaWRlbnRpdHkgb2YgSGluZHVzdGFuIGhlIGhhcyBjYXJ2ZWQgb3V0IGluIHRoZSB3b3JsZCwgaXQgaXMgYSBtYXR0ZXIgb2YgcHJpZGUgZm9yIGV2ZXJ5IGNpdGl6ZW4sXHUyMDFkIHNoZSB0b2xkIFRoZSBJbmRpYW4gRXhwcmVzcy4gIEphZGVqYSBpcyBjdXJyZW50bHkgcmVwcmVzZW50aW5nIENoZW5uYWkgU1VwZXIgS2luZ3MgaW4gdGhlIG9uZ29pbmcgZWRpdGlvbiBvZiB0aGUgSW5kaWEgUHJlbWllciBMZWFndWUuIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTkiLCAidGl0bGUiOiAiQWxsIEluIFRoZSBGYW1pbHk6IFJhdmluZHJhIEphZGVqYSdzIEZhdGhlciAmIFNpc3RlciBKb2luIENvbmdyZXNzLCBXaWZlIEFscmVhZHkgQSBCSlAgTGVhZGVyIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiTWFrZSBhIHZpc2l0IiwgIiBhcHBvaW50bWVudCIsICJldmlkZW5jZSIsICJvcGVyYXRpb24iXSwgImNvdW50cmllcyI6IFsiTUFMQVlTSUEiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjMuNTMyMSIsICIxMDMuNDYyIl1dLCAic291cmNlIjogImh0dHBzOi8vd3d3Lm1hbGF5bWFpbC5jb20vbmV3cy9tYWxheXNpYS8yMDE5LzA0LzE0L25hamlicy10cmlhbC1jb250aW51ZXMtdG9tb3Jyb3ctd2l0aC1kZWZlbmNlLXRvLWNyb3NzLWV4YW1pbmUtZmlyc3Qtd2l0bmVzcy8xNzQzMjMyIiwgImNvbnRlbnQiOiAiS1VBTEEgTFVNUFVSLCBBcHJpbCAxNCBcdTIwMTQgVGhlIHRyaWFsIG9mIGZvcm1lciBQcmltZSBNaW5pc3RlciBEYXR1ayBTZXJpIE5hamliIFJhemFrXHUyMDE5cyBjYXNlIGludm9sdmluZyBSTTQyIG1pbGxpb24gb2YgU1JDIEludGVybmF0aW9uYWwgU2RuIEJoZCBmdW5kcyB3aWxsIGNvbnRpbnVlIHRvbW9ycm93IHdpdGggaGlzIGRlZmVuY2UgdGVhbSB0byBjcm9zcy1leGFtaW5lIHRoZSBmaXJzdCB3aXRuZXNzLiAgT24gQXByaWwgMywgSGlnaCBDb3VydCBKdWRnZSBNb2hkIE5hemxhbiBNb2hkIEdoYXphbGkgc2V0IEFwcmlsIDE1IHVudGlsIE1heSAxMCB0byBjb250aW51ZSB0aGUgdHJpYWwgb2YgTmFqaWIsIHdobyBpcyBQZWthbiBNZW1iZXIgb2YgUGFybGlhbWVudC4gIFRoZSBoaWdoIHByb2ZpbGUgdHJpYWwgd291bGQgY29udGludWUgd2l0aCBjb3Vuc2VsIEhhcnZpbmRlcmppdCBTaW5naCByZXByZXNlbnRpbmcgTmFqaWIgdG8gY3Jvc3MtZXhhbWluZSB0aGUgZmlyc3Qgd2l0bmVzcywgTXVoYW1tYWQgQWttYWx1ZGluIEFiZHVsbGFoLCAzNSwgYXNzaXN0YW50IHJlZ2lzdHJhciBvZiBDb21wYW5pZXMgQ29tbWlzc2lvbiBvZiBNYWxheXNpYSAoU1NNKS4gIE9uIHRoZSBmaXJzdCBkYXkgb2YgdHJpYWwsIE11aGFtbWFkIEFrbWFsdWRpbiB0b2xkIHRoZSBjb3VydCB0aGF0IFNSQyBJbnRlcm5hdGlvbmFsIFNkbiBCaGQsIGhhZCBhIHBhaWQgY2FwaXRhbCBvZiBSTTEgbWlsbGlvbiB3aGVuIGl0IHJlZ2lzdGVyZWQgd2l0aCB0aGUgU1NNIG9uIEphbnVhcnkgNywgMjAxMSwgYW5kIGNoZWNrcyBvbiB0aGUgc2hhcmVob2xkZXJzIGFsc28gZm91bmQgdGhhdCBhbGwgb25lIG1pbGxpb24gc2hhcmVzIHdlcmUgaGVsZCBieSB0aGUgRmluYW5jZSBNaW5pc3RyeSAoSW5jb3Jwb3JhdGVkKS4gIE5hamliLCA2NiwgaXMgZmFjaW5nIHRocmVlIGNvdW50cyBvZiBjcmltaW5hbCBicmVhY2ggb2YgdHJ1c3QsIG9uZSBjaGFyZ2Ugb2YgYWJ1c2luZyBoaXMgcG9zaXRpb24gYW5kIHRocmVlIGNvdW50cyBvZiBtb25leSBsYXVuZGVyaW5nIG92ZXIgU1JDIEludGVybmF0aW9uYWwgU2RuIEJoZCBmdW5kcyBhbW91bnRpbmcgdG8gUk00MiBtaWxsaW9uLiAgSGUgaXMgYWxsZWdlZCB0byBoYXZlIGNvbW1pdHRlZCB0aGUgb2ZmZW5jZXMgYXQgQW1Jc2xhbWljIEJhbmsgQmVyaGFkIGluIEphbGFuIFJhamEgQ2h1bGFuIGFuZCB0aGUgUHJpbWUgTWluaXN0ZXJcdTIwMTlzIE9mZmljZSBpbiBQdXRyYWpheWEgYmV0d2VlbiBBdWd1c3QgMTcsIDIwMTEsIGFuZCBGZWJydWFyeSAxMCwgMjAxNS4gIE5hamliLCB3aG8gaXMgdGhlIHNpeHRoIHByaW1lIG1pbmlzdGVyIG9mIE1hbGF5c2lhLCBpcyB0aGUgZmlyc3QgdG8gZmluZCBoaW1zZWxmIGluIHRoZSBhY2N1c2VkIGRvY2suICBBdHRvcm5leS1HZW5lcmFsIFRvbW15IFRob21hcyBpbiBoaXMgb3BlbmluZyBzdGF0ZW1lbnQgb24gdGhlIGZpcnN0IGRheSBvZiB0cmlhbCwgYW1vbmcgb3RoZXJzLCBzYWlkIHRoZSBwcm9zZWN1dGlvbiB3aWxsIHByb3ZlIHRoYXQgTmFqaWIgaGFkIHVzZWQgaGlzIHBvc2l0aW9uIGFzIFByaW1lIE1pbmlzdGVyIGFuZCBNaW5pc3RlciBvZiBGaW5hbmNlIHRvIG9idGFpbiBmb3IgaGltc2VsZiBhIGdyYXRpZmljYXRpb24gb2YgUk00MiBtaWxsaW9uLiAgXHUyMDFjSXQgaXMgbXkgZHV0eSBhbmQgcHJpdmlsZWdlIG9mIG9wZW5pbmcgdGhlIGZpcnN0IHRyaWFsIGluIG91ciBjb3VydHMgYWdhaW5zdCBhIGZvcm1lciBwcmltZSBtaW5pc3RlciB3aG8sIGZvciBuZWFybHkgYSBkZWNhZGUsIG9jY3VwaWVkIHRoZSBtb3N0IHBvd2VyZnVsIG9mZmljZSBpbiB0aGUgbGFuZCBhbmQgd2llbGRlZCBuZWFyIGFic29sdXRlIHBvd2VyLiAgXHUyMDFjU3VjaCBwcml2aWxlZ2UgY2FycmllcyB3aXRoIGl0IGVub3Jtb3VzIHJlc3BvbnNpYmlsaXR5LCB3aGljaCBteSBvZmZpY2UgaW50ZW5kcyB0byBkaXNjaGFyZ2UgaW4gb3JkZXIgdG8gZXN0YWJsaXNoIHRoYXQgdGhlIGFjY3VzZWQgaXMgZ3VpbHR5IG9mIHRoZSBzZXZlbiBjaGFyZ2VzIHRoYXQgaGUgaXMgZmFjaW5nIGJlZm9yZSB5b3VyIGxvcmRzaGlwLiAgXHUyMDFjVGhlIGFjY3VzZWQgZHVyaW5nIGhpcyBlbnRpcmUgcGVyaW9kIGluIG9mZmljZSBhcyBQcmltZSBNaW5pc3RlciBvZiB3aGljaCB0aW1lIHRoZXNlIG9mZmVuY2VzIHdlcmUgY29tbWl0dGVkIHNpbXVsdGFuZW91c2x5IGhlbGQgdGhlIG9mZmljZSBvZiBNaW5pc3RlciBvZiBGaW5hbmNlLCB0aGVyZWJ5IGNvbWJpbmluZyBtYXhpbXVtIHBvbGl0aWNhbCBwb3dlciBhbmQgY29udHJvbCBvZiB0aGUgbmF0aW9uXHUyMDE5cyBwdXJzZSxcdTIwMWQgaGUgc2FpZC4gIFRob21hcyBhbHNvIHNhaWQgXHUyMDFjdGhlIG9wZXJhdGlvbiBvZiBBcnRpY2xlIDggKDEpIG9mIHRoZSBGZWRlcmFsIENvbnN0aXR1dGlvbiB0aGF0IFx1MjAxOGFsbCBwZXJzb25zIGFyZSBlcXVhbCBiZWZvcmUgdGhlIGxhd1x1MjAxOSBpcyBhbXBseSBkZW1vbnN0cmF0ZWQgYnkgdGhpcyB0cmlhbFx1MjAxZC4gIFx1MjAxY0EgZm9ybWVyIFByaW1lIE1pbmlzdGVyIGlzIGNoYXJnZWQgdW5kZXIgZHVlIHByb2Nlc3MgaW4gdGhlIG9yZGluYXJ5IGNvdXJ0IG9mIHRoZSBsYW5kLCBsaWtlIGFueSBvdGhlciBhY2N1c2VkLiBUaGUgYWNjdXNlZCBpcyBub3QgYWJvdmUgdGhlIGxhdyBhbmQgaGlzIHByb3NlY3V0aW9uIGFuZCB0aGlzIHRyaWFsIHNob3VsZCBzZXJ2ZSBhcyBwcmVjZWRlbnRzIGZvciBhbGwgZnV0dXJlIGhvbGRlcnMgb2YgdGhpcyBhdWd1c3Qgb2ZmaWNlLFx1MjAxZCBoZSBzYWlkLiAgRm9sbG93aW5nIGFyZSBhbW9uZyBvdGhlcnMga2V5IGluZ3JlZGllbnRzIGluIHRoZSBwcm9zZWN1dGlvblx1MjAxOXMgb3BlbmluZyBzdGF0ZW1lbnQgcmVhZCBvdXQgYnkgVGhvbWFzLiAgVGhlIHByb3NlY3V0aW9uIHdpbGwgYWJ1bmRhbnRseSBlc3RhYmxpc2ggdGhhdCB0aGUgYWNjdXNlZCB3YXMgZGlyZWN0bHkgaW52b2x2ZWQgaW4gdGhlIGRlY2lzaW9uIG9uIGJlaGFsZiBvZiB0aGUgR292ZXJubWVudCBvZiBNYWxheXNpYSB0byBnaXZlIGdvdmVybm1lbnQgZ3VhcmFudGVlcyBmb3IgdGhlIGxvYW5zIGFtb3VudGluZyB0byBSTTQgYmlsbGlvbiByZWNlaXZlZCBieSBTUkMgSW50ZXJuYXRpb25hbCBTZG4gQmhkIGZyb20gS3VtcHVsYW4gV2FuZyBQZXJzYXJhYW4gKERpcGVyYmFkYW5rYW4pIChcdTIwMWNLV0FQXHUyMDFkKS4gIFRoZSBldmlkZW5jZSB3aWxsIGFsc28gZXN0YWJsaXNoIHRoYXQgaW4gRGVjZW1iZXIgMjAxNCwgdGhlIGFjY3VzZWRcdTIwMTlzIGNyZWRpdCBjYXJkIHdhcyBjaGFyZ2VkIFVTJDEzMCw2MjUgKFJNNTM3LDQ1NikgZm9yIGV4cGVuc2VzIG1hZGUgYXQgQ2hhbmVsLCBhbiBleGNsdXNpdmUgZmFzaGlvbiBzdG9yZSBpbiBIb25vbHVsdS4gIFRoZSBwcm9zZWN1dGlvbiB3aWxsIHByb3ZlIHRoYXQgcGVyc29uYWwgY2hlcXVlcyB3ZXJlIGlzc3VlZCwgYW1vbmcgb3RoZXJzLCBhcyBwYXltZW50IGZvciByZW5vdmF0aW9uIHdvcmtzIGNhcnJpZWQgb3V0IGF0IHRoZSBhY2N1c2VkXHUyMDE5cyByZXNpZGVuY2UgYXQgSmFsYW4gTGFuZ2dhayBEdXRhLCBLdWFsYSBMdW1wdXIsIHRoZSBhY2N1c2VkXHUyMDE5cyByZXNpZGVuY2UgaW4gUGVrYW4sIFBhaGFuZyBhcyB3ZWxsIGFzIGNoZXF1ZXMgd2VyZSBpc3N1ZWQgdG8gdmFyaW91cyBCYXJpc2FuIE5hc2lvbmFsIGNvbXBvbmVudCBwb2xpdGljYWwgcGFydGllcy4gIEluIHByb3ZpbmcgdGhlIGluZ3JlZGllbnRzIG9uIHRoZSBjaGFyZ2Ugb2YgYWJ1c2luZyBoaXMgcG9zaXRpb24sIGV2aWRlbmNlLCBib3RoIG9yYWwsIGRvY3VtZW50YXJ5IGFuZCBjaXJjdW1zdGFudGlhbCB3b3VsZCBiZSBsZWQgYnkgdGhlIHByb3NlY3V0aW9uIHRvIGVzdGFibGlzaCB0aGUgcHJvcG9zZWQgZXN0YWJsaXNobWVudCBvZiBTUkMgSW50ZXJuYXRpb25hbCBTZG4gQmhkLCB0aGUgcHJvcG9zZWQgc2V0dGluZy11cCBvZiBhIFJNMyBiaWxsaW9uIGdyYW50LCBTUkMgSW50ZXJuYXRpb25hbFx1MjAxOXMgcmVxdWVzdCBmb3IgYSBnb3Zlcm5tZW50IGxvYW4gZm9yIFJNMy45NSBiaWxsaW9uLCBhcHBvaW50bWVudHMgb2YgU1JDIEludGVybmF0aW9uYWxcdTIwMTlzIEJvYXJkIG9mIERpcmVjdG9ycywgYW5kIG9uZSBOaWsgRmFpc2FsIEFyaWZmIEthbWlsIGFzIENFTyBvZiBTUkMgSW50ZXJuYXRpb25hbC4gIFRoZSBwcm9zZWN1dGlvbiB3aWxsIGFsc28gZXN0YWJsaXNoIG9uIG1hdHRlcnMgdGhhdCBsZWQgdG8gdGhlIGFwcHJvdmFsIG9mIHRoZSBNYWxheXNpYW4gZ292ZXJubWVudCwgdGhyb3VnaCB0aGUgTWluaXN0cnkgb2YgRmluYW5jZSwgdGhlIGlzc3VhbmNlIG9mIGEgUk0yIGJpbGxpb24gZ292ZXJubWVudCBndWFyYW50ZWUgaW4gZmF2b3VyIG9mIFNSQyBJbnRlcm5hdGlvbmFsIGFuZCBmb3IgdGhlIGlzc3VhbmNlIG9mIGEgZnVydGhlciBSTTIgYmlsbGlvbiBnb3Zlcm5tZW50IGd1YXJhbnRlZSBpbiBmYXZvdXIgb2YgdGhlIGNvbXBhbnkgKFNSQyBJbnRlcm5hdGlvbmFsKS4gIFRoZSBldmlkZW5jZSB3aWxsIGFsc28gYmUgbGVkIHJlZ2FyZGluZyBtb25pZXMgdG90YWxsaW5nIFJNNDIgbWlsbGlvbiwgc291cmNlZCBmcm9tIFNSQyBJbnRlcm5hdGlvbmFsLCB3ZXJlIGNoYW5uZWxsZWQgdGhyb3VnaCB0aGUgY29tcGFueSBhY2NvdW50cyBvZiBHYW5kaW5nYW4gTWVudGFyaSBTZG4gQmhkIChhIHdob2xseS1vd25lZCBzdWJzaWRpYXJ5IG9mIFNSQyBJbnRlcm5hdGlvbmFsIFNkbiBCaGQpIGFuZCBJaHNhbiBQZXJkYW5hIFNkbiBCaGQgKHB1cnBvcnRlZGx5IGFwcG9pbnRlZCBhcyBTUkMgSW50ZXJuYXRpb25hbFx1MjAxOXMgY29ycG9yYXRlIHNvY2lhbCByZXNwb25zaWJpbGl0eSBwYXJ0bmVyKS4gIEZvciB0aGUgY3JpbWluYWwgYnJlYWNoIG9mIHRydXN0IChDQlQpIGNoYXJnZXMsIHRoZSBwcm9zZWN1dGlvbiB3aWxsIGVzdGFibGlzaCB0aGF0IE5hamliLCBhcyBQcmltZSBNaW5pc3RlciBhbmQgTWluaXN0ZXIgb2YgRmluYW5jZSwgYW5kIEFkdmlzb3IgRW1lcml0dXMgb2YgU1JDIEludGVybmF0aW9uYWwsIHdoaWxzdCBlbnRydXN0ZWQgd2l0aCBtb25pZXMgYmVsb25naW5nIHRvIFNSQyBJbnRlcm5hdGlvbmFsLCBjb21taXR0ZWQgQ0JUIGluIHJlc3BlY3Qgb2YgdGhlIFJNMjcgbWlsbGlvbiwgUk01IG1pbGxpb24gYW5kIFJNMTAgbWlsbGlvbiBiZWxvbmdpbmcgdG8gU1JDIEludGVybmF0aW9uYWwuICBUaGUgcHJvc2VjdXRpb24gd2lsbCBhbHNvIHByb3ZpZGUgZXZpZGVuY2UgdGhhdCBOYWppYiBoYWQgZW5nYWdlZCBpbiBtb25leSBsYXVuZGVyaW5nIGJ5IHJlY2VpdmluZyBSTTQyIG1pbGxpb24sIGJlaW5nIHRoZSBwcm9jZWVkcyBvZiB1bmxhd2Z1bCBhY3Rpdml0eSwgaW4gaGlzIEFtUHJpdmF0ZSBCYW5raW5nIGFjY291bnQuICBUaGUgZXZpZGVuY2Ugd291bGQgYWxzbyBiZSBsZWQgdGhhdCBOYWppYiBoYWQgaXNzdWVkIDE1IGNoZXF1ZXMgZnJvbSBoaXMgYmFuayBhY2NvdW50IHRvdGFsbGluZyBSTTEwLDc3Niw1MTQuMDAuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MjEiLCAidGl0bGUiOiAiTmFqaWJcdTIwMTlzIHRyaWFsIGNvbnRpbnVlcyB0b21vcnJvdyB3aXRoIGRlZmVuY2UgdG8gY3Jvc3MtZXhhbWluZSBmaXJzdCB3aXRuZXNzIHwgTWFsYXkgTWFpbCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkNvbmZpc2NhdGUgcHJvcGVydHkiLCAiYXJyZXN0IiwgImRldGFpbiIsICJtb25pdG9yIiwgIm9wZXJhdGlvbiIsICJ0YXJnZXQiXSwgImNvdW50cmllcyI6IFsiUEhJTElQUElORVMiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjExIiwgIjEyMy41Il1dLCAic291cmNlIjogImh0dHBzOi8vY2VidWRhaWx5bmV3cy5pbnF1aXJlci5uZXQvMjI4MzY2L3A0LTVtLXNoYWJ1LXNlaXplZC00LXBlcnNvbnMtbmFiYmVkLWluLXdlZWtlbmQtZHJ1Zy1idXN0cy1pbi1jZWJ1LWNpdHkiLCAiY29udGVudCI6ICJDRUJVIENJVFksIFBoaWxpcHBpbmVzIFx1MjAxNCBUd28gc2VwYXJhdGUgYW50aS1pbGxlZ2FsIGRydWcgb3BlcmF0aW9ucyBpbiBhIHNwYW4gb2YgZWlnaHQgaG91cnMgb3ZlciB0aGUgd2Vla2VuZCBpbiBDZWJ1IENpdHkgeWllbGRlZCBQNC41IG1pbGxpb24gb2Ygc3VzcGVjdGVkIHNoYWJ1IGFuZCBuZXR0ZWQgZm91ciBwZXJzb25zLCBvbmUgb2Ygd2hvbSB3YXMgY29uc2lkZXJlZCBieSB0aGUgcG9saWNlIGFzIGEgaGlnaCB2YWx1ZSB0YXJnZXQuICBBdCBwYXN0IDggcC5tLiBvbiBTYXR1cmRheSwgQXByaWwgMTMsIGluIEJhcmFuZ2F5IFNhbiBOaWNvbGFzLCBwb2xpY2UgYXJyZXN0ZWQgQXJub2xkIFJlc3VyZWN0aW9uLCBhIHJlc2lkZW50IG9mIHRoZSBiYXJhbmdheSwgYWZ0ZXIgaGUgd2FzIGNhdWdodCB3aXRoIGhhbGYgYSBraWxvIG9mIHN1c3BlY3RlZCBzaGFidSBkdXJpbmcgYSBidXktYnVzdCBvcGVyYXRpb24sIHNhaWQgTGlldXRlbmFudCBDb2xvbmVsIEdsZW5uIE1heWFtLCBQaGlsaXBwaW5lIERydWcgRW5mb3JjZW1lbnQgR3JvdXAgVmlzYXlhcyBjaGllZiwgZHVyaW5nIGFuIGludGVydmlldyB3aXRoIENETiBEaWdpdGFsLiAgTWF5YW0gc2FpZCB0aGF0IHRoZSBzaXggbGFyZ2UgcGFja3Mgb2Ygc3VzcGVjdGVkIHNoYWJ1IGNvbmZpc2NhdGVkIGZyb20gUmVzdXJlY3Rpb24gaGFkIGFuIGVzdGltYXRlZCBEYW5nZXJvdXMgRHJ1Z3MgQm9hcmQgdmFsdWUgb2YgUDMuNCBtaWxsaW9uLiAgSGUgc2FpZCB0aGF0IHRoZXkgaGFkIG1vbml0b3JlZCB0aGUgc3VzcGVjdCBmb3IgdGhyZWUgd2Vla3MgYWZ0ZXIgdGhleSBnb3QgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGhpcyBpbGxlZ2FsIGFjdGl2aXRpZXMgZnJvbSBhIHN1c3BlY3RlZCBkcnVnIGNvdXJpZXIgaW4gb25lIG9mIHRoZWlyIGFudGktaWxsZWdhbCBkcnVnIG9wZXJhdGlvbnMgaW4gdGhlIHBhc3QgbW9udGguICBIZSBzYWlkIHRoYXQgdGhleSBsZWFybmVkIHRoYXQgdGhlIHN1c3BlY3Qgd2FzIGFsbGVnZWRseSBhIGRydWcgdXNlciwgYSBkcnVnIGNvdXJpZXIgYW5kIHdhcyBhbGxlZ2VkbHkgbGlua2VkIHRvIGEgZ3JvdXAgaGVhZGVkIGJ5IGEgZHJ1ZyBsb3JkIG9wZXJhdGluZyB3aXRoaW4gdGhlIGNpdHkuICBNYXlhbSwgaG93ZXZlciwgcmVmdXNlZCB0byBuYW1lIHRoZSBzdXNwZWN0ZWQgZHJ1ZyBsb3JkIHRoYXQgUmVzdXJlY3Rpb24gd2FzIGxpbmtlZCB0by4gIFJlc3VyZWN0aW9uIHdhcyBkZXRhaW5lZCBhdCB0aGUgQWJlbGxhbmEgUG9saWNlIFByZWNpbmN0IGRldGVudGlvbiBjZWxsIHBlbmRpbmcgdGhlIGZpbGluZyBvZiBjaGFyZ2VzLiAgQXQgcGFzdCA0IGEubS4gb24gU3VuZGF5LCBBcHJpbCAxNCwgdGhyZWUgcGVyc29ucyB3ZXJlIGFycmVzdGVkIGluY2x1ZGluZyBvbmUsIHdob20gcG9saWNlIGNvbnNpZGVyZWQgYSBoaWdoIHZhbHVlIHRhcmdldCBpbiBhIGJ1eS1idXN0IG9wZXJhdGlvbiBpbiBhIHJlbnRlZCBhcGFydG1lbnQgaW4gYSBzdWJkaXZpc2lvbiBpbiBCYXJhbmdheSBCdWxhY2FvLCBDZWJ1IENpdHkuICBBcmNoaWUgQWJlbGxhbmEgYWxzbyBrbm93biBhcyBBcmNoaWUgQmF5b3QsIDM5LCBvZiBCYXJhbmdheSBTdWJhIGluIENlYnUgQ2l0eTsgTWFyam9yeSBBcnJpZXNnYWRvLCAzMywgb2YgU2l0aW8gQ2Fib3RveSwgQmFyYW5nYXkgUG9vYyBpbiBUYWxpc2F5IENpdHk7IGFuZCBMZW5kb24gR29uemFnYSwgMzcsIG9mIEJhcmFuZ2F5IEJ1bGFjYW8gaW4gQ2VidSBDaXR5OyB3ZXJlIGFycmVzdGVkIGFmdGVyIHRoZXkgd2VyZSBjYXVnaHQgd2l0aCBQMS4xIG1pbGxpb24gd29ydGggb2Ygc3VzcGVjdGVkIHNoYWJ1LCBzYWlkIFBvbGljZSBNYWpvciBSZWdpbm8gTWFyYW1hZywgUGFyZG8gUG9saWNlIFByZWNpbmN0IGNoaWVmLCBpbiBhIHNlcGFyYXRlIGludGVydmlldyB3aXRoIENETiBEaWdpdGFsLiAgTWFyYW1hZyBzYWlkIHRoYXQgQWJlbGxhbmEsIGFsbGVnZWRseSB3YXMgdGhlIGhlYWQgb2YgYSBkcnVnIHN5bmRpY2F0ZSBhbmQgd2hvIGhhZCBiZWVuIGluIGFuZCBvdXQgb2YgamFpbCB3aGlsZSBoaXMgdHdvIGFsbGVnZWQgY29ob3J0cywgQXJyaWVzZ2FkbyBhbmQgR29uemFnYSB3ZXJlIGFsbGVnZWRseSBBYmVsbGFuYVx1MjAxOXMgdHJ1c3RlZCBhaWRlcyBhbmQgY291cmllcnMuICBIZSBzYWlkIHRoYXQgdGhleSBjb25maXNjYXRlZCAxNjguMTQgZ3JhbXMgb2Ygc3VzcGVjdGVkIHNoYWJ1IGZyb20gdGhlIHN1c3BlY3RzIHdoaWNoIGhhZCBhbiBlc3RpbWF0ZWQgRERCIHZhbHVlIG9mIFAxLjEgbWlsbGlvbi4gIFRoZSBzdXNwZWN0cyB3ZXJlIGRldGFpbmVkIGF0IHRoZSBQYXJkbyBQb2xpY2UgUHJlY2luY3QgZGV0ZW50aW9uIGNlbGwgcGVuZGluZyB0aGUgZmlsaW5nIG9mIGNoYXJnZXMuL2RicyIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjIxIiwgInRpdGxlIjogIlA0LjVNIHNoYWJ1IHNlaXplZDsgNCBwZXJzb25zIG5hYmJlZCBpbiB3ZWVrZW5kIGRydWcgYnVzdHMgaW4gQ2VidSBDaXR5In0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiSG9zdCBhIHZpc2l0IiwgIiBjaGVtaWNhbCAiLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIkFVU1RSQUxJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siLTIyLjczMzMiLCAiMTQ5LjQ1Il1dLCAic291cmNlIjogImh0dHA6Ly93d3cuZ2VvbG9neXBhZ2UuY29tLzIwMTkvMDQvd2hlcmUtd2FzLXRoZS1tb3N0LWdvbGQtZm91bmQtaW4tdGhlLXVuaXRlZC1zdGF0ZXMuaHRtbCIsICJjb250ZW50IjogIkdvbGQgaXMgYSBjaGVtaWNhbCBlbGVtZW50IHdpdGggc3ltYm9sIEF1IGFuZCBhdG9taWMgbnVtYmVyIDc5LCBtYWtpbmcgaXQgb25lIG9mIHRoZSBoaWdoZXIgYXRvbWljIG51bWJlciBlbGVtZW50cyB0aGF0IG9jY3VyIG5hdHVyYWxseS4gSW4gaXRzIHB1cmVzdCBmb3JtLCBpdCBpcyBhIGJyaWdodCwgc2xpZ2h0bHkgcmVkZGlzaCB5ZWxsb3csIGRlbnNlLCBzb2Z0LCBtYWxsZWFibGUsIGFuZCBkdWN0aWxlIG1ldGFsLiBDaGVtaWNhbGx5LCBnb2xkIGlzIGEgdHJhbnNpdGlvbiBtZXRhbCBhbmQgYSBncm91cCAxMSBlbGVtZW50LiAgV2hlcmUgdG8gRmluZCBHb2xkIGluIHRoZSBVbml0ZWQgU3RhdGVzPyAgR29sZCB3YXMgZGlzY292ZXJlZCBpbiBBbGFiYW1hIGFib3V0IDE4MzAsIHNob3J0bHkgZm9sbG93aW5nIHRoZSBHZW9yZ2lhIEdvbGQgUnVzaC4gVGhlIHByaW5jaXBhbCBkaXN0cmljdHMgd2VyZSB0aGUgQXJiYWNvb2NoZWUgZGlzdHJpY3QgaW4gQ2xlYnVybmUgQ291bnR5LCBtb3N0bHkgZnJvbSBwbGFjZXIgZGVwb3NpdHMsIGFuZCB0aGUgSG9nIE1vdW50YWluIGRpc3RyaWN0IGluIFRhbGxhcG9vc2EgQ291bnR5LCB3aGljaCBwcm9kdWNlZCAyNCwwMDAgdHJveSBvdW5jZXMgKDc1MCBrZykgZnJvbSB2ZWlucyBpbiBzY2hpc3QuICBSdXNzaWFuIGV4cGxvcmVycyBkaXNjb3ZlcmVkIHBsYWNlciBnb2xkIGluIHRoZSBLZW5haSBSaXZlciBpbiAxODQ4LCBidXQgbm8gZ29sZCB3YXMgcHJvZHVjZWQuIEdvbGQgbWluaW5nIHN0YXJ0ZWQgaW4gMTg3MCBmcm9tIHBsYWNlcnMgc291dGhlYXN0IG9mIEp1bmVhdS4gQWxhc2thIHByb2R1Y2VkIGEgdG90YWwgb2YgNDAsMzAwLDAwMCB0cm95IG91bmNlcyAoMSwyNTAsMDAwIGtnKSBvZiBnb2xkIGZyb20gMTg4MCB0aHJvdWdoIHRoZSBlbmQgb2YgMjAwNy4gSW4gMjAxNSBBbGFza2FuIG1pbmVzIHByb2R1Y2VkIDg3Myw5ODQgdHJveSBvdW5jZXMgKDI3LDE4My45IGtnKSBvZiBnb2xkLCAxMi43JSBvZiBVUyBwcm9kdWN0aW9uLiBUaGUgbGFyZ2VzdCBnb2xkIHByb2R1Y2VyIGlzIHRoZSBGb3J0IEtub3ggbWluZSwgYSBsYXJnZSBvcGVuIHBpdCBhbmQgY3lhbmlkZSBsZWFjaGluZyBvcGVyYXRpb24gaW4gdGhlIEZhaXJiYW5rcyBtaW5pbmcgZGlzdHJpY3QuICBBcml6b25hIGhhcyBwcm9kdWNlZCBtb3JlIHRoYW4gMTYgbWlsbGlvbiB0cm95IG91bmNlcyAoNDk4IHRvbm5lcykgb2YgZ29sZC4gIEdvbGQgbWluaW5nIGluIEFyaXpvbmEgcmVwb3J0ZWRseSBiZWdhbiBpbiAxNzc0IHdoZW4gU3BhbmlzaCBwcmllc3QgTWFudWVsIExvcGV6IGRpcmVjdGVkIFBhcGFnbyBJbmRpYW5zIHRvIHdhc2ggZ29sZCBmcm9tIGdyYXZlbCBvbiB0aGUgZmxhbmtzIG9mIHRoZSBRdWlqb3RvYSBNb3VudGFpbnMsIFBpbWEgQ291bnR5LiBHb2xkIG1pbmluZyBjb250aW51ZWQgdGhlcmUgdW50aWwgMTg0OSwgd2hlbiB0aGUgTWV4aWNhbiBtaW5lcnMgd2VyZSBsdXJlZCBhd2F5IGJ5IHRoZSBDYWxpZm9ybmlhIEdvbGQgUnVzaC4gT3RoZXIgZ29sZCBtaW5pbmcgdW5kZXIgU3BhbmlzaCBhbmQgTWV4aWNhbiBydWxlIHRvb2sgcGxhY2UgaW4gdGhlIE9ybyBCbGFuY28gZGlzdHJpY3Qgb2YgU2FudGEgQ3J1eiBDb3VudHksIGFuZCB0aGUgQXJpdmFjYSBkaXN0cmljdCwgUGltYSBDb3VudHkuICBNb3VudGFpbiBtYW4gUGF1bGluZSBXZWF2ZXIgZGlzY292ZXJlZCBwbGFjZXIgZ29sZCBvbiB0aGUgZWFzdCBzaWRlIG9mIHRoZSBDb2xvcmFkbyBSaXZlciBpbiAxODYyLiBXZWF2ZXJcdTIwMTlzIGRpc2NvdmVyeSBzdGFydGVkIHRoZSBDb2xvcmFkbyBSaXZlciBHb2xkIFJ1c2ggdG8gdGhlIG5vdyBnaG9zdCB0b3duIG9mIExhIFBheiwgQXJpem9uYSBhbmQgb3RoZXIgbG9jYXRpb25zIGFsb25nIHRoZSByaXZlciBpbiB0aGUgZW5zdWluZyB5ZWFycy4gIFNwYW5pc2ggcHJvc3BlY3RvcnMgZm91bmQgZ29sZCBpbiB0aGUgUG90aG9sZXMgZGlzdHJpY3QgYmV0d2VlbiAxNzc1IGFuZCAxNzgwLCBhbG9uZyB0aGUgQ29sb3JhZG8gUml2ZXIsIGluIHByZXNlbnQgSW1wZXJpYWwgQ291bnR5LCBDYWxpZm9ybmlhLCBhYm91dCB0ZW4gbWlsZXMgbm9ydGhlYXN0IGZyb20gWXVtYSwgQXJpem9uYS4gVGhlIGdvbGQgd2FzIHJlY292ZXJlZCBmcm9tIGRyeSBwbGFjZXJzLiBPdGhlciBwbGFjZXIgZGVwb3NpdHMgb24gdGhlIHdlc3QgYmFuayBvZiB0aGUgQ29sb3JhZG8gUml2ZXIgd2VyZSBxdWlja2x5IGZvdW5kLCBpbmNsdWRpbmcgdGhlIFBpY2FjaG8gYW5kIENhcmdvIE11Y2hhY2hvIGRpc3RyaWN0cy4gIFBsYWNlciBnb2xkIGRlcG9zaXRzIHdlcmUgZm91bmQgYXQgU2FuIFlzaWRybyBpbiBTYW4gRGllZ28gQ291bnR5IGluIDE4MjgsIFNhbiBGcmFuY2lzcXVpdG8gQ2FueW9uIGFuZCBQbGFjZXJpdGEgQ2FueW9uIGluIExvcyBBbmdlbGVzIENvdW50eSBpbiAxODM1IGFuZCAxODQyLCByZXNwZWN0aXZlbHkgIE1ham9yIGdvbGQgbWluaW5nIGluIENhbGlmb3JuaWEgYmVnYW4gZHVyaW5nIHRoZSBDYWxpZm9ybmlhIEdvbGQgUnVzaC4gR29sZCB3YXMgZm91bmQgYnkgSmFtZXMgTWFyc2hhbGwgYXQgU3V0dGVycyBNaWxsLCBwcm9wZXJ0eSBvZiBKb2huIFN1dHRlciwgaW4gcHJlc2VudC1kYXkgQ29sb21hLiBJbiAxODQ5LCBwZW9wbGUgc3RhcnRlZCBoZWFyaW5nIGFib3V0IHRoZSBnb2xkIGFuZCBhZnRlciBqdXN0IGEgZmV3IHllYXJzIFNhbiBGcmFuY2lzY29cdTIwMTlzIHBvcHVsYXRpb24gaW5jcmVhc2VkIHRvIHRob3VzYW5kcy4gIEdvbGQgd2FzIGRpc2NvdmVyZWQgaW4gMTg1OCBkdXJpbmcgdGhlIFBpa2VcdTIwMTlzIFBlYWsgR29sZCBSdXNoIGluIHRoZSB2aWNpbml0eSBvZiBwcmVzZW50LWRheSBEZW52ZXIgaW4gMTg1OCwgYnV0IHRoZSBkZXBvc2l0cyB3ZXJlIHNtYWxsLiBUaGUgZmlyc3QgaW1wb3J0YW50IGdvbGQgZGlzY292ZXJpZXMgaW4gQ29sb3JhZG8gd2VyZSBpbiB0aGUgQ2VudHJhbCBDaXR5LUlkYWhvIFNwcmluZ3MgZGlzdHJpY3QgaW4gSmFudWFyeSAxODU5LiBPbmx5IG9uZSBDb2xvcmFkbyBtaW5lIGNvbnRpbnVlcyB0byBwcm9kdWNlIGdvbGQsIHRoZSBDcmlwcGxlIENyZWVrICYgVmljdG9yIEdvbGQgTWluZSBhdCBWaWN0b3IgbmVhciBDb2xvcmFkbyBTcHJpbmdzLCBhbiBvcGVuLXBpdCBoZWFwIGxlYWNoIG9wZXJhdGlvbiBvd25lZCBieSBOZXdtb250IE1pbmluZyBDb3Jwb3JhdGlvbiwgd2hpY2ggcHJvZHVjZWQgMzYwLDAwMCB0cm95IG91bmNlcyAoMTEsMDAwIGtnKSBvZiBnb2xkIGluIDIwMTguICBTbWFsbCBhbW91bnRzIG9mIGdvbGQgd2VyZSBtaW5lZCBjb21tZXJjaWFsbHkgaW4gTm9ydGggRWFzdGVybiBGbG9yaWRhIGR1cmluZyB0aGUgbGF0ZSAxOXRoIENlbnR1cnksIGF0IHRoZSBzaXRlIHdoZXJlIE1pa2UgUm9lc3MgR29sZCBIZWFkIEJyYW5jaCBTdGF0ZSBQYXJrIGlzIGxvY2F0ZWQgdG9kYXkuIE5vIHJlY29yZHMgYXJlIGV4dGFudCBvbiB0aGUgYW1vdW50IG9mIGdvbGQgcHJvZHVjZWQsIGJ1dCB0aGUgZmluZCB3YXMgaW5zdWZmaWNpZW50IHRvIGtlZXAgdGhlIG9wZXJhdGlvbiBydW5uaW5nIGNvbW1lcmNpYWxseSwgYW5kIHRoZSBzbWFsbCBhbW91bnQgb2YgcGF5IGRpcnQgd2FzIGRlcGxldGVkIHdpdGhpbiBhIG1hdHRlciBvZiBtb250aHMuICBHZW9yZ2lhIGlzIGNyZWRpdGVkIHdpdGggYSB0b3RhbCBoaXN0b3JpY2FsIHByb2R1Y3Rpb24gb2YgODcxLDAwMCB0cm95IG91bmNlcyAoMjcsMTAwIGtnKSBvZiBnb2xkIGZyb20gMTgzMCB0aHJvdWdoIDE5NTkuIEFsdGhvdWdoIGhpc3RvcmljYWxseSBpbXBvcnRhbnQsIHRoZSBzdGF0ZSBpcyBub3QgY3VycmVudGx5IGEgZ29sZCBwcm9kdWNlci4gIEdvbGQgd2FzIGZpcnN0IGRpc2NvdmVyZWQgaW4gSWRhaG8gaW4gMTg2MCwgaW4gUGllcmNlIGF0IHRoZSBqdW5jdHVyZSB3aGVyZSBDYW5hbCBDcmVlayBtZWV0cyBPcm9maW5vIENyZWVrLiAgVGhlIGxlYWRpbmcgaGlzdG9yaWNhbCBnb2xkLXByb2R1Y2luZyBkaXN0cmljdCBpcyB0aGUgQm9pc2UgQmFzaW4gaW4gQm9pc2UgQ291bnR5LCB3aGljaCB3YXMgZGlzY292ZXJlZCBpbiAxODYyIGFuZCBwcm9kdWNlZCAyLjkgbWlsbGlvbiB0cm95IG91bmNlcyAoOTAuMiB0b25uZXMpLCBtb3N0bHkgZnJvbSBwbGFjZXJzLiAgVGhlIEZyZW5jaCBDcmVlay1GbG9yZW5jZSBkaXN0cmljdCBpbiBJZGFobyBDb3VudHkgYmVnYW4gaW4gdGhlIDE4NjBzLCBhbmQgaGFzIHByb2R1Y2VkIGFib3V0IDEgbWlsbGlvbiB0cm95IG91bmNlcyAoMzEgdG9ubmVzKSBmcm9tIHBsYWNlcnMuICBUaGUgU2lsdmVyIENpdHkgZGlzdHJpY3QgaW4gT3d5aGVlIENvdW50eSBiZWdhbiBwcm9kdWNpbmcgaW4gMTg2MywgYW5kIG1hZGUgb3ZlciAxIG1pbGxpb24gdHJveSBvdW5jZXMgKDMxIHRvbm5lcyksIG1vc3RseSBmcm9tIGxvZGUgZGVwb3NpdHMuICBUaGUgQ29ldXIgZFx1MjAxOUFsZW5lIGRpc3RyaWN0IGluIFNob3Nob25lIENvdW50eSBoYXMgbWFkZSA0NCwwMDAgdHJveSBvdW5jZXMgKDEsNDAwIGtnKSBvZiBnb2xkIGFzIGJ5cHJvZHVjdCB0byBzaWx2ZXIgbWluaW5nLiAgSW4gMjAwNiwgYWN0aXZlIGdvbGQgbWluZXMgaW4gSWRhaG8gaW5jbHVkZWQgdGhlIFNpbHZlciBTdHJhbmQgbWluZSBhbmQgdGhlIEJvbmQgbWluZS4gIEdvbGQgd2FzIHJlcG9ydGVkIGluIE1hcnlsYW5kIGFzIGVhcmx5IGFzIDE4MzAsIGJ1dCBubyBwcm9kdWN0aW9uIHJlc3VsdGVkLiBQbGFjZXIgZ29sZCB3YXMgZGlzY292ZXJlZCBhdCBHcmVhdCBGYWxscyBuZWFyIFdhc2hpbmd0b24sIERDIGluIDE4NjEgZHVyaW5nIHRoZSBBbWVyaWNhbiBDaXZpbCBXYXIgYnkgVW5pb24gc29sZGllcnMgZnJvbSBDYWxpZm9ybmlhLiBBZnRlciB0aGUgd2FyIGEgbnVtYmVyIG9mIG1pbmVzIHdlcmUgb3BlbmVkIG9uIGdvbGQtYmVhcmluZyBxdWFydHogdmVpbnMgaW4gTW9udGdvbWVyeSBDb3VudHkuIE5vIGdvbGQgcHJvZHVjdGlvbiBoYXMgYmVlbiByZXBvcnRlZCBzaW5jZSAxOTUxLiBUb3RhbCBwcm9kdWN0aW9uIHdhcyBhYm91dCA2LDAwMCB0cm95IG91bmNlcyAoMTkwIGtnKS4gIEFwcHJveGltYXRlbHkgMjksMDAwIHRyb3kgb3VuY2VzICg5MDAga2cpIG9mIGdvbGQgd2VyZSBwcm9kdWNlZCBmcm9tIHRoZSBSb3BlcyBnb2xkIG1pbmUgbm9ydGhlYXN0IG9mIElzaHBlbWluZyBpbiBNYXJxdWV0dGUgQ291bnR5LCBNaWNoaWdhbi4gVGhlIHVuZGVyZ3JvdW5kIG1pbmUsIG9yaWdpbmFsbHkgb3BlcmF0ZWQgZnJvbSAxODgwIHRvIDE4OTcsIGFuZCByZW9wZW5lZCBmcm9tIDE5ODNcdTIwMTMxOTg5LCBleHRyYWN0ZWQgZ29sZCBmcm9tIHF1YXJ0eiB2ZWlucyBpbiBwZXJpZG90aXRlLiAgR29sZCB3YXMgZmlyc3QgZGlzY292ZXJlZCBpbiBNb250YW5hIGluIDE4NTIsIGJ1dCBtaW5pbmcgZGlkIG5vdCBiZWdpbiB1bnRpbCAxODYyLCB3aGVuIGdvbGQgcGxhY2VycyB3ZXJlIGRpc2NvdmVyZWQgYXQgQmFubmFjaywgTW9udGFuYSBpbiAxODYyLiBUaGUgcmVzdWx0aW5nIGdvbGQgcnVzaCByZXN1bHRlZCBpbiBtb3JlIHBsYWNlciBkaXNjb3ZlcmllcywgaW5jbHVkaW5nIHRob3NlIGF0IFZpcmdpbmlhIENpdHkgaW4gMTg2MywgYW5kIGF0IEhlbGVuYSBhbmQgQnV0dGUgaW4gMTg2NC4gSW4gMTg2NywgdGhlIEF0bGFudGljIENhYmxlIFF1YXJ0eiBMb2RlIHdhcyBsb2NhdGVkLiAgVGhlIEJ1dHRlIGRpc3RyaWN0LCBhbHRob3VnaCBtaW5lZCBwcmltYXJpbHkgZm9yIGNvcHBlciwgcHJvZHVjZWQgMi45IG1pbGxpb24gb3VuY2VzICg5MSB0b25lcykgb2YgZ29sZCB0aHJvdWdoIDE5OTAsIGFsbW9zdCBhbGwgYXMgYSBieXByb2R1Y3Qgb2YgY29wcGVyIHByb2R1Y3Rpb24uICBDdXJyZW50IGFjdGl2ZSBoYXJkcm9jayBnb2xkIG1pbmVzIGluY2x1ZGUgdGhlIE1vbnRhbmEgVHVubmVscyBtaW5lLCBhbmQgdGhlIEdvbGRlbiBTdW5saWdodCBtaW5lLiBBY3RpdmUgZ29sZCBwbGFjZXJzIGluY2x1ZGUgdGhlIEJyb3ducyBHdWxjaCBwbGFjZXIgYW5kIHRoZSBDb25mZWRlcmF0ZSBHdWxjaCBwbGFjZXIuIEdvbGQgaXMgYWxzbyBwcm9kdWNlZCBmcm9tIHRocmVlIHBsYXRpbnVtIG1pbmVzIGluIHRoZSBTdGlsbHdhdGVyIGlnbmVvdXMgY29tcGxleDogdGhlIFN0aWxsd2F0ZXIgbWluZSwgdGhlIExvZGVzdGFyIG1pbmUsIGFuZCB0aGUgRWFzdCBCb3VsZGVyIFByb2plY3QuICBOZXZhZGEgaXMgdGhlIGxlYWRpbmcgZ29sZC1wcm9kdWNpbmcgc3RhdGUgaW4gdGhlIG5hdGlvbiwgaW4gMjAxNiBwcm9kdWNpbmcgNSw0NjcsNjQ2IHRyb3kgb3VuY2VzICgxNzAuMDYgdG9ubmVzKSwgcmVwcmVzZW50aW5nIDgxJSBvZiBVUyBnb2xkIGFuZCA1LjUlIG9mIHRoZSB3b3JsZFx1MjAxOXMgcHJvZHVjdGlvbi4gTXVjaCBvZiB0aGUgZ29sZCBpbiBOZXZhZGEgY29tZXMgZnJvbSBsYXJnZSBvcGVuIHBpdCBtaW5pbmcgYW5kIHdpdGggaGVhcCBsZWFjaGluZyByZWNvdmVyeS4gU29tZSBvZiB0aGUgd29ybGRcdTIwMTlzIG1ham9yIG1pbmluZyBjb21wYW5pZXMsIGluY2x1ZGluZyBOZXdtb250IE1pbmluZywgQmFycmljayBHb2xkIGFuZCBLaW5yb3NzIEdvbGQsIG9wZXJhdGUgZ29sZCBtaW5lcyBpbiB0aGUgc3RhdGUuIEFjdGl2ZSBtYWpvciBtaW5lcyBpbmNsdWRlIENvcnRleiwgVHdpbiBDcmVla3MsIEJldHotUG9zdCwgTWVpa2xlLCBNYXJpZ29sZCwgUm91bmQgTW91bnRhaW4sIEplcnJpdHQgQ2FueW9uIGFuZCBHZXRjaGVsbC4gIE5ld21vbnQgYW5kIEJhcnJpY2sgb3BlcmF0ZSB0aGUgbGFyZ2VzdCBtaW5pbmcgb3BlcmF0aW9ucywgb24gdGhlIHByb2xpZmljIENhcmxpbiBUcmVuZCwgb25lIG9mIHRoZSB3b3JsZFx1MjAxOXMgcmljaGVzdCBtaW5pbmcgZGlzdHJpY3RzLiAgR29sZCB3YXMgZmlyc3QgZGlzY292ZXJlZCBpbiBOZXcgTWV4aWNvIGluIDE4MjggaW4gdGhlIFx1MjAxY09sZCBQbGFjZXJzXHUyMDFkIGRpc3RyaWN0IGluIHRoZSBPcnRpeiBNb3VudGFpbnMsIFNhbnRhIEZlIENvdW50eSwgTmV3IE1leGljby4gVGhlIHBsYWNlciBnb2xkIGRpc2NvdmVyeSB3YXMgZm9sbG93ZWQgYnkgZGlzY292ZXJ5IG9mIGEgbmVhcmJ5IGxvZGUgZGVwb3NpdC4gIEluIDE4NzcsIHR3byBwcm9zcGVjdG9ycyBjb2xsZWN0ZWQgZmxvYXQgaW4gdGhlIGFyZWEgb2YgdGhlIGZ1dHVyZSBPcHBvcnR1bml0eSBNaW5lIG5lYXIgSGlsbHNib3JvLCBOZXcgTWV4aWNvLCB3aGljaCB3YXMgYXNzYXllZCBhdCAkMTYwIHBlciB0b24gaW4gZ29sZCBhbmQgc2lsdmVyLiBTb29uLCBvcmUgd2FzIGRpc2NvdmVyZWQgYXQgdGhlIG5lYXJieSBSYXR0bGVzbmFrZSB2ZWluIGFuZCBhIHBsYWNlciBkZXBvc2l0IG9mIGdvbGQgd2FzIGZvdW5kIGluIE5vdmVtYmVyIGF0IHRoZSBSYXR0bGVzbmFrZSBhbmQgV2lja3MgZ3VsY2hlcy4gVG90YWwgcHJvZHVjdGlvbiBwcmlvciB0byAxOTA0IHdhcyBhYm91dCAkNiw3NTAsMDAwLiAgSW4gMjAwNyBhbGwgZ29sZCBwcm9kdWN0aW9uIGluIE5ldyBNZXhpY28gKDEzLDAwMCB0cm95IG91bmNlcyAoNDAwIGtnKSkgY2FtZSBhcyBhIGJ5cHJvZHVjdCBvZiBjb3BwZXIgbWluaW5nIGZyb20gdHdvIGxhcmdlIG9wZW4gcGl0IG1pbmVzIGluIEdyYW50IENvdW50eS4gSG93ZXZlciwgdHdvIHByaW1hcnkgZ29sZCBtaW5lcyBhcmUgYmVpbmcgcmVhZGllZCBmb3IgcHJvZHVjdGlvbjogdGhlIE5vcnRoc3RhciBtaW5lIGluIFJpbyBBcnJpYmEgQ291bnR5LCBhbmQgdGhlIFNhbiBMb3JlbnpvIENsYWltcyBtaW5lIGluIFNvY29ycm8gQ291bnR5LiAgTm9ydGggQ2Fyb2xpbmEgd2FzIHRoZSBzaXRlIG9mIHRoZSBmaXJzdCBnb2xkIHJ1c2ggaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIGZvbGxvd2luZyB0aGUgZGlzY292ZXJ5IG9mIGEgMTctcG91bmQgKDcuNyBrZykgZ29sZCBudWdnZXQgYnkgMTIteWVhci1vbGQgQ29ucmFkIFJlZWQgaW4gYSBjcmVlayBhdCBoaXMgZmF0aGVyXHUyMDE5cyBmYXJtIGluIDE3OTkuIFRoZSBSZWVkIEdvbGQgTWluZSwgc291dGh3ZXN0IG9mIEdlb3JnZXZpbGxlIGluIENhYmFycnVzIENvdW50eSwgTm9ydGggQ2Fyb2xpbmEgcHJvZHVjZWQgYWJvdXQgNTAsMDAwIHRyb3kgb3VuY2VzICgxLDYwMCBrZykgb2YgZ29sZCBmcm9tIGxvZGUgYW5kIHBsYWNlciBkZXBvc2l0cy4gIEdvbGQgd2FzIHByb2R1Y2VkIGZyb20gMTUgZGlzdHJpY3RzLCBhbG1vc3QgYWxsIGluIHRoZSBQaWVkbW9udCByZWdpb24gb2YgdGhlIHN0YXRlLiBUb3RhbCBnb2xkIHByb2R1Y3Rpb24gaXMgZXN0aW1hdGVkIGF0IDEuMiBtaWxsaW9uIHRyb3kgb3VuY2VzICgzNy4zIHRvbm5lcykuICBBbHRob3VnaCBnb2xkIG1pbmVzIGFyZSBzcHJlYWQgb3ZlciBtdWNoIG9mIE9yZWdvbiwgYWxtb3N0IGFsbCBvZiB0aGUgZ29sZCBwcm9kdWNlZCBoYXMgY29tZSBmcm9tIHR3byBwcmluY2lwYWwgYXJlYXM6IHRoZSBLbGFtYXRoIE1vdW50YWlucyBpbiBzb3V0aHdlc3QgT3JlZ29uLCBpbmNsdWRpbmcgQ29vcywgQ3VycnksIERvdWdsYXMsIEphY2tzb24gYW5kIEpvc2VwaGluZSBjb3VudGllczsgYW5kIHRoZSBCbHVlIE1vdW50YWlucyBpbiBub3J0aGVhc3QgT3JlZ29uLCBtb3N0bHkgaW4gQmFrZXIgYW5kIEdyYW50IGNvdW50aWVzLiAgUHJvc3BlY3RvcnMgZnJvbSBJbGxpbm9pcyBkaXNjb3ZlcmVkIHBsYWNlciBnb2xkIGluIHRoZSBLbGFtYXRoIE1vdW50YWlucyBvZiBzb3V0aHdlc3QgT3JlZ29uIGluIDE4NTAsIHN0YXJ0aW5nIGEgcnVzaCB0byB0aGUgYXJlYS4gTG9kZSBnb2xkIGRlcG9zaXRzIHdlcmUgYWxzbyBkaXNjb3ZlcmVkLiAgVHJhdmVsbGVycyBhbG9uZyB0aGUgT3JlZ29uIFRyYWlsIGJvdW5kIGZvciB0aGUgV2lsbGFtZXR0ZSBWYWxsZXkgYXJlIHNhaWQgdG8gaGF2ZSBkaXNjb3ZlcmVkIGdvbGQgaW4gbm9ydGhlYXN0ZXJuIE9yZWdvbiBpbiAxODQ1LCBidXQgbWluaW5nIGluIGVhcm5lc3QgZGlkIG5vdCBiZWdpbiB1bnRpbCAxODYxLiAgQWJvdXQgMzcsMDAwIHRyb3kgb3VuY2VzICgxLDIwMCBrZykgb2YgZ29sZCB3YXMgcHJvZHVjZWQgZnJvbSB0aGUgQ29ybndhbGwgaXJvbiBtaW5lIGZpdmUgbWlsZXMgc291dGggb2YgTGViYW5vbiwgTGViYW5vbiBDb3VudHksIFBlbm5zeWx2YW5pYS4gQWx0aG91Z2ggdGhlIGRlcG9zaXQgcHJvZHVjZWQgaXJvbiBzaW5jZSAxNzQyLCBubyBnb2xkIHdhcyByZXBvcnRlZCBmcm9tIHRoZSBtaW5lIHVudGlsIDE4NzguICBTb3V0aCBDYXJvbGluYSBoYWQgYSBudW1iZXIgb2YgbG9kZSBnb2xkIG1pbmVzIGFsb25nIHRoZSBDYXJvbGluYSBTbGF0ZSBCZWx0LlszOF0gIFRoZSBIYWlsZSBkZXBvc2l0IHdhcyBkaXNjb3ZlcmVkIGluIExhbmNhc3RlciBDb3VudHkgaW4gMTgyNywgYW5kIGF0IGxlYXN0IDI1NywwMDAgdHJveSBvdW5jZXMgKDgsMDAwIGtnKSBvZiBnb2xkIHdlcmUgZXh0cmFjdGVkIGludGVybWl0dGVudGx5IGJldHdlZW4gdGhlbiBhbmQgMTk0Miwgd2hlbiB0aGUgZ29sZCBtaW5lIHdhcyBvcmRlcmVkIGNsb3NlZCBhcyBub25lc3NlbnRpYWwgdG8gdGhlIHdhciBlZmZvcnQuIEJlZ2lubmluZyBpbiAxOTUxLCB0aGUgZGVwb3NpdCB3YXMgbWluZWQgZm9yIGFzc29jaWF0ZWQgc2VyaWNpdGUsIHdoaWNoIHdhcyB1c2VkIGFzIGEgd2hpdGUgZmlsbGVyLiAgVGhlIG9ubHkgb3BlcmF0aW5nIGdvbGQgbWluZSBpbiBTb3V0aCBEYWtvdGEgaXMgdGhlIFdoYXJmIG1pbmUsIGF0IExlYWQsIGFuIG9wZW4gcGl0IGhlYXAgbGVhY2ggb3BlcmF0aW9uIG9wZXJhdGVkIGJ5IENvZXVyIE1pbmluZyB0aGF0IHByb2R1Y2VkIDEwOSwwMDAgb3VuY2VzIG9mIGdvbGQgaW4gMjAxNi4gIFBsYWNlciBnb2xkIHdhcyBkaXNjb3ZlcmVkIG9uIENva2VyIENyZWVrIGluIE1vbnJvZSBDb3VudHksIFRlbm5lc3NlZSBpbiAxODI3LiBUaGUgZGlzdHJpY3QgcHJvZHVjZWQgYWJvdXQgOSwwMDAgdHJveSBvdW5jZXMgKDI4MCBrZykuICBBYm91dCAxNSwwMDAgdHJveSBvdW5jZXMgKDQ3MCBrZykgb2YgZ29sZCB3YXMgcmVjb3ZlcmVkIGZyb20gdGhlIG1hc3NpdmUgc3VsZmlkZSBjb3BwZXIgb3JlcyBhdCBEdWNrdG93biwgVGVubmVzc2VlLiAgU29tZSBwcm9zcGVjdHMgaGF2ZSBiZWVuIGV4Y2F2YXRlZCBmb3IgZ29sZCBvbiB0aGUgTGxhbm8gVXBsaWZ0IG9mIGNlbnRyYWwgVGV4YXMuIEdvbGQgcHJvc3BlY3RzIGluY2x1ZGUgdGhlIEhlYXRoIG1pbmUgYW5kIHRoZSBCYWJ5aGVhZCBkaXN0cmljdCwgYm90aCBpbiBMbGFubyBDb3VudHksIGFuZCB0aGUgQ2VudHJhbCBUZXhhcyBtaW5lIGluIEdpbGxlc3BpZSBDb3VudHkuIEdvbGQgcHJvZHVjdGlvbiwgaWYgYW55LCBpcyBub3Qga25vd24uIEhpc3RvcmljYWxseSwgdGhlIExvc3QgTmlnZ2VyIEdvbGQgTWluZSBtYXkgYmUgaW4gVGV4YXMuICBNb3N0IGdvbGQgcHJvZHVjZWQgaW4gVXRhaCB0b2RheSBpcyBhIGJ5cHJvZHVjdCBvZiB0aGUgaHVnZSBCaW5naGFtIENhbnlvbiBjb3BwZXIgbWluZSwgc291dGh3ZXN0IG9mIFNhbHQgTGFrZSBDaXR5LiBJbiAyMDEzLCB0aGUgQmluZ2hhbSBDYW55b24gbWluZSBwcm9kdWNlZCAxOTIsMzAwIHRyb3kgb3VuY2VzICg1LDk4MCBrZykgb2YgZ29sZC4gT3ZlciBpdHMgbGlmZSwgQmluZ2hhbSBDYW55b24gaGFzIHByb2R1Y2VkIG1vcmUgdGhhbiAyMyBtaWxsaW9uIG91bmNlcyAoNzE1IHRvbm5lcykgb2YgZ29sZCwgbWFraW5nIGl0IG9uZSBvZiB0aGUgbGFyZ2VzdCBnb2xkIHByb2R1Y2VycyBpbiB0aGUgVVMuICBUaGUgQmFybmV5cyBDYW55b24gbWluZSBpbiBTYWx0IExha2UgQ291bnR5LCB0aGUgbGFzdCBwcmltYXJ5IGdvbGQgbWluZSB0byBvcGVyYXRlIGluIFV0YWgsIHN0b3BwZWQgbWluaW5nIGluIDIwMDEsIGJ1dCBpcyBzdGlsbCByZWNvdmVyaW5nIGdvbGQgZnJvbSBpdHMgaGVhcCBsZWFjaGluZyBwYWRzLiBVdGFoIGdvbGQgcHJvZHVjdGlvbiB3YXMgNDYwLDAwMCB0cm95IG91bmNlcyAoMTQsMDAwIGtnKSBpbiAyMDA2LiAgTW9zdCBnb2xkIG1pbmluZyBpbiBWaXJnaW5pYSB3YXMgY29uY2VudHJhdGVkIGluIHRoZSBWaXJnaW5pYSBHb2xkLVB5cml0ZSBiZWx0IGluIGEgbGluZSB0aGF0IHJ1bnMgbm9ydGhlYXN0IHRvIHNvdXRod2VzdCB0aHJvdWdoIHRoZSBjb3VudGllcyBvZiBGYWlyZmF4LCBQcmluY2UgV2lsbGlhbSwgU3RhZmZvcmQsIEZhdXF1aWVyLCBDdWxwZXBlciwgU3BvdHN5bHZhbmlhLCBPcmFuZ2UsIExvdWlzYSwgRmx1dmFubmEsIEdvb2NobGFuZCwgQ3VtYmVybGFuZCwgYW5kIEJ1Y2tpbmdoYW0uIFNvbWUgZ29sZCB3YXMgYWxzbyBtaW5lZCBpbiBIYWxpZmF4LCBGbG95ZCwgYW5kIFBhdHJpY2sgY291bnRpZXMuICBHb2xkIHdhcyBmaXJzdCBkaXNjb3ZlcmVkIGluIFdhc2hpbmd0b24gaW4gMTg1MywgYXMgcGxhY2VyIGRlcG9zaXRzIGluIHRoZSBZYWtpbWEgVmFsbGV5LiBQcm9kdWN0aW9uIGZyb20gdGhlIHN0YXRlIG5ldmVyIGV4Y2VlZGVkIDUwLDAwMCB0cm95IG91bmNlcyBwZXIgeWVhciB1bnRpbCB0aGUgbWlkLTE5MzBzLCB3aGVuIGxhcmdlIGhhcmQgcm9jayBkZXBvc2l0cyB3ZXJlIGRldmVsb3BlZCBuZWFyIHRoZSBDaGVsYW4gTGFrZSBhbmQgV2VuYXRjaGVlIGRlcG9zaXRzIGluIENoZWxhbiBDb3VudHksIGFuZCB0aGUgUmVwdWJsaWMgZGVwb3NpdCBpbiBGZXJyeSBDb3VudHkuIFByb2R1Y3Rpb24gdGhyb3VnaCAxOTY1IGlzIGVzdGltYXRlZCB0byBiZSAyLjMgbWlsbGlvbiBvdW5jZXMuICBHb2xkIHdhcyBkaXNjb3ZlcmVkIGF0IHRoZSBTb3V0aCBQYXNzLUF0bGFudGljIENpdHktU3dlZXR3YXRlciBkaXN0cmljdCBpbiBwcmVzZW50IEZyZW1vbnQgQ291bnR5IGluIDE4NDIuIFRoZSBwbGFjZXJzIHdlcmUgd29ya2VkIGludGVybWl0dGVudGx5IHVudGlsIDE4NjcsIHdoZW4gdGhlIGZpcnN0IGltcG9ydGFudCBnb2xkIHZlaW4gd2FzIGRpc2NvdmVyZWQsIGFuZCBwcm9zcGVjdG9ycyBhbmQgbWluZXJzIHJ1c2hlZCB0byB0aGUgYXJlYS4uIFRoZSB0b3ducyBvZiBTb3V0aCBQYXNzIENpdHksIEF0bGFudGljIENpdHksIGFuZCBNaW5lclx1MjAxOXMgRGVsaWdodCBjYXRlcmVkIHRvIHRoZSBtaW5lcnMuIFRoZSBkaXN0cmljdCB3YXMgbmVhcmx5IGRlc2VydGVkIGJ5IDE4NzUsIGFuZCB3YXMgd29ya2VkIG9ubHkgaW50ZXJtaXR0ZW50bHkgYWZ0ZXJ3YXJkLiBUb3RhbCBnb2xkIHByb2R1Y3Rpb24gd2FzIGFib3V0IDMwMCwwMDAgdHJveSBvdW5jZXMgKDksMzAwIGtnKS4gSW4gMTk2MiwgdGhlIGRpc3RyaWN0IGJlY2FtZSB0aGUgc2l0ZSBvZiBhIG1ham9yIGlyb24gbWluZS4gIFRoZSBmaXJzdCBzaWduaWZpY2FudCBnb2xkIHJ1c2ggaW4gdGhlIFVuaXRlZCBTdGF0ZXMgd2FzIGluIENhYmFycnVzIENvdW50eSwgTm9ydGggQ2Fyb2xpbmEgKGVhc3Qgb2YgQ2hhcmxvdHRlKSwgaW4gMTc5OSBhdCB0b2RheVx1MjAxOXMgUmVlZFx1MjAxOXMgR29sZCBNaW5lLiBUaGlydHkgeWVhcnMgbGF0ZXIsIGluIDE4MjksIHRoZSBHZW9yZ2lhIEdvbGQgUnVzaCBpbiB0aGUgc291dGhlcm4gQXBwYWxhY2hpYW5zIG9jY3VycmVkLiBJdCB3YXMgZm9sbG93ZWQgYnkgdGhlIENhbGlmb3JuaWEgR29sZCBSdXNoIG9mIDE4NDhcdTIwMTM1NSBpbiB0aGUgU2llcnJhIE5ldmFkYSwgd2hpY2ggY2FwdHVyZWQgdGhlIHBvcHVsYXIgaW1hZ2luYXRpb24uICBUaGUgQ2FsaWZvcm5pYSBnb2xkIHJ1c2ggbGVkIGRpcmVjdGx5IHRvIHRoZSBzZXR0bGVtZW50IG9mIENhbGlmb3JuaWEgYnkgQW1lcmljYW5zIGFuZCB0aGUgcmFwaWQgZW50cnkgb2YgdGhhdCBzdGF0ZSBpbnRvIHRoZSB1bmlvbiBpbiAxODUwLiBUaGUgZ29sZCBydXNoIGluIDE4NDkgc3RpbXVsYXRlZCB3b3JsZHdpZGUgaW50ZXJlc3QgaW4gcHJvc3BlY3RpbmcgZm9yIGdvbGQsIGFuZCBsZWQgdG8gbmV3IHJ1c2hlcyBpbiBBdXN0cmFsaWEsIFNvdXRoIEFmcmljYSwgV2FsZXMgYW5kIFNjb3RsYW5kLiAgU3VjY2Vzc2l2ZSBnb2xkIHJ1c2hlcyBvY2N1cnJlZCBpbiB3ZXN0ZXJuIE5vcnRoIEFtZXJpY2E6IEZyYXNlciBDYW55b24sIHRoZSBDYXJpYm9vIGRpc3RyaWN0IGFuZCBvdGhlciBwYXJ0cyBvZiBCcml0aXNoIENvbHVtYmlhLCBpbiBOZXZhZGEsIGluIHRoZSBSb2NreSBNb3VudGFpbnMgaW4gQ29sb3JhZG8sIElkYWhvLCBNb250YW5hLCBlYXN0ZXJuIE9yZWdvbiwgYW5kIHdlc3Rlcm4gTmV3IE1leGljbyBUZXJyaXRvcnkgYW5kIGFsb25nIHRoZSBsb3dlciBDb2xvcmFkbyBSaXZlci4gUmVzdXJyZWN0aW9uIENyZWVrLCBuZWFyIEhvcGUsIEFsYXNrYSB3YXMgdGhlIHNpdGUgb2YgQWxhc2thXHUyMDE5cyBmaXJzdCBnb2xkIHJ1c2ggaW4gdGhlIG1pZFx1MjAxMzE4OTBzLiBPdGhlciBub3RhYmxlIEFsYXNrYSBHb2xkIFJ1c2hlcyB3ZXJlIE5vbWUsIEZhaXJiYW5rcywgYW5kIHRoZSBGb3J0eW1pbGUgUml2ZXIuICBPbmUgb2YgdGhlIGxhc3QgXHUyMDFjZ3JlYXQgZ29sZCBydXNoZXNcdTIwMWQgd2FzIHRoZSBLbG9uZGlrZSBHb2xkIFJ1c2ggaW4gQ2FuYWRhXHUyMDE5cyBZdWtvbiBUZXJyaXRvcnkgKDE4OTZcdTIwMTM5OSkuIFRoaXMgZ29sZCBydXNoIGlzIGltbW9ydGFsaXNlZCBpbiB0aGUgbm92ZWxzIG9mIEphY2sgTG9uZG9uLCBhbmQgQ2hhcmxpZSBDaGFwbGluXHUyMDE5cyBmaWxtIFRoZSBHb2xkIFJ1c2guIFJvYmVydCBXaWxsaWFtIFNlcnZpY2UgZGVwaWN0ZWQgd2l0aCB0YWxlbnQgaW4gaGlzIHBvZXRyaWVzIHRoZSBkcmFtYXRpYyBldmVudCBvZiB0aGUgR29sZCBSdXNoLCBlc3BlY2lhbGx5IGluIHRoZSBib29rIFRoZSBUcmFpbCBvZiBcdTIwMTk5OC4gVGhlIG1haW4gZ29sZGZpZWxkIHdhcyBhbG9uZyB0aGUgc291dGggZmxhbmsgb2YgdGhlIEtsb25kaWtlIFJpdmVyIG5lYXIgaXRzIGNvbmZsdWVuY2Ugd2l0aCB0aGUgWXVrb24gUml2ZXIgbmVhciB3aGF0IHdhcyB0byBiZWNvbWUgRGF3c29uIENpdHkgaW4gQ2FuYWRhXHUyMDE5cyBZdWtvbiBUZXJyaXRvcnksIGJ1dCBpdCBhbHNvIGhlbHBlZCBvcGVuIHVwIHRoZSByZWxhdGl2ZWx5IG5ldyBVUyBwb3NzZXNzaW9uIG9mIEFsYXNrYSB0byBleHBsb3JhdGlvbiBhbmQgc2V0dGxlbWVudCwgYW5kIHByb21vdGVkIHRoZSBkaXNjb3Zlcnkgb2Ygb3RoZXIgZ29sZCBmaW5kcy4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToyMyIsICJ0aXRsZSI6ICJXaGVyZSBXYXMgVGhlIE1vc3QgR29sZCBGb3VuZCBJbiBUaGUgVW5pdGVkIFN0YXRlcz8gfCBHZW9sb2d5IFBhZ2UifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJZaWVsZCwgbm90IHNwZWNpZmllZCBiZWxvdyIsICIgYXR0YWNrICIsICJhcnJlc3QiLCAiZGV0YWluIl0sICJjb3VudHJpZXMiOiBbIlVOSVRFRCBBUkFCIEVNSVJBVEVTIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIyNS4yNTIyIiwgIjU1LjI4Il1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmV4cHJlc3MuY28udWsvbmV3cy91ay8xMTE0MTMyL21vdGhlci1kdWJhaS1wcmlzb24taG9yc2UtZmFjZWJvb2stTGFsZWgtU2hhaHJhdmVzaCIsICJjb250ZW50IjogIkxhbGVoIFNoYWhyYXZlc2ggc3BlbnQgMzMgZGF5cyBkZXRhaW5lZCBpbiB0aGUgZW1pcmF0ZSBiZWZvcmUgYmVjb21pbmcgdGhlIGZpcnN0IEJyaXRpc2ggY2l0aXplbiB0byBiZSBjb252aWN0ZWQgdW5kZXIgdGhlIFVBRSdzIHN0cmljdCBjeWJlciBjcmltZSBsYXdzLiBUaGUgd2lmZSBoYWQgcmVwb3J0ZWQgaGVyIHRvIHBvbGljZSBmb3IgdHdvIHNvY2lhbCBtZWRpYSBtZXNzYWdlcyBwb3N0ZWQgb24gRmFjZWJvb2sgaW4gMjAxNi4gU2hlIHdhcyBmaW5hbGx5IHJldW5pdGVkIHdpdGggaGVyIDE0LXllYXItb2xkIGRhdWdodGVyIFBhcmlzIGluIHRoZSBhcnJpdmFscyBoYWxsIGF0IEhlYXRocm93IG9uIEZyaWRheSwgZm9sbG93aW5nIGFuIGludGVybmF0aW9uYWwgb3V0Y3J5IG92ZXIgaGVyIHRyZWF0bWVudC4gTGFsZWgsIDU1LCBmcm9tIFJpY2htb25kLCBTdXJyZXksIHdlcHQgYXMgc2hlIGFkbWl0dGVkOiBcIlRoZSBkYXkgYmVmb3JlIEkgd2FzIHRvbGQgSSB3YXMgZnJlZSB0byBnbyBJJ2QgZ2l2ZW4gdXAgaG9wZSBhbmQgd2FzIHN1aWNpZGFsLiBcIkkgZmVsdCBsaWtlIEkgd2FzIG5ldmVyIGdvaW5nIHRvIHNlZSBteSBkYXVnaHRlciBhZ2FpbiBhbmQgc2VudCBhIG1lc3NhZ2UgdG8gbXkgc2lzdGVyIHNheWluZyAnSSBjYW4ndCBkbyB0aGlzIGFueW1vcmUnLiBJIHRvbGQgaGVyICdJdCdzIGtpbGxpbmcgbWUsIGV2ZXJ5IGRheSBpcyBraWxsaW5nIG1lLiBJIGZlbHQgc28gbXVjaCBwYWluIGFuZCB0aGVuIEkgdHVybmVkIG9mZiBteSBwaG9uZS4gSSBjb3VsZCBzZWUgbXkgd2hvbGUgbGlmZSBmbGFzaGluZyBiZWZvcmUgbXkgZXllcyBhbmQgSSBqdXN0IHdhbnRlZCB0byBkaWUuIEl0IHdhcyB0b3J0dXJlIHRvIG1lLlwiICBMYWxlaCwgYSBwcml2YXRlbHkgZWR1Y2F0ZWQgZG9jdG9yJ3MgZGF1Z2h0ZXIsIHdhcyBhcnJlc3RlZCBhdCBEdWJhaSBJbnRlcm5hdGlvbmFsIEFpcnBvcnQgb24gTWFyY2ggMTAgYWZ0ZXIgc2hlIGFuZCBQYXJpcyB0cmF2ZWxsZWQgdG8gdGhlIGVtaXJhdGUgc28gdGhleSBjb3VsZCBncmlldmUgYXQgdGhlIGdyYXZlc2lkZSBvZiBMYWxlaCdzIGV4LWh1c2JhbmQgUGVkcm8gQ29ycmVpYSBEb3MgU2FudG9zIGFmdGVyIGhlIGRpZWQgb2YgYSBoZWFydCBhdHRhY2sgYWdlZCA1MSwgc2V2ZW4gZGF5cyBlYXJsaWVyLiBBdCBwYXNzcG9ydCBjb250cm9sIExhbGVoIHdhcyBoYXVsZWQgYXdheSBieSBwb2xpY2UsIHdobyB0b2xkIGhlciB0aGF0IGhlciBleCdzIG5ldyB3aWZlIGhhZCBtYWRlIGEgbGVnYWwgY29tcGxhaW50IGFib3V0IHR3byBGYWNlYm9vayBwb3N0cywgaW5jbHVkaW5nIG9uZSB3aGVyZSBzaGUgaGFkIGJlZW4gZGVzY3JpYmVkIGFzIFwiYSBob3JzZVwiLiBMYWxlaCBzYWlkOiBcIkkgY291bGRuJ3QgdW5kZXJzdGFuZCB3aGF0IHdhcyBoYXBwZW5pbmcgYW5kIHRoZW4gYSBwb2xpY2Ugb2ZmaWNlciBjYW1lIGluIGFuZCBzYWlkICdUaGVyZSdzIGEgY29tcGxhaW50IGFnYWluc3QgeW91IC0gZG8geW91IGtub3cgU2FtYWggYWwgSGFtbWFkaT8nIFwiSSBqdXN0IGJ1cnN0IGludG8gdGVhcnMuIEkgaGFkIGJlZW4gYXJyZXN0ZWQgZm9yIHR3byBGYWNlYm9vayBwb3N0cyBtYWRlIGluIHRoZSBVSyB0aHJlZSB5ZWFycyBhZ28uIFwiSSBzdGlsbCBoYWQgbm8gaWRlYSBhYm91dCB3aGF0IHdhcyBnb2luZyB0byB1bmZvbGQgYW5kIHRoZSBmdWxsIGV4dGVudCBvZiB0aGUgdHJvdWJsZSBJIHdhcyBpbi4gSSBqdXN0IHRob3VnaHQgJ1RoaXMgd2lsbCBhbGwgYmUgZmluZSBhbmQgb3ZlciBieSB0b21vcnJvdycuXCIgIExhbGVoIHNwZW50IDEyIGhvdXJzIGF0IGEgcG9saWNlIHN0YXRpb24gd2hlcmUgc2hlIHdhcyBvcmRlcmVkIHRvIHNpZ24gYSBzdGF0ZW1lbnQsIGRlc3BpdGUgaXQgYmVpbmcgaW4gQXJhYmljIGFuZCBoZXIgaGF2aW5nIG5vIHVuZGVyc3RhbmRpbmcgb2Ygd2hhdCBpdCBzYWlkLiBTaGUgbGF0ZXIgZGlzY292ZXJlZCB0aGUgdHJhbnNsYXRpb24gb2YgdGhlIEZhY2Vib29rIHBvc3QgYm9yZSBubyByZWxhdGlvbiB0byB3aGF0IHNoZSBoYWQgd3JpdHRlbiwgd2l0aCBhIHN3ZWFyIHdvcmQgc3Vic3RpdHV0ZWQgZm9yIHRoZSB3b3JkIFwiaG9yc2VcIi4gVGhlIHBvc3RzLCB3aGljaCBMYWxlaCB3cm90ZSBhZnRlciBzZWVpbmcgYSBwaG90byBvZiBoZXIgZXgtaHVzYmFuZCBnZXR0aW5nIG1hcnJpZWQgdG8gaGlzIG5ldyBUdW5pc2lhbiBsb3ZlciBTYW1haCBhbCBIYW1tYWRpLCA0Miwgc2FpZDogXCJJIGhvcGUgeW91IGdvIHVuZGVyIHRoZSBncm91bmQgeW91IGlkaW90LiBEYW1uIHlvdS4gWW91IGxlZnQgbWUgZm9yIHRoaXMgaG9yc2VcIiBhbmQgXCJZb3UgbWFycmllZCBhIGhvcnNlIHlvdSBpZGlvdFwiLiBTaGUgc2FpZDogXCJJIGtub3cgSSBzaG91bGRuJ3QgaGF2ZSBwb3N0ZWQgdGhlIG1lc3NhZ2VzLCBidXQgYXQgdGhlIHRpbWUgSSB3YXMgZGlzdHJhdWdodC4gXCJJdCBoYWQgbmV2ZXIgb2NjdXJyZWQgdG8gbWUgYW5kIHRvb2sgbWUgY29tcGxldGVseSBieSBzdXJwcmlzZS4gSSB3YXMgYmVpbmcgYXJyZXN0ZWQgZm9yIGNhbGxpbmcgaGVyIGEgaG9yc2UsIEkgdGhvdWdodCAndGhpcyBpcyBub25zZW5zZScuXCIgIExhbGVoLCB3aG8gd2FzIGVkdWNhdGVkIGF0IFRvcm1lYWQgU2Nob29sIGluIEd1aWxkZm9yZCwgU3VycmV5LCBhbmQgdXNlZCB0byB3b3JrIGZvciBMb25kb24gYXVjdGlvbmVlcnMgQm9uaGFtcywgd2FzIHRvbGQgc2hlIHdhcyBiZWluZyBoZWxkIGluIER1YmFpIHdoaWxlIHNoZSBhd2FpdGVkIGEgY291cnQgaGVhcmluZy4gSXQgd2FzIGF0IHRoYXQgcG9pbnQgc2hlIG1hZGUgdGhlIGhlYXJ0YnJlYWtpbmcgZGVjaXNpb24gdG8gc2VuZCBQYXJpcyBob21lIG9uIGhlciBvd24uIExhbGVoIHNhaWQ6IFwiUGFyaXMgd2FzIGFic29sdXRlbHkgdGVycmlmaWVkLiBJIHRob3VnaHQgJ0kgY2FuJ3Qgc3ViamVjdCBoZXIgdG8gb25lIG1vcmUgbWludXRlIG9mIHRoaXMnLiBcIkknbSBzdGlsbCBnZXR0aW5nIHNoYWtlcyBub3cgdGhpbmtpbmcgYWJvdXQgdGhhdCBtb21lbnQgYmVjYXVzZSBJIHRoaW5rIHRoYXQgd2FzIHdoZW4gSSByZWFsaXNlZCBldmVyeXRoaW5nIGhhZCBiZWNvbWUgcmVhbC4gXCJJdCB3YXMgdGhlIHNpbmdsZSBoYXJkZXN0IHRoaW5nIEkndmUgZXZlciBoYWQgdG8gZG8uIFwiSGVyIGZhdGhlciBoYWQgZGllZCBsZXNzIHRoYW4gdHdvIHdlZWtzIGVhcmxpZXIgYW5kIG5vdyBzaGUgd2FzIGxvc2luZyBoZXIgbW90aGVyLiBJIGZlbHQgbGlrZSBJIHdhcyBmYWlsaW5nIGhlciBhcyBhIHBhcmVudCwgYnV0IEkga25ldyBJIGhhZCBubyBwb3dlciBvdmVyIHRoZSBzaXR1YXRpb24uXCIgIE9uIFRodXJzZGF5LCBhZnRlciBQYXJpcyB3cm90ZSBhIHRvdWNoaW5nIGxldHRlciB0byBTaGVpa2ggTW9oYW1tZWQsIHRoZSBydWxlciBvZiBEdWJhaSBhbmQgcHJpbWUgbWluaXN0ZXIgb2YgdGhlIFVBRSwgTGFsZWggZmluYWxseSBhcHBlYXJlZCBiZWZvcmUgdGhlIER1YmFpIENvdXJ0IG9mIE1pc2RlbWVhbm91cnMuIEp1ZGdlIE1vaGFtZWQgTXVzdGFmYSBJYnJhaGltIEtoYWxpbCBzYWlkIHNoZSBjb3VsZCBiZSByZWxlYXNlZCBmcm9tIHRoZSBjb3VudHJ5IGlmIHNoZSBwYWlkIGEgXHUwMGEzNjI0IGZpbmUuIFNoZSBzYWlkOiBcIkl0IGZlbHQgbGlrZSBJIHdhcyBkcmVhbWluZyBhbmQgSSBkaWRuJ3QgYmVsaWV2ZSBpdCB3YXMgcmVhbC4gXCJJIGJ1cnN0IGludG8gdGVhcnMgb2YgaGFwcGluZXNzIGFuZCBkaXNiZWxpZWYgd2hlbiBJIGdvdCBteSBwYXNzcG9ydCwgYnV0IEkgZGlkbid0IGFsbG93IG15c2VsZiB0byBiZWxpZXZlIGl0IHdhcyBhbGwgcmVhbGx5IGFsbCBvdmVyIHVudGlsIEkgZ290IG9uIHRoZSBwbGFuZS4gSSBqdXN0IGZlbHQgbnVtYi5cIiBBZnRlciBiZWluZyBwdXQgb24gYSBmbGlnaHQgZnJvbSBEdWJhaSBpbiB0aGUgZWFybHkgaG91cnMgb2YgRnJpZGF5IG1vcm5pbmcgc2hlIHdhcyBmaW5hbGx5IHJldW5pdGVkIHdpdGggUGFyaXMgYXQgSGVhdGhyb3cuIExhbGVoIHNhaWQ6IFwiVGhlIG1vbWVudCBJIHNhdyBQYXJpcyBhdCB0aGUgYWlycG9ydCB3YXMgc3VjaCBhbiBvdmVyd2hlbG1pbmcgbW9tZW50LiBNeSBoZWFydCB3YXMgYWNoaW5nIGZvciBoZXIgYW5kIGJlaW5nIGFibGUgdG8gaG9sZCBteSBnaXJsIGFnYWluIHdhcyBzbyBlbW90aW9uYWwuICBcIkknbGwgbmV2ZXIgZm9yZ2V0IHRoYXQgbW9tZW50LiBCZWluZyBhcGFydCBmcm9tIGhlciBoYWQgYmVlbiBicnV0YWwuIFwiSSBzdGlsbCBmZWVsIGxpa2UgSSdtIGluIGEgZGF6ZSBhbmQgSSBmZWVsIGxpa2UgYSBmcmFjdGlvbiBvZiB0aGUgcGVyc29uIEkgd2FzIGJlZm9yZS4gXCJUaGlzIGxhc3QgbW9udGggaGFzIGNvbXBsZXRlbHkgYnJva2VuIG1lIHBoeXNpY2FsbHkgYW5kIG1lbnRhbGx5LCBpdCBoYXMgdHJhdW1hdGlzZWQgbWUuIFwiSSBqdXN0IHdhbnQgdG8gZW5qb3kgbGlmZSB3aXRoIFBhcmlzIG5vdyBhbmQgY2hlcmlzaCBldmVyeSBtb21lbnQuXCIiLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToyNSIsICJ0aXRsZSI6ICJNb3RoZXIgaGVsZCBpbiBEdWJhaSBqYWlsOiAifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJSZXR1cm4sIHJlbGVhc2UgcGVyc29uKHMpIiwgIiBhc3NhdWx0ICJdLCAiY291bnRyaWVzIjogWyJVTklURUQgQVJBQiBFTUlSQVRFUyJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siMjQiLCAiNTQiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly9mb3JjZWNoYW5nZS5jb20vNTMwNzc5L2ZyZWUtYXdhcmQtd2lubmluZy1odW1hbi1yaWdodHMtZGVmZW5kZXItZHlpbmctb24taHVuZ2VyLXN0cmlrZS8iLCAiY29udGVudCI6ICJHb2FsOiBGcmVlIGh1bWFuIHJpZ2h0cyBhY3RpdmlzdCBiZWZvcmUgaGUgZGllcyBmcm9tIGh1bmdlciBzdHJpa2UuICBBIGh1bWFuIHJpZ2h0cyBhY3RpdmlzdCBzaXRzIGluIHByaXNvbiwgaGlzIGhlYWx0aCBkZXRlcmlvcmF0aW5nIGZyb20gYSBsb25nIGh1bmdlciBzdHJpa2UuIEFobWVkIE1hbnNvb3IgaXMgYW4gYXdhcmQtd2lubmluZyBodW1hbiByaWdodHMgZGVmZW5kZXIgd2hvIGhhcyBzdGFydmVkIGhpbXNlbGYgZm9yIG92ZXIgYSBtb250aCBhcyBoZSBzaXRzIGluIHByaXNvbiBpbiB0aGUgVW5pdGVkIEFyYWIgRW1pcmF0ZXMuIERlbWFuZCBoZSBiZSByZWxlYXNlZC4gIE1hbnNvb3IgZmFjZXMgdXAgdG8gdGVuIHllYXJzIGluIHByaXNvbiBmb3IgY2FsbGluZyBmb3IgcHJvZ3Jlc3NpdmUgZ292ZXJubWVudCByZWZvcm0uIEhlIGhhZCBubyBhY2Nlc3MgdG8gYSBsYXd5ZXIgZHVyaW5nIGhpcyB0cmlhbCBhbmQgYXV0aG9yaXRpZXMgaGF2ZSB5ZXQgdG8gYW5ub3VuY2Ugd2hlcmUgaGUgaXMgYmVpbmcgaGVsZC4gSGUgZmFjZWQgcGh5c2ljYWwgYXNzYXVsdCBhbmQgb3RoZXIgdmlvbGVuY2UgYmVoaW5kIGJhcnMuIFRvIHByb3Rlc3QgaGlzIHRyZWF0bWVudCwgaGUgaGFzIGJlZW4gc3RhcnZpbmcgaGltc2VsZi4gTm93LCByZXBvcnRzIGluZGljYXRlIGhlIG1heSBiZSBvbiB0aGUgYnJpbmsgb2YgZGVhdGguICBEZW1hbmQgdGhhdCB0aGUgZ292ZXJubWVudCBvZiB0aGUgVW5pdGVkIEFyYWIgRW1pcmF0ZXMgcmVsZWFzZSBNYW5zb29yIGZyb20gaGlzIGluaHVtYW5lIGltcHJpc29ubWVudC4gRGVtYW5kIHRoYXQgdGhleSBhbGxvdyBoaW0gdG8gcmV0dXJuIHRvIGhpcyBsb3ZlZCBvbmVzIGFuZCBoaXMgY29tbWVuZGFibGUgZHV0eS4gIEF3YXJkLXdpbm5pbmcgaHVtYW4gcmlnaHRzIGFjdGl2aXN0IEFobWVkIE1hbnNvb3IgcmVtYWlucyBpbiBwcmlzb24sIG9uIHRoZSBicmluayBvZiBkZWF0aCBhZnRlciBhIG1vbnRoLWxvbmcgaHVuZ2VyIHN0cmlrZS4gTWFuc29vciBoYXMgYmVlbiBsYXVkZWQgYXJvdW5kIHRoZSB3b3JsZCBmb3IgaGlzIGFkdm9jYWN5IGZvciBmcmVlZG9tIG9mIHNwZWVjaCBhbmQgZXhwcmVzc2lvbi4gSG93ZXZlciwgeW91ciBnb3Zlcm5tZW50IHNhdyB0aGlzIHBlYWNlZnVsIHByb3Rlc3QgYXMgYSB0aHJlYXQgYW5kIHN1YmplY3RlZCBoaW0gdG8gYW4gdW5mYWlyIHRyaWFsIGFuZCBpbXByaXNvbm1lbnQuICBCZWZvcmUgaGlzIGhlYWx0aCBmYWlscyBldmVuIG1vcmUsIHJlbGVhc2UgTWFuc29vciB0byB0aGUgY2FyZSBvZiBoaXMgZmFtaWx5IGFuZCBsb3ZlZCBvbmVzLiBFbmQgeW91ciBhYnVzZSBvZiBwZWFjZWZ1bCBodW1hbiByaWdodHMgYWR2b2NhdGVzLiAgW1lvdXIgTmFtZSBIZXJlXSIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjI3IiwgInRpdGxlIjogIkZyZWUgQXdhcmQtV2lubmluZyBIdW1hbiBSaWdodHMgRGVmZW5kZXIgRHlpbmcgb24gSHVuZ2VyIFN0cmlrZSJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkhvc3QgYSB2aXNpdCIsICJvcGVyYXRpb24iXSwgImNvdW50cmllcyI6IFsiVU5JVEVEIEFSQUIgRU1JUkFURVMiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjI1LjI1MjIiLCAiNTUuMjgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cua2hhbGVlanRpbWVzLmNvbS9lbWlyYXRlcy10by1kZXBsb3ktbGF0ZXN0LWJvZWluZy03NzctMzAwZXItdG8tcml5YWRoLWFuZC1rdXdhaXQiLCAiY29udGVudCI6ICJFbWlyYXRlcyBoYXMgYW5ub3VuY2VkIHRoYXQgaXQgd2lsbCBiZSBvcGVyYXRpbmcgaXRzIGxhdGVzdCBCb2VpbmcgNzc3LTMwMEVSIGFpcmNyYWZ0IGZpdHRlZCB3aXRoIHRoZSAnR2FtZSBDaGFuZ2VyJyBGaXJzdCBDbGFzcyBzdWl0ZXMgZnJvbSBEdWJhaSB0byBSaXlhZGggc3RhcnRpbmcgZnJvbSBBcHJpbCAxNiwgMjAxOSBhbmQgS3V3YWl0IHN0YXJ0aW5nIGZyb20gSnVuZSAxLCAyMDE5LiAgQWRpbCBBbCBHaGFpdGgsIHNlbmlvciB2aWNlIHByZXNpZGVudCBvZiBDb21tZXJjaWFsIE9wZXJhdGlvbnMgR3VsZiwgTWlkZGxlIEVhc3QgJiBJcmFuIHNhaWQ6IFwiVGhlIEtpbmdkb20gb2YgU2F1ZGkgQXJhYmlhIGFuZCBLdXdhaXQgd2lsbCBiZSB0aGUgZmlyc3QgY291bnRyaWVzIGluIHRoZSBNaWRkbGUgRWFzdCBhbmQgR0NDIHRvIGJlIHNlcnZlZCBieSB0aGUgbGF0ZXN0IEVtaXJhdGVzIEJvZWluZyA3NzcgYWlyY3JhZnQgZmVhdHVyaW5nIGZ1bGx5LWVuY2xvc2VkIHByaXZhdGUgc3VpdGVzIGluc3BpcmVkIGJ5IGx1eHVyeSBhdXRvbWFrZXIgTWVyY2VkZXMtQmVuei4gRGVwbG95aW5nIHRoZSBuZXdlc3QgQm9laW5nIDc3NyB0byBib3RoIFJpeWFkaCBhbmQgS3V3YWl0IHdpbGwgY2F0ZXIgdG8gdGhlIHNpZ25pZmljYW50IHByZW1pdW0gZGVtYW5kIHdlIHNlZSBvbiB0aGVzZSByb3V0ZXMsIGFuZCBpcyBpbiBsaW5lIHdpdGggb3VyIGNvbW1pdG1lbnQgdG8gcHJvdmlkZSBvdXIgY3VzdG9tZXJzIGFjcm9zcyBhbGwgY2xhc3NlcyB3aXRoIG91dHN0YW5kaW5nIHNlcnZpY2UgYW5kIGluZHVzdHJ5LWxlYWRpbmcgb25ib2FyZCBwcm9kdWN0cyBmb3IgYSBiZXR0ZXIgZmx5aW5nIGV4cGVyaWVuY2UuIFRoZSB1bmlxdWUgRmlyc3QgQ2xhc3Mgc3VpdGVzIG9uYm9hcmQgdGhlIEJvZWluZyA3Nzcgd2lsbCBvZmZlciBvdXIgcHJlbWl1bSBwYXNzZW5nZXJzIHVucGFyYWxsZWxlZCBwcml2YWN5LCBjb21mb3J0IGFuZCBsdXh1cnksIHdpdGggZXhwZXJpZW5jZXMgdGFpbG9yZWQgdG8gdGhlaXIgaW5kaXZpZHVhbCBuZWVkcy5cIiAgVHJhdmVsbGVycyB0by9mcm9tIFNhdWRpIEFyYWJpYSBjYW4gZXhwZXJpZW5jZSB0aGUgbmV3IEJvZWluZyA3NzcgcHJvZHVjdCBvbiBmbGlnaHQgRUsgODE5IGRlcGFydGluZyBEdWJhaSBhdCAwNjU1aHJzLCBhcnJpdmluZyBpbiBSaXlhZGggYXQgMDc1MGhycy4gVGhlIHJldHVybiBmbGlnaHQgRUsgODIwIGxlYXZlcyBSaXlhZGggYXQgMDkzNWhycywgYXJyaXZpbmcgaW4gRHViYWkgYXQgMTIzMGhycy4gVGhlIG5ldyBCb2VpbmcgNzc3IGFpcmNyYWZ0IHdpbGwgYmVnaW4gb3BlcmF0aW5nIHRoZSByb3V0ZSBmaXZlIHRpbWVzIGEgd2VlaywgYW5kIGZyb20gSnVuZSAxLCAyMDE5IHdpbGwgYmVnaW4gZmx5aW5nIG9uIGEgZGFpbHkgYmFzaXMuIEN1c3RvbWVycyBmbHlpbmcgb24gdGhlIGxhdGVzdCBFbWlyYXRlcyBCb2VpbmcgNzc3IGFyZSB0aGVuIGFibGUgdG8gZW5qb3kgc2VhbWxlc3MgY29ubmVjdGlvbnMgdmlhIER1YmFpIHRvIExvbmRvbiBIZWF0aHJvdywgUGFyaXMsIE1hZHJpZCwgTmV3IFlvcmsgSkZLLCBIeWRlcmFiYWQsIEJhcmNlbG9uYSwgTG9zIEFuZ2VsZXMsIEdlbmV2YSBhbmQgQW1zdGVyZGFtLiAgRW1pcmF0ZXMgd2lsbCBiZSBleHBhbmRpbmcgaXRzIHByZW1pdW0gQm9laW5nIDc3NyBleHBlcmllbmNlIHRvL2Zyb20gS3V3YWl0IG9uIEVLIDg1NSwgd2hpY2ggZGVwYXJ0cyBEdWJhaSBhdCAwNzQ1aHJzLCBhcnJpdmluZyBpbiBLdXdhaXQgYXQgMDgyNWhycy4gVGhlIHJldHVybiBmbGlnaHQgRUsgODU2IGxlYXZlcyBLdXdhaXQgYXQgMDk1MGhycywgYXJyaXZpbmcgaW4gRHViYWkgYXQgMTI0MGhycy4gVGhlIHNlcnZpY2Ugd2lsbCBvcGVyYXRlIGRhaWx5IHRvIEt1d2FpdC4gVGhlIER1YmFpLUt1d2FpdCByb3V0ZSB3YXMgcmFua2VkIG9uZSBvZiB0aGUgJ1dvcmxkJ3MgMjAgQnVzaWVzdCBSb3V0ZXMnLCBhY2NvcmRpbmcgdG8gT0FHIEF2aWF0aW9uLCBhbmQgaXMgdGhlIGJ1c2llc3Qgcm91dGUgYWNyb3NzIHRoZSBNaWRkbGUgRWFzdCBhbmQgTm9ydGggQWZyaWNhLiIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjMwIiwgInRpdGxlIjogIkVtaXJhdGVzIHRvIGRlcGxveSBsYXRlc3QgQm9laW5nIDc3Ny0zMDBFUiB0byBSaXlhZGggYW5kIEt1d2FpdCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIlNlaXplIG9yIGRhbWFnZSBwcm9wZXJ0eSwgbm90IHNwZWNpZmllZCBiZWxvdyIsICIga25pZmUgIiwgImludmVzdGlnYXQiXSwgImNvdW50cmllcyI6IFsiQVVTVFJBTElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyItMzcuNzMzMyIsICIxNDUuMTE3Il1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmRhaWx5bWFpbC5jby51ay9uZXdzL2FydGljbGUtNjkyMDcwNS9TZXJpYWwtcHJlZGF0b3ItTXItQ3J1ZWwtYXR0YWNrZWQteW91bmctTWVsYm91cm5lLXNjaG9vbC1naXJscy1hbGl2ZS5odG1sIiwgImNvbnRlbnQiOiAiT25lIG9mIEF1c3RyYWxpYSdzIG1vc3Qgbm90b3Jpb3VzIHNlcmlhbCByYXBpc3RzIGtub3duIGFzICdNciBDcnVlbCcgY291bGQgdmVyeSB3ZWxsIHN0aWxsIGJlIGFsaXZlIDI4IHllYXJzIGFmdGVyIHRlcnJvcmlzaW5nIE1lbGJvdXJuZSwgaW52ZXN0aWdhdG9ycyBoYXZlIHJldmVhbGVkLiAgVGhlIHNlcmlhbCBwcmVkYXRvciBhbmQgc3VzcGVjdGVkIGtpbGxlciBpcyBiZWxpZXZlZCB0byBiZSByZXNwb25zaWJsZSBmb3IgcmFwaW5nIGFuZCBraWRuYXBwaW5nIGF0IGxlYXN0IGEgZG96ZW4geW91bmcgZ2lybHMgYWNyb3NzIHRoZSBjaXR5IGluIHRoZSBsYXRlIDE5ODBzIGFuZCBlYXJseSA5MHMgLSBhbmQgdG8gdGhpcyBkYXkgaGFzIG5ldmVyIGJlZW4gY2F1Z2h0IG9yIGlkZW50aWZpZWQuICBUd28gZ2lybHMga2lkbmFwcGVkIGJ5IE1yIENydWVsIC0gU2hhcm9uIFdpbGxzLCB0ZW4sIGFuZCBOaWNvbGEgTHluYXMsIDEzIC0gd2VyZSBldmVudHVhbGx5IHJlbGVhc2VkLCBidXQgMTMteWVhci1vbGQgS2FybWVpbiBDaGFuJ3MgcmVtYWlucyB3ZXJlIGZvdW5kIGEgeWVhciBhZnRlciBoZXIgYWJkdWN0aW9uLiBTaGUgaGFkIGJlZW4gc2hvdCB0aHJlZSB0aW1lcyBpbiB0aGUgaGVhZC4gIEF1c3RyYWxpYW4gQ3JpbWUgU3RvcmllcyByZXZpc2l0ZWQgdGhlIE1lbGJvdXJuZSBzY2hvb2xnaXJsJ3MgY2FzZSBvbiB0aGUgMjh0aCBhbm5pdmVyc2FyeSBvZiBoZXIgYWJkdWN0aW9uIGFuZCBtdXJkZXIgb24gU3VuZGF5IG5pZ2h0LiAgS2FybWVpbidzIGNhc2Ugc3Rvb2Qgb3V0IGZyb20gYWxsIHRoZSBvdGhlcnMgYmVjYXVzZSBzaGUgd2FzIHRoZSBvbmx5IHZpY3RpbSB0byBiZSBraWxsZWQgYnkgdGhlIHJhcGlzdCBhZnRlciBzaGUgd2FzIHRha2VuLiAgS2FybWVpbidzIGNhc2Ugc3Rvb2Qgb3V0IGZyb20gYWxsIHRoZSBvdGhlcnMgYmVjYXVzZSBzaGUgd2FzIHRoZSBvbmx5IHZpY3RpbSB0byBiZSBraWxsZWQgYnkgdGhlIHJhcGlzdCBhZnRlciBzaGUgd2FzIHRha2VuLiBIZXIgbXVyZGVyIGFsc28gbWFya2VkIHRoZSBlbmQgb2YgTXIgQ3J1ZWwncyB0aHJlZS15ZWFyIHJlaWduIG9mIHRlcnJvciBpbiAxOTkxIC0gd2hlbiBoZSBmZWxsIG9mZiB0aGUgcmFkYXIgYW5kIG5ldmVyIHN0cnVjayBhZ2FpbiAgSGVyIG11cmRlciBhbHNvIG1hcmtlZCB0aGUgZW5kIG9mIE1yIENydWVsJ3MgdGhyZWUteWVhciByZWlnbiBvZiB0ZXJyb3IgaW4gMTk5MSAtIHdoZW4gaGUgZmVsbCBvZmYgdGhlIHJhZGFyIGFuZCBuZXZlciBzdHJ1Y2sgYWdhaW4uICBNciBDcnVlbCBhdHRhY2tlZCBnaXJscyBhcyB5b3VuZyBhcyAxMSBpbiBcdTAwYWRNZWxib3VybmUgaW4gdGhlIDE5ODBzIGFuZCAxOTkwcy4gVGhlIHBhZWRvcGhpbGUgaGFzIG5ldmVyIGJlZW4gaWRlbnRpZmllZC4gQXVndXN0IDIyLCAxOTg3LCBMb3dlciBQbGVudHk6IEhlIGJyb2tlIGludG8gaG91c2UgaW4gdGhlIG5pZ2h0LCBsb2NrZWQgdGhlIHBhcmVudHMgaW4gYSB3YXJkcm9iZSBhbmQgYXR0YWNrZWQgdGhlaXIgMTEteWVhci1vbGQgZGF1Z2h0ZXIgRGVjZW1iZXIgMjcsIDE5ODgsIFJpbmd3b29kOiBIZSBicm9rZSBpbnRvIGEgaG91c2UsIHRpZWQgdXAgdGhlIHBhcmVudHMgYW5kIGFiZHVjdGVkIHRoZWlyIDEwLXllYXItb2xkIGRhdWdodGVyLCByZWxlYXNpbmcgaGVyIGF0IGEgc2Nob29sIDE4IGhvdXJzIGxhdGVyIEp1bHkgMywgMTk5MCwgQ2FudGVyYnVyeTogSGUgYnJva2UgaW50byBob3VzZSBhbmQgYWJkdWN0ZWQgYSAxMy15ZWFyLW9sZC4gSGUgZHJvdmUgaGVyIHRvIGFub3RoZXIgaG91c2Ugd2hlcmUgaGUga2VwdCBoZXIgZm9yIDUwIGhvdXJzIGJlZm9yZSByZWxlYXNlLiBBcHJpbCAxMywgMTk5MSBUZW1wbGVzdG93ZTogSGUgYnJva2UgaW50byBhIGhvdXNlIGFuZCBhYmR1Y3RlZCBLYXJtZWluIENoYW4sIDEzLiBIZXIgYm9keSB3YXMgZm91bmQgYSB5ZWFyIGxhdGVyLiAgJ0l0IGRvZXNuJ3QgbWFrZSBhbnkgc2Vuc2UuIEdvb2QgY3JpbWluYWxzLCBvZmZlbmRlcnMsIHNlcmlhbCBvZmZlbmRlcnMsIHRoZXkgZG9uJ3QgZ2V0IHNjYXJlZCBvZmYuIFRoZXkgYmVsaWV2ZSwgdGhlaXIgZWdvIGJlbGlldmVzIHRoZXkncmUgYmV0dGVyIHRoYW4gdGhlIHN5c3RlbSwgdGhleSdyZSBiZXR0ZXIgdGhhbiBpbnZlc3RpZ2F0b3JzLCcgRHIgU3RlcGhlbiBCYXJyb24sIHBzeWNob2xvZ2lzdCBhbmQgZm9ybWVyIHBvbGljZSBpbnNwZWN0b3Igc2FpZC4gIEFsdGhvdWdoIE1yIENydWVsIGhhZCBiZWVuIHBlcmNlaXZlZCBhcyBhIGRhcmssIG15c3RlcmlvdXMgZmlndXJlIGluIHRoZSBwdWJsaWMgZXllLCBpbnZlc3RpZ2F0b3JzIHN1Z2dlc3RlZCB0aGUgc2VyaWFsIHJhcGlzdCBjb3VsZCBhY3R1YWxseSBqdXN0IGJlICdNciBBdmVyYWdlLicgIEZvbGxvd2luZyBLYXJtZWluJ3MgYWJkdWN0aW9uLCBBdXN0cmFsaWFuIGF1dGhvcml0aWVzIGhhZCBzb3VnaHQgaGVscCBmcm9tIHRoZSBBbWVyaWNhbiBGQkkgLSB3aG8gcmV2ZWFsZWQgdGhlcmUgd2FzIG5vdGhpbmcgcGFydGljdWxhcmx5IHN0cmlraW5nIGFib3V0IE1yIENydWVsJ3MgcHJvZmlsZS4gIEhlIHdhcyBiZWxpZXZlZCB0byBiZSBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQsIGJldHdlZW4gMTY1IGFuZCAxODNjbSB0YWxsLCB0aGluIHRvIG1lZGl1bSBidWlsZCB3aXRoIGEgcG90YmVsbHkuICBIZSBhbHNvIGRpZCBub3QgaGF2ZSBhIGRpc3RpbmN0IGFjY2VudCBhbmQgd2FzIGRlc2NyaWJlZCBhcyBxdWlldGx5IHNwb2tlbi4gIE1yIENydWVsJ3Mgd2VhcG9uIG9mIGNob2ljZSB3YXMgYSBrbmlmZSBhbmQgaGUgd2FzIGtub3duIHRvIHdlYXIgYSBiYWxhY2xhdmEgYW5kIGhhZCB0YXBlZCBvdmVyIGhpcyB2aWN0aW1zJyBleWVzIHRvIHNoaWVsZCBoaXMgaWRlbnRpdHkuICBPdGhlciB0aGVvcmllcyBzdWdnZXN0IEthcm1laW4gaGFkIGJlZW4gYm9sZCBlbm91Z2ggdG8gcmlwIG9mZiB0aGUgdGFwZSBmcm9tIGhlciBleWVzIG9yIGhhZCBwdWxsZWQgTXIgQ3J1ZWwncyBtYXNrIG9mZiwgcmV2ZWFsaW5nIGhpcyBpZGVudGl0eSBhbmQgZm9yY2luZyBoaW0gdG8ga2lsbCBoZXIuICBCdXQgc29tZSBpbnZlc3RpZ2F0b3JzIHNheSBpdCBpcyB1bmxpa2VseSBhIHNlcmlhbCBvZmZlbmRlciB3b3VsZCBiZSAnc2NhcmVkIG9mZicgYW5kIGJlbGlldmUgaXQgaXMgcG9zc2libGUgTXIgQ3J1ZWwgd2VudCBxdWlldCBiZWNhdXNlIGhlIGxlZnQgdG93biB0byBjb250aW51ZSBoaXMgYXR0YWNrcyBvdmVyc2VhcyBvciBlbHNld2hlcmUuICAnTXkgc3VzcGljaW9uIGlzIHRoYXQgaGUgcHJvYmFibHkganVzdCBsZWZ0IHRvd24gb3IgaGUgd2VudCB0byBqYWlsIGFuZCBkaWVkLCcgQ3JpbWluYWwgcHN5Y2hvbG9naXN0IFRpbSBXYXRzb24gTXVucm8gc2FpZC4gICdUaGVyZSB3ZXJlIHRoZSBIaWxsc2lkZSBTdHJhbmdsZXJzIGluIExvcyBBbmdlbGVzLiBBIGd1eSBhbmQgaGlzIGNvdXNpbiB3ZXJlIGFiZHVjdGluZywgcmFwaW5nIGFuZCBtdXJkZXJpbmcgd29tZW4gaW4gdGhlIEhpbGxzIGRpc3RyaWN0IG9mIExBLCBkdW1waW5nIHRoZSBjYWRhdmVycyBvbiB0aGUgZnJvbnQgbGF3bnMgb2YgcGxhY2VzIGFzIGFsbCBwYXJ0IG9mIHRoZSBob3Jyb3Igc2hvdywgYW5kIGl0IHN0b3BwZWQgYXMgYWJydXB0bHkgYXMgaXQgc3RhcnRlZC4gICdIZSB3YXMgZXZlbnR1YWxseSBkaXNjb3ZlcmVkIGluIE9yZWdvbiwgc28sIGhlJ2QgcmVsb2NhdGVkLCBoZSdkIGdvbmUgZnVydGhlciBub3J0aCwgaW50byBhIGRpZmZlcmVudCBzdGF0ZS4gSXQgc3RhcnRlZCBhZ2Fpbi4nICBBbHRob3VnaCBuZWFybHkgdGhyZWUgZGVjYWRlcyBoYXZlIHBhc3NlZCBzaW5jZSBNciBDcnVlbCdzIGxhc3QgYXR0YWNrLCByZXRpcmVkIERldGVjdGl2ZSBDaHJpcyBPJ0Nvbm5vciBzYWlkIHRoZSBpbnZlc3RpZ2F0aW9uIHJlbWFpbnMgYWN0aXZlLiIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjM2IiwgInRpdGxlIjogIkF1c3RyYWxpYSdzIHNlcmlhbCByYXBpc3QgTXIgQ3J1ZWwnIGNvdWxkIHN0aWxsIGJlIGFsaXZlIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiRW5nYWdlIGluIG5lZ290aWF0aW9uIiwgIiBlc3Bpb25hZ2UgIiwgInNlY3VyaXR5IiwgImludmVzdGlnYXQiLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIkNISU5BIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIzNSIsICIxMDUiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cuYW1lcmljYW50aGlua2VyLmNvbS9ibG9nLzIwMTkvMDQvdXNfYnVzaW5lc3NfaXRzX293bl93b3JzdF9lbmVteV9pbl9maWdodGluZ19jaGluYV9oYWNraW5nLmh0bWwiLCAiY29udGVudCI6ICJBbiBpbnZlc3RpZ2F0aW9uIGJ5IE5hdGlvbmFsIFB1YmxpYyBSYWRpbyBhbmQgUEJTIGZvdW5kIHRoYXQgZmVhciBvZiBsb3NpbmcgcHJvZml0cyBoYXMgZHJpdmVuIHRoZSBzaWxlbmNlIGZyb20gVVMgY29tcGFuaWVzIHdobyBzZWUgcm9ja2luZyB0aGUgYm9hdCBhcyBtb3JlIG9mIGEgdGhyZWF0IHRvIHRoZWlyIGxpdmVsaWhvb2QgdGhhbiB0YWtpbmcgc3Ryb25nIGFjdGlvbi4gIFRoZSBwcm9ibGVtIG9mIENoaW5hIGhhY2tpbmcgVVMgYnVzaW5lc3NlcyBhbmQgc3RlYWxpbmcgaW50ZWxsZWN0dWFsIHByb3BlcnR5IGhhcyBiZWVuIGdvaW5nIG9uIGZvciBkZWNhZGVzLiBCdXQgd2hlbiBpdCBjb21lcyB0byBmaWdodGluZyB0aGUgY3JpbWUgd2F2ZSBmcm9tIENoaW5hLCB0aGUgVVMgZ292ZXJubWVudCBoYXMgYmVlbiBoYW1wZXJlZCBieSBhIGxhY2sgb2YgY29vcGVyYXRpb24gZnJvbSB0aGUgdmljdGltcy4gIEluIGRvemVucyBvZiBpbnRlcnZpZXdzIHdpdGggVS5TLiBnb3Zlcm5tZW50IGFuZCBidXNpbmVzcyByZXByZXNlbnRhdGl2ZXMsIG9mZmljaWFscyBpbnZvbHZlZCBpbiBjb21tZXJjZSB3aXRoIENoaW5hIHNhaWQgaGFja2luZyBhbmQgdGhlZnQgd2VyZSBhbiBvcGVuIHNlY3JldCBmb3IgYWxtb3N0IHR3byBkZWNhZGVzLCBhbGxvd2VkIHRvIHF1aWV0bHkgY29udGludWUgYmVjYXVzZSBVLlMuIGNvbXBhbmllcyBoYWQgdG9vIG11Y2ggbW9uZXkgYXQgc3Rha2UgdG8gbWFrZSB3YXZlcy4gV2VuZHkgQ3V0bGVyLCB3aG8gd2FzIGEgdmV0ZXJhbiBuZWdvdGlhdG9yIGF0IHRoZSBPZmZpY2Ugb2YgdGhlIFUuUy4gVHJhZGUgUmVwcmVzZW50YXRpdmUsIHNheXMgaXQgd2Fzbid0IGp1c3QgdGhhdCBVLlMuIGJ1c2luZXNzZXMgd2VyZSBoZXNpdGFudCB0byBjb21lIGZvcndhcmQgaW4gc3BlY2lmaWMgY2FzZXMuIFNoZSBzYXlzIGJ1c2luZXNzZXMgZGlkbid0IHdhbnQgdGhlIHRyYWRlIG9mZmljZSB0byB0YWtlIFwiYW55IHN0cm9uZyBhY3Rpb24uXCIgXCJXZSBhcmUgbm90IGFzIGVmZmVjdGl2ZSBpZiB3ZSBkb24ndCBoYXZlIHRoZSBVLlMuIGJ1c2luZXNzIGNvbW11bml0eSBzdXBwb3J0aW5nIHVzLFwiIHNoZSBzYXlzLiBcIkxvb2tpbmcgYmFjayBvbiBpdCwgaW4gcmV0cm9zcGVjdCwgSSB0aGluayB3ZSBwcm9iYWJseSBzaG91bGQgaGF2ZSBiZWVuIG1vcmUgYWN0aXZlIGFuZCBtb3JlIHJlc3BvbnNpdmUuIFdlIGtpbmQgb2YgbG9zdCB0aGUgYmlnIHBpY3R1cmUgb2Ygd2hhdCB3YXMgcmVhbGx5IGhhcHBlbmluZy5cIiBOb25lIG9mIHRoZSBkb3plbnMgb2YgY29tcGFuaWVzIG9yIG9yZ2FuaXphdGlvbnMgdGhhdCBOUFIgcmVhY2hlZCBvdXQgdG8gdGhhdCBoYXZlIGJlZW4gdmljdGltcyBvZiB0aGVmdCBvciBjb3Jwb3JhdGUgZXNwaW9uYWdlIG9yaWdpbmF0aW5nIGZyb20gQ2hpbmEgd291bGQgZ28gb24gdGhlIHJlY29yZC4gQW5kIGZvciBpdHMgcGFydCwgdGhlIENoaW5lc2UgZ292ZXJubWVudCBvZmZpY2lhbGx5IGRlbmllZCB0byBOUFIgYW5kIEZyb250bGluZSB0aGF0IGl0IGhhcyBiZWVuIGludm9sdmVkIGluIHN1Y2ggcHJhY3RpY2VzLiAgSXQncyBlc3RpbWF0ZWQgdGhhdCBDaGluZXNlIHVuZmFpciBidXNpbmVzcyBwcmFjdGljZXMgYXJlIGNvc3RpbmcgQW1lcmljYW4gY29tcGFuaWVzICQ1NyBiaWxsaW9uIGEgeWVhci4gQnV0IHRoZSBleHBvc3VyZSBvZiBjb21wYW55IHNlY3JldHMgY2FuIG1lYW4gYW4gaW5jYWxjdWFibGUgbG9zcy4gIEJ1dCBub3cgdGhlIGltcGFjdCBvZiB0aGF0IHNlY3JlY3kgaXMgY29taW5nIHRvIGxpZ2h0LCB0aGV5IHNheS4gQ29tcGFuaWVzIGFyZSBmYWNpbmcgaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiBmdXR1cmUgbG9zc2VzIGZyb20gdGhlIHRoZWZ0LCBhbmQgVS5TLiBvZmZpY2lhbHMgc2F5IHRoZXkgYXJlIHllYXJzIGJlaGluZCB0cnlpbmcgdG8gdGFja2xlIHRoZSBwcm9ibGVtLiBNaWNoYWVsIFdlc3NlbCwgY29tbWlzc2lvbmVyIG9uIHRoZSBVLlMuIGdvdmVybm1lbnQncyBVLlMuLUNoaW5hIEVjb25vbWljIGFuZCBTZWN1cml0eSBSZXZpZXcgQ29tbWlzc2lvbiwgc2F5cyBpdCB3YXNuJ3Qgc3VwcG9zZWQgdG8gYmUgdGhpcyB3YXkuIFUuUy4gb2ZmaWNpYWxzIGhhZCBoaWdoIGhvcGVzIHdoZW4gQ2hpbmEgb2ZmaWNpYWxseSBqb2luZWQgdGhlIFdvcmxkIFRyYWRlIE9yZ2FuaXphdGlvbiBpbiAyMDAxLiBcIlRoZXJlIHdhcyBhIGhvbmV5bW9vbiBwZXJpb2QgaW4gdGhlIGZpcnN0IHNpeCBvciBzZXZlbiB5ZWFycywgYSBkZXNpcmUgdG8gdHJ5IFt0b10gbWFrZSB0aGluZ3Mgd29yayxcIiBXZXNzZWwgc2F5cy4gQnV0LCBoZSBzYXlzLCBzdGFydGluZyBhcm91bmQgMjAwNiwgYnVzaW5lc3NlcyBiZWdhbiBjb21pbmcgdG8gaGltIHNheWluZyB0aGF0IENoaW5hIGhhZCBzdG9sZW4gdGhlaXIgZGVzaWducyBvciBpZGVhcyBvciBoYWQgcHJlc3N1cmVkIHRoZW0gaW50byBwYXJ0bmVyc2hpcHMgYW5kIHRha2VuIHRoZWlyIHRlY2hub2xvZ3kuIEp1c3QgbGlrZSB3aXRoIEhpY2t0b24sIFdlc3NlbCBzYXlzLCB0aGV5IHdvdWxkbid0IGNvbWUgZm9yd2FyZCBwdWJsaWNseS4gIENoaW5hIGlzIGNvdW50aW5nIG9uIHRoaXMgY29kZSBvZiBvbWVydGEgYnkgQW1lcmljYW4gYnVzaW5lc3NlcyBhcyB0aGV5IGNvbnRpbnVlIHdpdGggYnVzaW5lc3MgYXMgdXN1YWwuIEJ1dCB5b3Ugd291bGQgdGhpbmsgdGhhdCBldmVudHVhbGx5LCBDaGluYSdzIHN0ZWFsaW5nIHdpbGwgYmVjb21lIHNvIHByZXZlbGFudCwgdGhhdCBVUyBjb21wYW5pZXMgd2lsbCBiZSBmb3JjZWQgdG8gY29vcGVyYXRlIGZvciBzZWxmIHByZXNlcnZhdGlvbi4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMTozOCIsICJ0aXRsZSI6ICJVUyBidXNpbmVzcyBpdHMgb3duIHdvcnN0IGVuZW15IGluIGZpZ2h0aW5nIENoaW5hIGhhY2tpbmcifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJIb3N0IGEgdmlzaXQiLCAiZGlzY2lwbGluIl0sICJjb3VudHJpZXMiOiBbIkNISU5BIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIzOS45Mjg5IiwgIjExNi4zODgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cuZnhzdHJlZXQuY29tL2FuYWx5c2lzL2ZlZC1jYW5kaWRhdGVzLWNyb3NzLWEtbGluZS1pbGxpbm9pcy1maW5kcy1pdHMtd2F5LTIwMTkwNDE0MTUzNiIsICJjb250ZW50IjogIklsbGlub2lzIGlzIGEgbWVkaWFuIGFtb25nIFUuUy4gc3RhdGVzLiBHZW9ncmFwaGljYWxseSwgaXQgc2l0cyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBjb3VudHJ5LiBPZiB0aGUgNTAgc3RhdGVzIGluIHRoZSB1bmlvbiwgaXQgd2FzIGNocm9ub2xvZ2ljYWxseSB0aGUgMjFzdCB0byBlbnRlci4gQnkgbGFuZCBhcmVhLCBpdCBpcyB0aGUgMjV0aCBsYXJnZXN0IHN0YXRlLCBjb25uZWN0aW5nIHRoZSBHcmVhdCBMYWtlcyBvbiBpdHMgZWFzdCB0byB0aGUgTWlzc2lzc2lwcGkgUml2ZXIgb24gaXRzIHdlc3QuIEl0cyBwb3B1bGF0aW9uIGFuZCBlY29ub215IGhhdmUgbXVjaCBpbiBjb21tb24gd2l0aCB0aGUgcmVzdCBvZiB0aGUgY291bnRyeS4gICAgICBMaWtlIG1hbnkgc3RhdGVzLCBJbGxpbm9pcyBtdXN0IHN0cmlrZSBhIGJhbGFuY2UgYmV0d2VlbiBpdHMgdXJiYW4gY29yZSwgQ2hpY2Fnbywgd2hpY2ggY29udGFpbnMgdGhlIG1ham9yaXR5IG9mIGl0cyBwb3B1bGF0aW9uOyBhbmQgdGhlIHJ1cmFsIGV4cGFuc2UgdGhhdCByZXByZXNlbnRzIHRoZSBtYWpvcml0eSBvZiBpdHMgc3BhY2UgYW5kIG5hdHVyYWwgcmVzb3VyY2VzLiBJdHMgY2FwaXRhbCwgU3ByaW5nZmllbGQsIHNpdHMgaW4gdGhlIG1pZGRsZSBvZiB0aGUgc3RhdGUsIGEgdGhyZWUtaG91ciBkcml2ZSBmcm9tIENoaWNhZ28sIGFzc3VtaW5nIG5vIHRyYWZmaWMuIFRoZSBjb25jZXJucyBvZiB1cmJhbiByZXNpZGVudHMsIGxpa2UgZ2FuZyB2aW9sZW5jZSBhbmQgcHVibGljIHRyYW5zaXQsIGFyZSB1bmZhbWlsaWFyIHRvIHRob3NlIGluIHRoZSByZXN0IG9mIHRoZSBzdGF0ZS4gVGhlc2UgZGlmZmVyZW5jZXMgaW4gbG9jYXRpb24gYW5kIGxpZmVzdHlsZSBhcmUgbXVjaCBsaWtlIHRoZSBnYXBzIGJldHdlZW4gTmV3IFlvcmsgQ2l0eSBhbmQgQWxiYW55OyBMb3MgQW5nZWxlcyBhbmQgU2FjcmFtZW50bzsgTWlhbWkgYW5kIFRhbGxhaGFzc2VlLiAgICAgIElsbGlub2lzIGlzIGFsc28gZW1ibGVtYXRpYyBvZiB0aGUgZGlyZSBmaXNjYWwgc3RhdGUgb2YgVS5TLiBzdGF0ZXMuIFdoaWxlIElsbGlub2lzIGZhY2VzIGEgdW5pcXVlbHkgZGlmZmljdWx0IGNoYWxsZW5nZSwgaXQgb2ZmZXJzIGxlc3NvbnMgdG8gb3RoZXJzIHNlZWtpbmcgdG8gYXZvaWQgYmFkIG91dGNvbWVzLiAgICAgICAgQXMgd2UgZGlzY3Vzc2VkIGxhc3QgeWVhciwgZGVjYWRlcyBvZiBuZWdsZWN0IGluIGZ1bmRpbmcgcGVuc2lvbnMgZm9yIHN0YXRlIHdvcmtlcnMgZHJvdmUgSWxsaW5vaXNcdTIwMTkgZmluYW5jZXMgdG8gdGhlIGJyaW5rIG9mIGEganVuayBjcmVkaXQgcmF0aW5nLCB3aGlsZSBhIHBvbGl0aWNhbCBzdGFuZG9mZiBuZWFybHkgYnJvdWdodCB0aGUgc3RhdGUgdG8gaW5zb2x2ZW5jeS4gSWxsaW5vaXMgaGFzIGFsc28gYm9ybmUgdGhlIGRvd25zaWRlIHJpc2tzIG9mIHRyYWRlIGNvbmZsaWN0cy4gSWxsaW5vaXNcdTIwMTkgZmFybWVycyBoYXZlIG1hZGUgaXQgdGhlIGxlYWRpbmcgcHJvZHVjZXIgb2Ygc295YmVhbnMgYW1vbmcgVS5TLiBzdGF0ZXMsIHdoaWxlIGl0cyBhbHJlYWR5LXN0cnVnZ2xpbmcgbWFudWZhY3R1cmVycyBoYWQgdG8gYWJzb3JiIGhpZ2hlciBzdGVlbCBhbmQgYWx1bWludW0gcHJpY2VzLiAgICAgIFNpbmNlIG91ciBsYXN0IHdyaXRpbmcsIGEgbmV3IGdvdmVybm9yIGhhcyB0YWtlbiBvZmZpY2UuIFRoZSBleHBlbnNpdmUgY2FtcGFpZ24gYmV0d2VlbiB0d28gc2VsZi1mdW5kZWQgYnVzaW5lc3NtZW4gaGFzIGJlZW4gYSByZWN1cnJpbmcgdGhlbWUgaW4gbWFueSBndWJlcm5hdG9yaWFsIHJhY2VzLiBBbHNvIGNvbW1vbiBhY3Jvc3MgdGhlIGNvdW50cnkgaGFzIGJlZW4gdGhlIFx1MjAxY291dHNpZGVyc1x1MjAxZCBwcm9taXNpbmcgdG8gbGVhZCB3aXRoIGEgYnVzaW5lc3MgcGVyc3BlY3RpdmUgaW5zdGVhZCBvZiB0aGUgZW50cmVuY2hlZCB2aWV3cyBvZiBjYXJlZXIgcG9saXRpY2lhbnMuICAgICAgVGhlIG5ldyBnb3Zlcm5vciwgSi4gQi4gUHJpdHprZXIsIHJlY29nbml6ZXMgdGhlIG5lZWQgZm9yIGRyYXN0aWMgZmlzY2FsIGFjdGlvbi4gSWxsaW5vaXNcdTIwMTlzIGNvbnN0aXR1dGlvbiB1bmlxdWVseSBmb3JiaWRzIGEgZ3JhZHVhdGVkIGluY29tZSB0YXggYW5kIGNvbnRhaW5zIHN0cmljdCBwcm90ZWN0aW9uIGZvciBwdWJsaWMgd29ya2Vyc1x1MjAxOSBwZW5zaW9ucy4gVGhlIHN0YXRlXHUyMDE5cyBjdXJyZW50IGZsYXQgaW5jb21lIHRheCBhbmQgc2FsZXMgdGF4IHB1dCBhIHJlZ3Jlc3NpdmVseSBoaWdoZXIgdGF4IGJ1cmRlbiBvbiBsb3dlciBlYXJuZXJzLiBBbWVuZGluZyB0aGUgY29uc3RpdHV0aW9uIGlzIG9uIFByaXR6a2VyXHUyMDE5cyBhZ2VuZGEsIGJ1dCBhbiBhbWVuZG1lbnQgY2Fubm90IGJlIGJyb3VnaHQgZm9yIGEgdm90ZSB1bnRpbCBOb3ZlbWJlciAyMDIwIGFuZCB3aWxsIG5vdCBiZSBpbiBwbGFjZSB1bnRpbCAyMDIxIGF0IGVhcmxpZXN0LiAgICAgIEV2ZW4gaWYgdGhlIGNvbnN0aXR1dGlvbmFsIHJlc3RyaWN0aW9uIGlzIGxpZnRlZCwgdGhlIGZ1dHVyZSB0YXggb3V0bG9vayBpcyB1bmNlcnRhaW4uIFByaXR6a2VyIGhhcyBwcm9wb3NlZCBhIGdyYWR1YXRlZCBpbmNvbWUgdGF4IHBsYW4sIG5vdGFibGUgZm9yIGl0cyBtaWxsaW9uYWlyZVx1MjAxOXMgdGF4OiBUYXhwYXllcnMgZWFybmluZyBvdmVyICQxLDAwMCwwMDAgd291bGQgbG9zZSB0aGVpciBtYXJnaW5hbCB0YXggaW5jcmVhc2VzIGFuZCBpbnN0ZWFkIHNlZSBhbGwgaW5jb21lIHRheGVkIGF0IHRoZSBoaWdoZXN0IHJhdGUuIFRoZSBwcm9wb3NhbCBpcyBpbXBlcmZlY3QgYW5kIG5vdCBiaW5kaW5nLCBidXQgaXQgZ2l2ZXMgYSBjbGVhciBzaWduYWwgb2Ygd2hlcmUgdGF4ZXMgYXJlIGdvaW5nLiAgICAgIFRoZSByaXNrcyBhbmQgY29zdHMgb2YgdGF4IGluY3JlYXNlcyBoYXZlIGdyb3duIGluIGxpZ2h0IG9mIHRoZSAyMDE3IFRheCBDdXRzIGFuZCBKb2JzIEFjdCAoVENKQSkuIE9uZSBvZiBUQ0pBXHUyMDE5cyBtb3N0IHN1YnN0YW50aWFsIGNoYW5nZXMgd2FzIGl0cyBsaW1pdGF0aW9uIG9mICQxMCwwMDAgc3RhdGUgYW5kIGxvY2FsIHRheCAoU0FMVCkgZGVkdWN0aW9ucyBhZ2FpbnN0IGZlZGVyYWwgaW5jb21lIHRheC4gQmVmb3JlIHRoaXMgY2FwLCByZXNpZGVudHMgb2YgaGlnaGVyLXRheCBzdGF0ZXMgY291bGQgZmluZCBzb21lIGNvbnNvbGF0aW9uIGluIHJlZHVjaW5nIHRoZWlyIGZlZGVyYWwgdGF4IGJ1cmRlbiB3aXRoIHRoZWlyIHN1YnN0YW50aWFsIHN0YXRlIGluY29tZSBhbmQgcHJvcGVydHkgdGF4ZXMuIFdpdGggdGhlIFNBTFQgY2FwLCBldmVyeSBsb2NhbCB0YXggaW5jcmVhc2UgY2FycmllcyBhIGhpZ2hlciByZWFsIGNvc3QgdG8gdGF4cGF5ZXJzLiAgICAgIENvbXBldGl0aW9uIGFtb25nIHN0YXRlcyBjYW5ub3QgYmUgaWdub3JlZC4gV2hpbGUgZWNvbm9taWMgZGV2ZWxvcG1lbnQgaW5jZW50aXZlcyBjYW4gYmUgYSByYWNlIHRvIHRoZSBib3R0b20sIHRoZSBoaWdoZXIgYSBzdGF0ZVx1MjAxOXMgdGF4IHJhdGVzIHJpc2UsIHRoZSBtb3JlIHRlbXB0aW5nIGl0IGlzIGZvciBidXNpbmVzc2VzIGFuZCByZXNpZGVudHMgdG8gcmVsb2NhdGUuIElsbGlub2lzIGhhcyBiZWVuIGxvc2luZyBwb3B1bGF0aW9uIGZvciBmaXZlIHllYXJzIHJ1bm5pbmcuICAgICAgICAgICAgUHJpdHprZXIgaGFzIG1hZGUgbW9yZSBpbW1lZGlhdGUgcHJvcG9zYWxzIHRvIHJhaXNlIGFkZGl0aW9uYWwgc3RhdGUgcmV2ZW51ZSB3aXRob3V0IGluY29tZSB0YXggY2hhbmdlcy4gSWYgYWxsIHByb3Bvc2FscyBhcmUgaW1wbGVtZW50ZWQsIHRoZXkgY291bGQgcmFpc2Ugb3ZlciAkMS4xIGJpbGxpb24gaW4gYWRkaXRpb25hbCBhbm51YWwgcmV2ZW51ZSBmb3IgdGhlIHN0YXRlLCBhIGdvb2Qgc3RhcnQgYnV0IG5vdCBzdWZmaWNpZW50IHRvIGNsb3NlIGl0cyBzdHJ1Y3R1cmFsIGRlZmljaXQgb2YgJDMuMiBiaWxsaW9uLiAgICAgIFdpdGggc28gbWFueSBjYXRlZ29yaWVzIG9mIHRheGVzIGFuZCBmZWVzLCBjb21wYXJpbmcgdGF4IGJ1cmRlbnMgYmV0d2VlbiBzdGF0ZXMgaXMgbnVhbmNlZC4gTm8gc3RhdGUgaGFzIHplcm8gdGF4ZXMsIGFuZCB0aG9zZSB3aXRoIGxvdyBvciBubyB0YXhlcyBpbiBvbmUgY2F0ZWdvcnkgKGxpa2UgVGV4YXNcdTIwMTkgbGFjayBvZiBhbiBpbmNvbWUgdGF4KSBtYWtlIHVwIGZvciBpdCB3aXRoIG90aGVycyAobGlrZSB0aGUgTG9uZSBTdGFyIHN0YXRlXHUyMDE5cyBoaWdoIHByb3BlcnR5IHRheGVzKS4gVG9kYXksIElsbGlub2lzXHUyMDE5IGNvbWJpbmVkIHRheCBidXJkZW4gbGVhdmVzIGl0IHNvbWUgaGVhZHJvb20gdG8gaW5jcmVhc2UgdGF4ZXMsIGJ1dCBub3QgYnkgbXVjaC4gICAgICBUaGUgcGVuc2lvbiBmdW5kaW5nIGdhcCBzdGFydGVkIHdpdGggYSBkZWNpc2lvbiBpbiB0aGUgbWlkLTE5OTBzIHRvIGRlZmVyIGEgc21hbGwgcG9ydGlvbiBvZiBwZW5zaW9uIHBheW1lbnRzLiBVbmZvcnR1bmF0ZWx5IGZvciB0b2RheVx1MjAxOXMgSWxsaW5vaXMgdGF4cGF5ZXJzLCB0aGUgZGVmZXJyYWwgd2FzIGFuIGVmZmVjdGl2ZSB0b29sIHRvIGJhbGFuY2UgdGhlIGJ1ZGdldC4gU3Vic2VxdWVudCBnb3Zlcm5vcnMgcm91dGluZWx5IHVuZGVyZnVuZGVkIHRoZSBwZW5zaW9uIG9yIHBhaWQgYnkgaXNzdWluZyBib25kcy4gVGhlIHN0YXRlIHRvb2sgMjUgeWVhcnMgdG8gcmVhY2ggaXRzIGN1cnJlbnQgc3RyYWl0cywgYW5kIGl0IHdpbGwgdGFrZSBhIHNpbWlsYXIgZHVyYXRpb24gb2YgZmlzY2FsIHJlc3RyYWludCB0byByZWNvdmVyIGZyb20gaXQuIEV2ZW4gUHJpdHprZXJcdTIwMTlzIG93biBidWRnZXQgcHJvcG9zYWwsIGZ1bGwgb2YgdGF4IGFuZCBmZWUgaW5jcmVhc2VzLCBlbnZpc2lvbnMgdGhlIHBlbnNpb24gcHJvZ3JhbSByZWFjaGluZyBhIGZ1bmRlZCByYXRpbyBvZiBvbmx5IDY1JSBieSB0aGUgeWVhciAyMDQ1LiAgICAgIEEgc2xvdyBzbG9nIGlzIHRoZSBvbmx5IHJlYWxpc3RpYyBhcHByb2FjaC4gQmFua3J1cHRjeSBpcyBub3QgYW4gb3B0aW9uLCBhcyB0aGUgZmVkZXJhbCBiYW5rcnVwdGN5IGNvZGUgZG9lcyBub3QgYWxsb3cgc3RhdGVzIHRvIHVuZGVyZ28gcmVvcmdhbml6YXRpb24uIEFueSBhdHRlbXB0IHRvIHNlZWsgYSBiYWlsb3V0IGZyb20gdGhlIGZlZGVyYWwgZ292ZXJubWVudCB3b3VsZCBmYWNlIHN0cmlkZW50IG9iamVjdGlvbnMgZnJvbSB0aGUgb3RoZXIgNDkgc3RhdGVzIHRoYXQgZXhlcmNpc2VkIGZpc2NhbCBkaXNjaXBsaW5lLCBzZXR0aW5nIHVwIGEgcHJvbG9uZ2VkIGZpZ2h0IHdpdGggYW4gdW5jZXJ0YWluIG91dGNvbWUuICAgICAgSWxsaW5vaXNcdTIwMTkgcGFpbiBpcyBub3QgZm9yIG5hdWdodCBpZiBvdGhlciBzdGF0ZXMgbGVhcm4gZnJvbSB0aGlzIGVwaXNvZGUuIE1vc3Qgc3RhdGVzIG9mZmVyIGdlbmVyb3VzIHBlbnNpb24gcGxhbnMsIGFuZCBmaXhlZCBpbmNvbWUgaW52ZXN0b3JzIGFyZSBoYXBweSB0byBwdXJjaGFzZSBzdGF0ZSBib25kcy4gVGhlIHRlbXB0YXRpb24gdG8gdW5kZXJmdW5kIGEgcGVuc2lvbiB3aWxsIGFsd2F5cyBiZSBwcmVzZW50LCBidXQgaXQgaXMgZm9sbHkuIEFzIHJlY2VudGx5IGFzIDIwMTAsIElsbGlub2lzIHdhcyBqdXN0IG9uZSBvZiBzZXZlcmFsIGhpZ2gtcmlzayBzdGF0ZXMsIHdpdGggYW5hbHlzdHMgZXF1YWxseSB3b3JyaWVkIGFib3V0IHRoZSBmaXNjYWwgY29uZGl0aW9ucyBvZiBDYWxpZm9ybmlhLCBOZXcgSmVyc2V5IGFuZCBPaGlvLiBUaGVzZSBvdGhlciByaXNreSBzdGF0ZXMgdG9vayB0aGVpciBtZWRpY2luZSB0byBjb3JyZWN0IHRoZWlyIGZpc2NhbCBnYXBzOiBOZXcgSmVyc2V5IHJhaXNlZCBpdHMgcHJvcGVydHkgdGF4ZXMgdG8gdGhlIGhpZ2hlc3QgcmF0ZXMgaW4gdGhlIG5hdGlvbjsgQ2FsaWZvcm5pYSBib29zdGVkIGl0cyBpbmNvbWUgYW5kIHNhbGVzIHRheGVzLiBPaGlvIGhhcyBwcm92aWRlZCBhbiBlbmNvdXJhZ2luZyBleGFtcGxlIG9mIGEgcmVjb3Zlcnkgd2l0aG91dCBhIHRheCBpbmNyZWFzZSwgYXMgZGlzY2lwbGluZWQgc3BlbmRpbmcgYW1pZCBhbiBlY29ub21pYyByZWNvdmVyeSBoZWxwZWQgdG8gYmFsYW5jZSBpdHMgYnVkZ2V0LiAgICAgIElsbGlub2lzIGhhcyBhIGxvbmcgaGlzdG9yeSBvZiBjaGFuZ2UuIFRoZSBuYXRpdmVzIGluIENhaG9raWEsIGFuZCBMYXR0ZXIgRGF5IFNhaW50cyBpbiBOYXV2b28sIG1vdmVkIG9uIGZyb20gdGhlaXIgc2V0dGxlbWVudHM7IENoaWNhZ28gcmVidWlsdCBmcm9tIGEgZGV2YXN0YXRpbmcgZmlyZS4gVG9kYXksIHRoZSBtb3N0IHN1Y2Nlc3NmdWwgcmVnaW9ucyBpbiB0aGUgVS5TLiBhcmUgdGhvc2UgdGhhdCBoYXZlIHBsYW5uZWQgd2VsbCBhbmQgYWRhcHRlZCBxdWlja2x5IHRvIG1lZXQgdG9kYXlcdTIwMTlzIGVjb25vbWljIG5lZWRzLiBUaGUgc29vbmVyIGFuZCBtb3JlIGRlY2lzaXZlbHkgSWxsaW5vaXMgbGVhZGVycyBhY3QgdG8gY29ycmVjdCB0aGUgc3RhdGVcdTIwMTlzIHNob3J0Y29taW5ncywgdGhlIGJldHRlciB0aGUgZnV0dXJlIHdpbGwgYmUgZm9yIHRob3NlIG9mIHVzIHdobyBsaXZlIGhlcmUuICAgICAgRnJlbmVtaWVzICAgICAgTGFzdCBPY3RvYmVyLCBKYXBhbmVzZSBQcmltZSBNaW5pc3RlciBTaGluelx1MDE0ZCBBYmUgYXJyaXZlZCBpbiBCZWlqaW5nIGZvciB0aGUgZmlyc3QgYmlsYXRlcmFsIHRyaXAgYnkgYSBKYXBhbmVzZSBsZWFkZXIgdG8gQ2hpbmEgaW4gc2V2ZW4geWVhcnMuIFRoZSB2aXNpdCB3YXMgbm9taW5hbGx5IGludGVuZGVkIHRvIGNvbW1lbW9yYXRlIHRoZSA0MHRoIGFubml2ZXJzYXJ5IG9mIHRoZSBUcmVhdHkgb2YgUGVhY2UgYW5kIEZyaWVuZHNoaXAuIE1vcmUgYnJvYWRseSwgaG93ZXZlciwgdGhlIGRpcGxvbWF0aWMgZFx1MDBlOXRlbnRlLCBpbml0aWF0ZWQgaW4gMjAxNyBhZnRlciB5ZWFycyBvZiBlbmR1cmluZyByaXZhbHJ5LCBjYW4gYmUgYXR0cmlidXRlZCB0byB0aGUgY291bnRyaWVzXHUyMDE5IGNvbW1vbiBpbnRlcmVzdCBpbiBzdGFuZGluZyB1cCB0byBVLlMuIHRyYWRlIHJlc3RyaWN0aW9ucy4gICAgICBEZXNwaXRlIHNvbWUgdW5mb3J0dW5hdGUgaGlzdG9yeSBhbmQgaW1wb3J0YW50IHN0cmF0ZWdpYyBkaWZmZXJlbmNlcywgdHJhZGUgYmV0d2VlbiB0aGUgdHdvIEFzaWFuIHJpdmFscyBoYXMgZmxvdXJpc2hlZC4gRm9yIEphcGFuZXNlIGNvbXBhbmllcywgQ2hpbmEgaXMgbm90IG9ubHkgdGhlIHdvcmxkXHUyMDE5cyBmYWN0b3J5IGJ1dCBpcyBhbHNvIGEga2V5IGNvbnN1bWVyIG9mIHRoZWlyIHByb2R1Y3RzLiBDaGluYSBoYXMgZW1lcmdlZCBhcyB0aGUgdG9wIGRlc3RpbmF0aW9uIGZvciBKYXBhbmVzZSBwcm9kdWN0czogaXRzIHNoYXJlIG9mIHRvdGFsIEphcGFuZXNlIGV4cG9ydHMgaGFzIGluY3JlYXNlZCBzaWduaWZpY2FudGx5IGZyb20ganVzdCA1JSBpbiAxOTk4IHRvIDIwJSBpbiAyMDE4LiBPdmVyIHRoZSBzYW1lIHRpbWUgcGVyaW9kLCB0aGUgVS5TLiBzaGFyZSBvZiBleHBvcnRzIGZyb20gSmFwYW4gaGFzIGRlY2xpbmVkIGZyb20gMzElIHRvIDE5JS4gICAgICBUaG91Z2ggSmFwYW4gaGFzIG1hbmFnZWQgdG8gZGl2ZXJzaWZ5IGl0cyBleHBvcnQgbWFya2V0cywgaXQgcmVsaWVzIGhlYXZpbHkgb24gdGhlIFVuaXRlZCBTdGF0ZXMgZm9yIGl0cyBkZWZlbnNlLiBKYXBhblx1MjAxOXMgcG9saXRpY2FsIGFuZCBlY29ub21pYyBzeXN0ZW1zIGFyZSBzaW1pbGFyIHRvIHRob3NlIGluIHRoZSBVLlMuLCBhbmQgSmFwYW4gc2hhcmVzIHRoZSBBbWVyaWNhbiBnb2FsIG9mIGN1cmJpbmcgQ2hpbmFcdTIwMTlzIGdyb3dpbmcgaW5mbHVlbmNlIGluIHRoZSBBc2lhLVBhY2lmaWMgcmVnaW9uIChpbmNsdWRpbmcgaW4gdGhlIFNvdXRoIENoaW5hIFNlYSkuIEluIGFkZGl0aW9uLCBKYXBhbiBhbmQgQ2hpbmEgaGF2ZSByaXZhbCBkZXZlbG9wbWVudCBiYW5rcyBhaW1lZCBhdCBoZWxwaW5nIGVtZXJnaW5nIEFzaWFuIG5hdGlvbnMuICAgICAgSmFwYW5cdTIwMTlzIGluY3JlYXNlZCByZWxpYW5jZSBvbiBDaGluZXNlIGRlbWFuZCBoYXMgbGVkIHRvIGNvbmNlcm5zIG92ZXIgd2hldGhlciB0aGUgd2Vha2VuaW5nIENoaW5lc2UgZWNvbm9teSB3aWxsIGJyaW5nIEphcGFuIGRvd24gd2l0aCBpdC4gRXhwb3J0cyB0byBDaGluYSBoYXZlIGFsc28gZGVjcmVhc2VkIG5vdGFibHkgb24gdGhlIGJhY2sgb2YgdGhlIHNsb3dpbmcgQ2hpbmVzZSBlY29ub215LiBFbGV2YXRlZCB0cmFkZSB1bmNlcnRhaW50eSBoYXMgYmVlbiB3ZWlnaGluZyBvbiBKYXBhbmVzZSBleHBvcnRzLiAgICAgIEphcGFuXHUyMDE5cyBpbmNyZWFzaW5nIGRlcGVuZGVuY2Ugb24gQ2hpbmVzZSBkZW1hbmQgaXMgdmlzaWJsZSBhY3Jvc3Mgc2V2ZXJhbCBpbmR1c3RyaWVzIGFzIHRoZSBzdHJ1Y3R1cmUgb2YgZXhwb3J0cyBoYXMgZXZvbHZlZCBjb25zaWRlcmFibHkgc2luY2UgdGhlIGVhcmx5IDIwMDBzLiBBdCBvbmUgcG9pbnQsIEphcGFuXHUyMDE5cyBleHBvcnRzIHdlcmUgb25seSBhc3NlbWJsZWQgaW4gQ2hpbmEgYmVmb3JlIGJlaW5nIHJlLWV4cG9ydGVkIHRvIEphcGFuIGFuZCBvdGhlciBlY29ub21pZXMuIFRodXMsIENoaW5lc2UgZGVtYW5kIGhhZCBvbmx5IGEgbGltaXRlZCBpbXBhY3Qgb24gSmFwYW5lc2UgZXhwb3J0cy4gICAgICBJbiBsYXN0IGZldyB5ZWFycywgaG93ZXZlciwgSmFwYW5lc2UgZ29vZHMgaGF2ZSBiZWVuIGRpcmVjdGx5IGNhdGVyaW5nIHRvIENoaW5hXHUyMDE5cyBkb21lc3RpYyBkZW1hbmQuIFNhbGVzIG9mIEphcGFuZXNlIGZpbmFsIHByb2R1Y3RzIHRvIENoaW5hIGhhdmUgaW5jcmVhc2VkIHNpZ25pZmljYW50bHkgc2luY2UgdGhlIGVhcmx5IDIwMDBzIGZyb20gYXJvdW5kIDM0JSB0byA3NCUgb2YgdG90YWwgc2FsZXMuIFRoZSBDaGluZXNlIG1pZGRsZSBjbGFzcyBoYXMgZ3Jvd24sIGFuZCBncm93biB3ZWFsdGhpZXIsIHN0aW11bGF0aW5nIGRlbWFuZCBmb3IgSmFwYW5lc2UgcHJvZHVjdHMuICAgICAgICAgICAgV2Vha2VyIENoaW5lc2UgZGVtYW5kIGlzblx1MjAxOXQgdGhlIG9ubHkgY29uY2VybiBmb3IgSmFwYW5lc2UgZXhwb3J0ZXJzLiBDaGluYSBoYXMgdHJhbnNpdGlvbmVkIGl0c2VsZiBmcm9tIG1hbnVmYWN0dXJpbmcgdGV4dGlsZXMgYW5kIHRveXMgdG8gcHJvZHVjdGlvbiBvZiBoaWdoLXRlY2ggY29tcG9uZW50cywgbWFjaGluZXJ5IGFuZCBlbGVjdHJvbmljcy4gVGhlIHBlcmNlbnRhZ2Ugb2YgdmFsdWUtYWRkZWQgcHJvZHVjdHMgbWFkZSBkb21lc3RpY2FsbHkgZm9yIGV4cG9ydHMgdG91Y2hlZCA4NyUgaW4gQ2hpbmEgY29tcGFyZWQgdG8gSmFwYW4gYXQgNzklIGluIDIwMTguIENoaW5lc2UgY29tcGFuaWVzIGFyZSBub3cgbW9yZSBkaXJlY3QgY29tcGV0aXRvcnMgZm9yIEphcGFuZXNlIGZpcm1zLiAgICAgIEJleW9uZCB0cmFkZSwgQ2hpbmEgaXMgYWxzbyBhbiBpbXBvcnRhbnQgc291cmNlIG9mIG92ZXJzZWFzIGludmVzdG1lbnQgYW5kIHRvdXJpc20gdG8gSmFwYW4uIEJ1dCBvd2luZyB0byBDaGluYVx1MjAxOXMgcHJvdGVjdGl2ZSByZWdpbWUsIEphcGFuXHUyMDE5cyBkaXJlY3QgaW52ZXN0bWVudCB0byBDaGluYSBoYXMgZ3Jvd24gc2x1Z2dpc2hseS4gQ2hpbmEgYWNjb3VudHMgZm9yIG9ubHkgNS43JSBvZiBKYXBhblx1MjAxOXMgdG90YWwgb3V0d2FyZCBmb3JlaWduIGRpcmVjdCBpbnZlc3RtZW50LiBCeSBjb250cmFzdCwgSmFwYW4gaGFzIG1hZGUgYSBjb25zaWRlcmFibGUgYW1vdW50IG9mIGRpcmVjdCBpbnZlc3RtZW50IChhcm91bmQgJDQ3MCBiaWxsaW9uKSBpbiB0aGUgVS5TLiwgcGFydGljdWxhcmx5IGluIHRoZSB3aG9sZXNhbGUgdHJhZGUgYW5kIG1hbnVmYWN0dXJpbmcgc2VjdG9ycy4gICAgICBGb3IgSmFwYW4sIGJhbGFuY2luZyB0aGUgZWNvbm9taWMgYW5kIHN0cmF0ZWdpYyBhc3BlY3RzIG9mIGl0cyByZWxhdGlvbnNoaXAgd2l0aCBDaGluYSBpcyBkaWZmaWN1bHQuIFRoZSB0YXNrIHdpbGwgYmVjb21lIGV2ZW4gaGFyZGVyIGlmIHRoZSB3ZWRnZSBiZXR3ZWVuIFdhc2hpbmd0b24gYW5kIEJlaWppbmcgd2lkZW5zIGZ1cnRoZXIuIEJ1dCBmb3Igbm93LCB0aGUgSmFwYW5lc2Ugc2VlbSB0byBoYXZlIGtlcHQgdGhlIHR3byByZWFsbXMgZnJvbSBpbnRlcmZlcmluZyB3aXRoIG9uZSBhbm90aGVyLiBUaGVpciBleHBlcmllbmNlIG1pZ2h0IGJlIGEgdXNlZnVsIGxlc3NvbiBmb3Igb3RoZXJzLiAgICAgIE5vIFBsYWNlIGZvciBQYXJ0aXNhbnMgICAgICBTaW5jZSBpdHMgZXN0YWJsaXNobWVudCBtb3JlIHRoYW4gMTAwIHllYXJzIGFnbywgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBCb2FyZCBoYXMgaW5jbHVkZWQgZ292ZXJub3JzIHdpdGggYSBicm9hZCByYW5nZSBvZiBiYWNrZ3JvdW5kcywgcG9saXRpY2FsIHZpZXdzIGFuZCBsaWZlIGV4cGVyaWVuY2VzLiBTb21lIGhhdmUgYmVlbiBsb3VkLCBvdGhlcnMgcXVpZXQ7IHNvbWUgYXJlIGFjYWRlbWljcywgd2hpbGUgb3RoZXJzIGNvbWUgZnJvbSBpbmR1c3RyeS4gT3JnYW5pemF0aW9ucyB0aGF0IGludml0ZSBhIGRpdmVyc2l0eSBvZiB0aG91Z2h0IHR5cGljYWxseSBtYWtlIGJldHRlciBjaG9pY2VzIHRoYW4gdGhvc2Ugd2l0aCBtb3JlIGhvbW9nZW5lb3VzIGNvbnN0aXR1dGlvbnMuICAgICAgV2hpbGUgbWFueSBGZWQgZGVjaXNpb25zIGFyZSB1bmFuaW1vdXMsIGRlYmF0ZSB3aXRoaW4gdGhlIHdhbGxzIGlzIGFjdGl2ZSBhbmQgZGlzc2VudHMgZG8gb2NjdXIuIFRob3NlIHdobyBzdWdnZXN0IHRoZSBCb2FyZCBpcyBtaXJlZCBpbiBncm91cHRoaW5rIHNob3VsZCBoYXZlIGEgY2xvc2VyIGxvb2sgYXQgdGhlIG1pbnV0ZXMsIG1lZXRpbmcgdHJhbnNjcmlwdHMgYW5kIGZvcmVjYXN0IGRpc3BlcnNpb24uIEJ1dCB3aGlsZSBwYXJ0aWNpcGFudHMgaGF2ZSB0aGVpciBkaWZmZXJlbmNlcywgdGhlIEZlZFx1MjAxOXMgY3VsdHVyZSBpcyBjb25zZW5zdXMtZHJpdmVuIGFuZCBhcG9saXRpY2FsLiBUaGlzIGNoYXJhY3RlciBhbGxvd3MgaXQgdG8gdGFrZSBhIGxvbmcgdmlldyBhbmQgbGVhbiBhZ2FpbnN0IG1hcmtldHMgYW5kIGZpc2NhbCBzdHJhdGVneSB3aGVuIG5lY2Vzc2FyeS4gICAgICBUaGUgcHJvcG9zZWQgbm9taW5hdGlvbnMgb2YgU3RlcGhlbiBNb29yZSBhbmQgSGVybWFuIENhaW4gdG8gdGhlIGJvYXJkIG9mIGdvdmVybm9ycyB0aHJlYXRlbiB0byBjb21wcm9taXNlIHRoZSBGZWRcdTIwMTlzIHN0cm9uZyBjaGFyYWN0ZXIuIEJvdGggaGF2ZSBiZWVuIG1ham9yIGZ1bmRyYWlzZXJzIGZvciB0aGUgcHJlc2lkZW50LCBhbmQgYm90aCBoYXZlIHBsZWRnZWQgdG8gdXNlIHRoZWlyIHBvc3RzIG9uIHRoZSBCb2FyZCB0byBzdXBwb3J0IHRoZSBXaGl0ZSBIb3VzZSBwcm9ncmFtLiBUaGV5IHNlZW0gaW50ZW50IG9uIGJyaW5naW5nIGEgcG9saXRpY2FsIGFnZW5kYSBpbnRvIGEgZm9ydW0gdGhhdCB0cmllcyB0byBvcGVyYXRlIHdpdGhvdXQgb25lLiAgICAgICAgICAgIFRoZSBwcm9wb3NlZCBzZWxlY3Rpb25zIG9mIE1vb3JlIGFuZCBDYWluIGNvbWUgb24gdGhlIGJhY2sgb2YgdGhlIHByZXNpZGVudFx1MjAxOXMgcmVjZW50IGNyaXRpY2lzbSBvZiBKYXkgUG93ZWxsLCB0aGUgRmVkIGNoYWlybWFuLiBJbiB0aGUgbW9zdCByZWNlbnQgc2Fsdm8sIHRoZSBwcmVzaWRlbnQgYXBwYXJlbnRseSB0b2xkIFBvd2VsbCwgXHUyMDFjSSBndWVzcyBJXHUyMDE5bSBzdHVjayB3aXRoIHlvdS5cdTIwMWQgICAgICBUaGlzIGlzblx1MjAxOXQgdGhlIGZpcnN0IHRpbWUgYSB3b3JsZCBsZWFkZXIgaGFzIHByZXNzZWQgZm9yIGVhc2llciBtb25leSB0byBhY2NvbW1vZGF0ZSBmaXNjYWwgaW1iYWxhbmNlcyBvciBib29zdCBwb2xpdGljYWwgZm9ydHVuZXMuIEJ1dCBzdWNoIGNhbXBhaWducyBjcmVhdGUgbG9uZy10ZXJtIHByb2JsZW1zIHRoYXQgdWx0aW1hdGVseSBwcm92ZSBoYXJtZnVsLiAgICAgIFRoZSBGZWQgaXMgbm90IGluZmFsbGlibGUsIGFuZCBvYnNlcnZlcnMgaGF2ZSBmcmVxdWVudGx5IGRpc2FncmVlZCB3aXRoIGl0cyBkZWNpc2lvbnMuIEJ1dCB0aG9zZSBkZWNpc2lvbnMgYXJlIHRha2VuIHdpdGggdGhlIGxvbmctdGVybSBpbnRlcmVzdHMgb2YgdGhlIGVjb25vbXkgaW4gbWluZCwgYW5kIG1hZGUgb24gdGhlIGJhc2lzIG9mIHRoZSBiZXN0IGF2YWlsYWJsZSBpbmZvcm1hdGlvbi4gVGhlIGRlc2lyZSB0byBmYXZvciBvbmUgcGFydHkgb3IgYW5vdGhlciBkb2Vzblx1MjAxOXQgZW50ZXIgaW50byB0aGUgZGlzY3Vzc2lvbi4gICAgICBUaGVyZSBpcyBubyBndWFyYW50ZWUgdGhhdCBNb29yZSBhbmQgQ2FpbiB3aWxsIHVsdGltYXRlbHkgYmUgc2VhdGVkIG9uIHRoZSBGZWQuIEFuZCBpZiB0aGV5IGFyZSwgdHdvIHZvdGVzIGRvIG5vdCBhIGNvbnNlbnN1cyBtYWtlLiBCdXQgZm9yIHRob3NlIHdobyBhZG1pcmUgdGhlIEZlZFx1MjAxOXMgbWlzc2lvbiBhbmQgbW9yYWxzLCBub3cgaXMgdGhlIHRpbWUgdG8gc3BlYWsgdXAuIC4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMTozOCIsICJ0aXRsZSI6ICJGZWQgQ2FuZGlkYXRlcyBDcm9zcyBhIExpbmU7IElsbGlub2lzIEZpbmRzIEl0cyBXYXkifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgImRldGFpbiIsICJkZXRhaW4iLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIklORE9ORVNJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siNC4zNDM5IiwgIjk2LjAzMzgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cubWFsYXltYWlsLmNvbS9uZXdzL21hbGF5c2lhLzIwMTkvMDQvMTQvZm91ci1jaGlsZHJlbi1hbW9uZy0xMDAtZm9yZWlnbmVycy1kZXRhaW5lZC1pbi1zaGFoLWFsYW0vMTc0MzIzNiIsICJjb250ZW50IjogIlNIQUggQUxBTSwgQXByaWwgMTQgXHUyMDE0IEZvdXIgY2hpbGRyZW4gd2VyZSBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBieSB0aGUgU2VsYW5nb3IgSW1taWdyYXRpb24gRGVwYXJ0bWVudCBpbiBhIGZvdXItaG91ciBpbnRlZ3JhdGVkIG9wZXJhdGlvbiBjb25kdWN0ZWQgYXJvdW5kIFNoYWggQWxhbSB5ZXN0ZXJkYXkuICBJdHMgZGlyZWN0b3IsIE1vaGFtYWQgU2h1a3JpIE5hd2ksIHNhaWQgdGhlIG9wZXJhdGlvbiB3aGljaCBiZWdhbiBhcm91bmQgMTIgbWlkbmlnaHQgYW5kIHBhcnRpY2lwYXRlZCBieSA5NiBwZXJzb25uZWwgd2FzIGNvbmNlbnRyYXRlZCBvbiBmb3JlaWduIHdvcmtlcnNcdTIwMTkgbGl2aW5nIHF1YXJ0ZXJzIGluIFBhZGFuZyBKYXdhIGFuZCBLb3RhIEtlbXVuaW5nIGFyZWFzLiAgSGUgc2FpZCBkdXJpbmcgdGhlIG9wZXJhdGlvbiA0MzAgZm9yZWlnbmVycyB3ZXJlIHF1ZXN0aW9uZWQgYW5kIG9mIHRoZSB0b3RhbCA5NCBtZW4sIHR3byB3b21lbiBhbmQgZm91ciBjaGlsZHJlbiB3ZXJlIGRldGFpbmVkIGZvciB2YXJpb3VzIG9mZmVuY2VzLiAgXHUyMDFjVGhlIGZvcmVpZ25lcnMgYWdlZCBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQgYXJlIGZyb20gSW5kb25lc2lhLCBCYW5nbGFkZXNoLCBNeWFubWFyLCBJbmRpYSwgTmVwYWwsIFBha2lzdGFuIGFuZCBWaWV0bmFtLiAgXHUyMDFjVGhlIGNoaWxkcmVuLCB0aHJlZSBib3lzIGFuZCBhIGdpcmwgYWdlZCBiZXR3ZWVuIGZvdXIgbW9udGhzIGFuZCB0d28geWVhcnMgYXJlIEluZG9uZXNpYW5zLFx1MjAxZCBoZSBzYWlkIGluIGEgc3RhdGVtZW50IGhlcmUgdG9kYXkuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTAiLCAidGl0bGUiOiAiRm91ciBjaGlsZHJlbiBhbW9uZyAxMDAgZm9yZWlnbmVycyBkZXRhaW5lZCBpbiBTaGFoIEFsYW0gfCBNYWxheSBNYWlsIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiTWFrZSBhIHZpc2l0IiwgImFycmVzdCIsICJhcnJlc3QiLCAiaW52ZXN0aWdhdCIsICJtaXNzaW5nIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxNy4zNzUzIiwgIjc4LjQ3NDQiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly9tZW5hZm4uY29tLzEwOTgzODc1MDIvSHlkZXJhYmFkLUJveWZyaWVuZC1tdXJkZXJzLXRlY2hpZS1zdHVmZnMtYm9keS1pbi1zdWl0Y2FzZS1hcnJlc3RlZCIsICJjb250ZW50IjogIk9uIFN1bmRheSwgcG9saWNlIGZvdW5kIGEgYm9keSBzdHVmZmVkIGluc2lkZSBhIHN1aXRjYXNlIGluIE1lZGNoYWwgYXJlYSwgd2hpY2ggaXMgYWJvdXQgb25lIGhvdXIgYXdheSBmcm9tIEh5ZGVyYWJhZC4gIEFmdGVyIGFuIGluaXRpYWwgaW52ZXN0aWdhdGlvbiwgcG9saWNlIGxlYXJuZWQgdGhlIGJvZHkgd2FzIExhdmFueWEncywgYSAyNS15ZWFyLW9sZCB0ZWNoaWUgd2hvIHdlbnQgbWlzc2luZyBhIGZldyBkYXlzIGFnby4gIFN1YnNlcXVlbnRseSwgcG9saWNlIGFycmVzdGVkIGhlciBib3lmcmllbmQgU3VuaWwgZm9yIGtpZG5hcHBpbmcgYW5kIGtpbGxpbmcgdGhlIHZpY3RpbS4gQSBjYXNlIHVuZGVyIElQQyBTZWN0aW9uIDMwMiAobXVyZGVyKSB3YXMgcmVnaXN0ZXJlZC4gIExhdmFueWEgYW5kIFN1bmlsIGtuZXcgZWFjaCBvdGhlciBzaW5jZSBjb2xsZWdlICAgIEFmZmFpciAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIExhdmFueWEgd2FzIGFuIGVuZ2luZWVyIGZyb20gR2FjaGlib3dsaSBhbmQgd2FzIGluIGxvdmUgd2l0aCBTdW5pbCwgd2hvIHdhcyBhIHN0cnVjdHVyYWwgZW5naW5lZXIuIFRoZSBkdW8gbWV0IGluIGNvbGxlZ2UgYW5kIGdyZXcgY2xvc2UuICBBcHBhcmVudGx5LCBMYXZhbnlhIHdhbnRlZCBTdW5pbCB0byBtYXJyeSBoZXIgYnV0IGhlIGtlcHQgZGVsYXlpbmcgaXQuICBMYXRlciwgaGUgdG9sZCBMYXZhbnlhIGFuZCBoZXIgcGFyZW50cyB0aGF0IGhlIGdvdCBhIGpvYiBpbiBNdXNjYXQuIFN1bmlsIGNvbnZpbmNlZCBMYXZhbnlhJ3MgcGFyZW50cyB0byBhbGxvdyBoZXIgdG8gZ28gd2l0aCBoaW0uICBTdW5pbCB0b29rIExhdmFueWEgdG8gYSBsb2RnZSBhbmQgYWxsZWdlZGx5IGtpbGxlZCBoZXIgICAgTXVyZGVyICBPbiBBcHJpbCA0LCBMYXZhbnlhJ3MgZmFtaWx5IGRyb3BwZWQgaGVyIGF0IFJHSSBBaXJwb3J0IGluIEh5ZGVyYWJhZCBmb3IgaGVyIGpvdXJuZXkgdG8gTXVzY2F0LiAgQWZ0ZXIgaGVyIGZhbWlseSBtZW1iZXJzIGxlZnQsIFN1bmlsIHJlcG9ydGVkbHkgY29udmluY2VkIExhdmFueWEgdG8gY29tZSB3aXRoIGhpbSB0byBhIGxvZGdlLCB3aGVyZSBoZSBhbGxlZ2VkbHkga2lsbGVkIGhlci4gIFwiSGUgdGhyb3R0bGVkIGhlciBhdCB0aGUgbG9kZ2UgYW5kIHN0dWZmZWQgdGhlIGJvZHkgaW4gYSBzdWl0Y2FzZSxcIiBSQyBQdXJhbSBpbnNwZWN0b3IgUiBSYW1hIENoYW5kcmEgUmFvIHRvbGQgVE9JLiAgU3VuaWwgcG9zZWQgYXMgTGF2YW55YSB0byBzcGVhayB0byBoZXIgc2lzdGVyICAgIENoYXR0aW5nICBOb3RhYmx5LCBMYXZhbnlhIGhhZCB0b2xkIGhlciBwYXJlbnRzIHRoYXQgc2hlIHdvdWxkIHJldHVybiBmcm9tIE11c2NhdCBieSBBcHJpbCA3LiBIZXIgc2lzdGVyIHNlbnQgaGVyIHRleHRzIG9uIFdoYXRzQXBwIGFuZCBTdW5pbCByZXBsaWVkIHBvc2luZyBhcyBMYXZhbnlhLiAgT24gQXByaWwgNywgaGUgc3dpdGNoZWQgb2ZmIGhlciBwaG9uZSBwcm9tcHRpbmcgaGVyIHBhcmVudHMgdG8gbG9kZ2UgYSBtaXNzaW5nIHBlcnNvbiBjb21wbGFpbnQuICBCYXNlZCBvbiBMYXZhbnlhJ3MgY2FsbCByZWNvcmRzLCBwb2xpY2UgemVyb2VkIGluIG9uIFN1bmlsLCB3aG8gaGFpbHMgZnJvbSBCaWhhciwgYXMgYSBzdXNwZWN0LiAgUmVwb3J0ZWRseSwgU3VuaWwgaGlkIExhdmFueWEncyBib2R5IGJlbmVhdGggYSBjdWx2ZXJ0IGluIGEgZHJhaW4uIFdoZW4gbG9jYWxzIHNhdyB0aGUgc3VzcGljaW91cyBzdWl0Y2FzZSwgdGhleSBhbGVydGVkIHBvbGljZS4gU3VuaWwgcmVwb3J0ZWRseSB0b2xkIHBvbGljZSBvZmZpY2VycyBoZSBtdXJkZXJlZCBMYXZhbnlhIGFzIHNoZSB3YXMgcHJlc3N1cml6aW5nIGhpbSB0byBnZXQgbWFycmllZC4gSGUgaGFzIGJlZW4gY2hhcmdlZCB3aXRoIG11cmRlciBhbmQga2lkbmFwcGluZy4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToxMiIsICJ0aXRsZSI6ICJIeWRlcmFiYWQ6IEJveWZyaWVuZCBtdXJkZXJzIHRlY2hpZSwgc3R1ZmZzIGJvZHkgaW4gc3VpdGNhc2UgYXJyZXN0ZWQifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJBcnJlc3QsIGRldGFpbiwgb3IgY2hhcmdlIHdpdGggbGVnYWwgYWN0aW9uIiwgIm9wZXJhdGlvbiIsICJ0YXJnZXQiXSwgImNvdW50cmllcyI6IFsiSkFQQU4iXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjM1LjczMDIiLCAiMTM5LjcxMSJdXSwgInNvdXJjZSI6ICJodHRwOi8vd3d3Lm12YXJpZXR5LmNvbS9jbm1pL2NubWktbmV3cy9sb2NhbC8xMTIwMTEtdGV0ZXRvLWJlYWNoLWlzLTEtYWdhaW4tYXQtamFwYW4tbWFyaW5lLWRpdmluZy1mYWlyIiwgImNvbnRlbnQiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciAgKE1WQSkgXHUyMDE0IEZvciB0aGUgc2Vjb25kIHN0cmFpZ2h0IHllYXIsIFRldGV0byBCZWFjaCBvbiB0aGUgaXNsYW5kIG9mIFJvdGEgaW4gdGhlIE1hcmlhbmFzIHdhcyBzZWxlY3RlZCBhcyB0aGUgTm8uIDEgUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaCBhdCB0aGUgRGl2ZSBhbmQgVHJhdmVsIEF3YXJkcyBvZiB0aGUgYW5udWFsIE1hcmluZSBEaXZpbmcgRmFpciBpbiBKYXBhbiBvbiBBcHJpbCA1LTcsIDIwMTkuICBJbiBhZGRpdGlvbiwgTWVndW1pIFRha2FrdSBvZiBCbHVlIFBhbG1zIERpdmUgU2VydmljZSBSb3RhIHdvbiAxc3QgcGxhY2UgUmVhZGVyc1x1MjAxOSBDaG9pY2UgRmF2b3JpdGUgRGl2ZSBHdWlkZSwgT3ZlcnNlYXMsIGFkZGluZyBhY2NvbGFkZXMgdG8gaGVyIDJuZCBwbGFjZSBsYXN0IHllYXIsIGFuZCBCbHVlIFBhbG1zIHdvbiAybmQgcGxhY2UsIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEZhdm9yaXRlIERpdmUgT3BlcmF0b3IsIE92ZXJzZWFzLiAgXHUyMDFjT25jZSBhZ2FpbiwgUm90YSBpcyBzZXR0aW5nIHRoZSBzdGFuZGFyZCBpbiB0aGUgaW5kdXN0cnkgZm9yIGV4dHJhb3JkaW5hcnkgZGl2ZSBhbmQgYmVhY2ggZXhwZXJpZW5jZXMgYW5kIGV4Y2VwdGlvbmFsIGN1c3RvbWVyIGNhcmUsXHUyMDFkIHNhaWQgTWFyaWFuYXMgVmlzaXRvcnMgQXV0aG9yaXR5IE1hbmFnaW5nIERpcmVjdG9yIENocmlzdG9waGVyIEEuIENvbmNlcGNpb24uIFx1MjAxY1x1MjAxY0ksIG15c2VsZiwgaGF2ZSBoYWQgdGhlIHByaXZpbGVnZSBvZiBkaXZpbmcgaW4gUm90YSwgYW5kIEkgaGF2ZSB0byBzYXkgdGhhdCBSb3RhIGhhcyB0aGUgYmVzdCB2aXNpYmlsaXR5IG9mIGFueSBvZiB0aGUgaXNsYW5kcyBpbiB0aGUgTWFyaWFuYXMuIFRoZSBjb3JhbCByZWVmcywgc2VhIGxpZmUgYW5kIHVuaXF1ZSB1bmRlcndhdGVyIGZvcm1hdGlvbnMgbWFrZSBSb3RhIGEgZGl2ZSBoYXZlbi4gV2UgY2FuIGFsbCBsb29rIHRvIHRoZSBjYXJlIG9mIHRoZSBSb3RhIGNvbW11bml0eSBmb3IgdGhlIGNsZWFubGluZXNzIGFuZCBwcm90ZWN0aW9uIG9mIHRoZWlyIG5hdHVyYWwgcmVzb3VyY2VzIGFuZCB0byB0aGVpciBob3NwaXRhbGl0eSBhbmQgY2FyZSBmb3IgZWFjaCB2aXNpdG9yIGFzIGFuIGV4YW1wbGUgb2Ygd2hhdCB3ZSBjYW4gb2ZmZXIgdmlzaXRvcnMgdG8gZWFjaCBvZiB0aGUgaXNsYW5kcyBvZiB0aGUgTWFyaWFuYXMuIFdlIGhhdmUgbXVjaCB0byBiZSBwcm91ZCBvZi5cdTIwMWQgIEluIGFkZGl0aW9uLCBTYWlwYW4sIFRpbmlhbiwgYW5kIFJvdGEgY29tYmluZWQgd29uIDR0aCBwbGFjZSBmb3IgdGhlIHNlY29uZCB5ZWFyIGluIGEgcm93IGFzIFJlYWRlcnNcdTIwMTkgQ2hvaWNlIEJlc3QgRGl2aW5nIEFyZWEsIE92ZXJzZWFzLCBhbmQgTWFuYWdhaGEgd29uIDEwdGggcGxhY2UgaW4gUmVhZGVyc1x1MjAxOSBDaG9pY2UgQmVzdCBCZWFjaC4gIERpdmluZyBvcHBvcnR1bml0aWVzIG9uIFJvdGEgYW5kIHRocm91Z2hvdXQgdGhlIE1hcmlhbmFzIHdlcmUgdG91dGVkIGJ5IE1WQSB0byBvdmVyIDUwLDAwMCBhdHRlbmRlZXMgYXQgdGhlIGZhaXIsIHdoaWNoIGlzIEphcGFuXHUyMDE5cyBsZWFkaW5nIGNvbnN1bWVyIGRpdmluZyBzaG93LCB0YXJnZXRpbmcgY29uc3VtZXJzIGFuZCB0cmFkZSByZXByZXNlbnRhdGl2ZXMgaW4gSmFwYW4gYW5kIG90aGVyIEFzaWFuIGNvdW50cmllcy4gVGhlIGZhaXIgd2FzIGhlbGQgYXQgSWtlYnVrdXJvIFN1bnNoaW5lIENpdHkgQ29udmVudGlvbiBDZW50ZXIgaW4gVG9reW8uICBNVkEgaG9zdGVkIGFuIGluZm9ybWF0aW9uIGJvb3RoIGF0IHRoZSBldmVudCBpbiB0aGUgXHUyMDFjT2NlYW4sIElzbGFuZHMgYW5kIFRyYXZlbFx1MjAxZCBzZWN0aW9uLiBNVkEgc2hvd2VkIHRoZSBtb3ZpZSBcdTIwMWNEaXZpbmcgaW4gdGhlIE1hcmlhbmFzLFx1MjAxZCBkaXN0cmlidXRlZCBkaXZpbmcgbWFwcyBhbmQgbGVhZmxldHMsIGlzbGFuZCBtYXBzLCBhbmQgb3RoZXIgbWF0ZXJpYWw7IGFuZCBhbnN3ZXJlZCBxdWVzdGlvbnMgZnJvbSBhdHRlbmRlZXMgYXQgdGhlIHNob3csIHdoaWNoIGF0dHJhY3RlZCAxMDAgZXhoaWJpdG9ycyByZXByZXNlbnRpbmcgZGVzdGluYXRpb25zLCBkaXZpbmcgc2hvcHMsIHVuZGVyd2F0ZXIgY2FtZXJhIG1hbnVmYWN0dXJlcnMsIGFuZCBvdGhlciBhcmVhcyBvZiB0aGUgaW5kdXN0cnkuICBJbiBjb29wZXJhdGlvbiB3aXRoIE1WQSwgdGhlIGV2ZW50IHdhcyBhbHNvIGF0dGVuZGVkIGJ5IGZvdXIgbWVtYmVycyBvZiB0aGUgTm9ydGhlcm4gTWFyaWFuYXMgRGl2aW5nIE9wZXJhdGlvbnMgQXNzb2NpYXRpb24uIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTQiLCAidGl0bGUiOiAiVGV0ZXRvIEJlYWNoIGlzICMxIGFnYWluIGF0IEphcGFuIE1hcmluZSBEaXZpbmcgRmFpciJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIllpZWxkLCBub3Qgc3BlY2lmaWVkIGJlbG93IiwgIiBjb25ncmVzcyAiLCAiIGVsZWN0aW9uIiwgIiBhdHRhY2sgIl0sICJjb3VudHJpZXMiOiBbIklORElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIxMS44MzMzIiwgIjc1LjU2NjciXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cuZmlyc3Rwb3N0LmNvbS9wb2xpdGljcy9sb2stc2FiaGEtcG9sbHMtYmpwLXRyeWluZy10by1taWxrLXNhYmFyaW1hbGEtaXNzdWUtZm9yLXZvdGVzLWJ1dC13aW5uaW5nLXBhdGhhbmFtdGhpdHRhLXNlYXQtd2lsbC1iZS10b3VnaC02NDQ3MDUxLmh0bWwiLCAiY29udGVudCI6ICJLYWxhdmF0aGkgd2FzIHNjYXJlZCB3aGVuIHNoZSB3YXMgYXNrZWQgdG8gam9pbiBhIGdyb3VwIG9mIHJlbGF0aXZlcyBhbmQgZnJpZW5kcyB0byBnbyB0byBTYWJhcmltYWxhIGluIFBhdGhhbmFtdGhpdHRhIGRpc3RyaWN0IG9mIEtlcmFsYSBmb3IgVmlzaHVrYW5pIGRhcnNoYW4gYXQgdGhlIExvcmQgQXl5YXBwYSB0ZW1wbGUgb24gMTUgQXByaWwuIFRoZSAzMi15ZWFyLW9sZCB3b21hbiBmcm9tIENvaW1iYXRvcmUgaW4gVGFtaWwgTmFkdSBmb3VuZCBoZXIgZmVhcnMgbWlzcGxhY2VkIHdoZW4gc2hlIGZvdW5kIG5vbmUgdG8gYmxvY2sgaGVyIGF0IHRoZSBOaWxha2thbCBiYXNlIGNhbXAgb24gdGhlIGV2ZSBvZiB0aGUgVmlzaHUsIHRoZSBNYWxheWFsYW0gTmV3IFllYXIgZGF5LiAgVGhpcyB3YXMgbm90IHRoZSBjYXNlIHNpeCBtb250aHMgYWdvLCB3aGVuIHdvcmtlcnMgb2YgcmlnaHQtd2luZyBvdXRmaXRzIGZvcmNlZCB0aGUgd29tZW4gd2hvIGJldHdlZW4gMTAgYW5kIDUwIHllYXJzIG9mIGFnZSB0byByZXR1cm4uIFRoZSBwcm90ZXN0ZXJzIGhhZCBhbHNvIHRha2VuIHBvc2l0aW9uIGF0IG90aGVyIGVudHJ5IHBvaW50cyBhbmQgdGhlIGVudGlyZSBoaWxsb2NrIHRvIGVuc3VyZSB0aGF0IG5vIG1lbnN0cnVhdGluZyB3b21lbiBlbnRlcmVkIHRoZSB0ZW1wbGUuICBUaGUgcHJvdGVzdHMgZm9sbG93aW5nIHRoZSAyOCBTZXB0ZW1iZXIgU3VwcmVtZSBDb3VydCB2ZXJkaWN0IGFsbG93aW5nIHdvbWVuIG9mIGFsbCBhZ2VzIHRvIGVudGVyIHRoZSB0ZW1wbGUgdHVybmVkIHZpb2xlbnQgbW9zdCB3aGVuIHRoZSB0ZW1wbGUgd2FzIG9wZW5lZCBmb3IgdGhlIG1vbnRobHkgcHVqYSBhbmQgZHVyaW5nIHRoZSBtYWluIHBpbGdyaW0gc2Vhc29uLiBIdW5kcmVkcyBvZiBwZW9wbGUsIGluY2x1ZGluZyBwb2xpY2UgYW5kIG1lZGlhIHBlcnNvbm5lbCwgaGFkIGNvbWUgdW5kZXIgYXR0YWNrIGZyb20gdGhlIHNlbGYtc3R5bGVkIGd1YXJkaWFucyBvZiB0aGUgY3VzdG9tcyBhbmQgdHJhZGl0aW9ucyBvZiB0aGUgdGVtcGxlLiAgS2FsYXZhdGhpIHdhcyBhZnJhaWQgdG8gdmlzaXQgU2FiYXJpbWFsYSBhcyBzaGUgaGFkIHJlYWQgcmVwb3J0cyBhYm91dCB0aGUgdmlvbGVuY2UuIEhvd2V2ZXIsIHNoZSB3YXMgcmVsaWV2ZWQgd2hlbiBzaGUgZGlkIG5vdCBmaW5kIGFueSBwcm90ZXN0ZXJzIGluIHRoZSB2aWNpbml0eSBvZiBTYWJhcmltYWxhIHdoZW4gdGhleSBhcnJpdmVkIGFzIE5pbGFra2FsLiBQb2xpY2UgcGVyc29ubmVsIHBvc3RlZCBhdCB0aGUgYmFzZSBjYW1wIHNhaWQgdGhhdCBwcm90ZXN0ZXJzIGJlbG9uZ2luZyB0byBhbGwgcG9saXRpY2FsIGh1ZXMgaGFkIGRpc2FwcGVhcmVkIGZyb20gdGhlIGhpbGwgc2hyaW5lIGZvbGxvd2luZyB0aGUgYW5ub3VuY2VtZW50IG9mIHRoZSBlbGVjdGlvbi4gIFx1MjAxY1RoZXkgc2VlbSB0byBoYXZlIGFiYW5kb25lZCBBeXlhcHBhIGZvciB0aGUgc2FrZSBvZiB2b3Rlcy4gSXQgaXMgbm93IGNsZWFyIHRoYXQgYWxsIHRoZSBkcmFtYSB0aGF0IFNhYmFyaW1hbGEgd2l0bmVzc2VkIGFmdGVyIHRoZSBTdXByZW1lIENvdXJ0IHBhc3NlZCB0aGUgb3JkZXIgd2FzIHBvbGl0aWNhbCxcdTIwMWQgc2FpZCBhbiBvZmZpY2VyIHdobyBkaWQgbm90IHdhbnQgdG8gYmUgaWRlbnRpZmllZC4gIEJoYXJhdGl5YSBKYW5hdGEgUGFydHkgZ2VuZXJhbCBzZWNyZXRhcnkgSyBTdXJlbmRyYW4sIHdobyB3YXMgYXQgdGhlIGZvcmVmcm9udCBvZiB0aGUgcHJvdGVzdHMsIGlzIG5vdyB0aGUgQkpQIGNhbmRpZGF0ZSBpbiB0aGUgUGF0aGFuYW10aGl0dGEgTG9rIFNhYmhhIGNvbnN0aXR1ZW5jeS4gV2hlbiBhc2tlZCB3aHkgdGhleSBoYXZlIGRyb3BwZWQgdGhlIHZpZ2lsIGF0IFNhYmFyaW1hbGEsIGhlIHNhaWQgdGhleSBkaWQgbm90IGZlZWwgdGhlIG5lZWQgZm9yIHRoZSBzYW1lIGFzIHRoZSBMZWZ0IEZyb250IGdvdmVybm1lbnQgaXRzZWxmIGhhZCBhYmFuZG9uZWQgdGhlaXIgZGVjaXNpb24gdG8gdGFrZSB3b21lbiBvZiB0aGUgZm9yYmlkZGVuIGFnZSB0byBTYWJhcmltYWxhLiAgXHUyMDFjV2UgaGFkIGVudGVyZWQgdGhlIHNjZW5lIGFmdGVyIENoaWVmIE1pbmlzdGVyIFBpbmFyYXlpIFZpamF5YW4gYXBwZWFyZWQgYWRhbWFudCBpbiBpbXBsZW1lbnRpbmcgdGhlIGFwZXggY291cnQgdmVyZGljdC4gSGUgaGFzIHJlYWxpc2VkIHRoZSBmb2xseSBvZiBoaXMgZGVjaXNpb24gYW5kIGhhcyByZWZyYWluZWQgZnJvbSB0YWtpbmcgeW91bmcgd29tZW4gdG8gdGhlIGhpbGwgc2hyaW5lLiBUaGVyZWZvcmUsIHRoZXJlIGlzIG5vIG5lZWQgZm9yIHVzIHRvIGd1YXJkIHRoZSB0ZW1wbGUgbm93LFx1MjAxZCBoZSBzYWlkLiAgU3VyZW5kcmFuIHNhaWQgdGhhdCB0aGUgcHJvdGVzdHMgdGhleSBvcmdhbmlzZWQgaGFkIGFsc28gY3JlYXRlZCBhd2FyZW5lc3MgYW1vbmcgdGhlIGRldm90ZWVzIGFib3V0IHRoZSBldmlsIGRlc2lnbnMgb2YgdGhlIGdvdmVybm1lbnQuIFx1MjAxY1RoZXkgdGhlbXNlbHZlcyBhcmUgY29taW5nIGZvcndhcmQgdG8gcHJvdGVjdCB0aGUgY3VzdG9tcyBhbmQgdHJhZGl0aW9ucyBvZiB0aGUgdGVtcGxlIHdpdGhvdXQgYW55Ym9keSBwcm9tcHRpbmcgdGhlbSxcdTIwMWQgaGUgYWRkZWQuICBIb3dldmVyLCBTdXJlbmRyYW4gYW5kIGhpcyBwYXJ0eSBhcmUgbm90IHJlYWR5IHRvIGxlYXZlIFNhYmFyaW1hbGEgaW4gdGhlIGVsZWN0aW9uLCBkZXNwaXRlIGEgYmFyIG9uIGludm9raW5nIHRoZSBuYW1lcyBvZiBMb3JkIEF5eWFwcGEgaW4gdGhlIGVsZWN0aW9uIGJ5IHRoZSBFbGVjdGlvbiBDb21taXNzaW9uLiBXb21lblx1MjAxOXMgZW50cnkgaW50byB0aGUgdGVtcGxlIGlzIHRoZSBzaW5nbGUgbGFyZ2VzdCBpc3N1ZSBvZiBTdXJlbmRyYW4gYXQgUGF0aGFuYW10aGl0dGEsIHdoaWNoIGlzIGEgQ29uZ3Jlc3MgYmFzdGlvbi4gV2l0aG91dCBtZW50aW9uaW5nIHRoZSBuYW1lIG9mIHRoZSBkZWl0eSwgU3VyZW5kcmFuIGhhcyBiZWVuIHNlZWtpbmcgdm90ZXMgZm9yIEF5eWFwcGFuLiAgXHUyMDFjSSBrbm93IHlvdSBoYXZlIGdhdGhlcmVkIGhlcmUgYnJhdmluZyB0aGUgc2NvcmNoaW5nIHN1bW1lciBoZWF0IG5vdCBiZWNhdXNlIG9mIHlvdXIgbG92ZSBmb3IgbWUuIEkgZG9uXHUyMDE5dCBuZWVkIHRvIHRlbGwgeW91IHdobyBoYXMgYnJvdWdodCB5b3UgaGVyZS4gUGxlYXNlIHZvdGUgZm9yIGhpbSBhbmQgdGVhY2ggdGhlIExlZnQgYSBsZXNzb24sXHUyMDFkIFN1cmVuZHJhbiB0b2xkIGEgbW9kZXJhdGUgY3Jvd2Qgb2YgbWVuIGFuZCB3b21lbiB3aG8gaGFkIGdhdGhlcmVkIG5lYXIgS29ubmksIDQwIGttcyBmcm9tIE5pbGFra2FsLCB0byBncmVldCBoaW0uICBCZWZvcmUgaGUgcmVhY2hlZCB0aGUgc3BvdCwgdGhlIGxvY2FsIGxlYWRlcnMgZGVzY3JpYmVkIGhpbSBhcyBhICdtYXJ0eXInLiBUaGV5IHBvaW50ZWQgb3V0IHRoYXQgMjQyIGNhc2VzIHNsYXBwZWQgYnkgdGhlIEtlcmFsYSBwb2xpY2UgYWdhaW5zdCBoaW0gaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBTYWJhcmltYWxhIGlzc3VlIHdhcyBwYXJ0IG9mIHRoZSBnb3Zlcm5tZW50XHUyMDE5cyBhdHRlbXB0IHRvIHNpbGVuY2UgdGhvc2UgZmlnaHRpbmcgZm9yIHRoZSByaWdodHMgb2YgdGhlIGZhaXRoZnVsLiAgSWYgdGhlIGZhaXRoZnVsIGNvbnNpZGVyIHRoZSBwZXJzb25hbCBzdHJ1Z2dsZSB3YWdlZCBieSBoaW0gaW4gZGVmZW5kaW5nIHRoZSBjdXN0b21zIGFuZCB0cmFkaXRpb25zIG9mIHRoZSBTYWJhcmltYWxhIHRlbXBsZSBnZW51aW5lLCBLIFN1cmVuZHJhbiBzaG91bGQgd2luIHRoZSBlbGVjdGlvbiBoYW5kcyBkb3duLiBIb3dldmVyLCBpdCBpcyBubyBjYWtlIHdhbGsgZm9yIHRoZSBCSlAgY2FuZGlkYXRlLiAgTWFueSBvZiB0aGUgZmFpdGhmdWwgaGF2ZSBzdGFydGVkIHJlYWxpc2luZyB0aGF0IHRoZSBhZ2dyZXNzaXZlIHN0YW5kIHRoYXQgU3VyZW5kcmFuIGFuZCBoaXMgcGFydHkgaGFkIHRha2VuIGFnYWluc3QgdGhlIExERiBnb3Zlcm5tZW50XHUyMDE5cyBhdHRlbXB0IHRvIGltcGxlbWVudCB0aGUgYXBleCBjb3VydCB2ZXJkaWN0IHdhcyBub3QgYm9ybmUgb3V0IG9mIGdlbnVpbmUgY29uY2VybiBmb3IgZmFpdGggYnV0IGFpbWVkIGF0IHBvbGl0aWNhbCBjYXBpdGFsLiAgVGhlIE5haXIgU2VydmljZSBTb2NpZXR5IChOU1MpLCBhIGNvbW11bml0eSBvcmdhbmlzYXRpb24gb2YgdGhlIHVwcGVyIGNhc3RlIE5haXJzIHRoYXQgYXBwcmVjaWF0ZWQgdGhlIHN1cHBvcnQgZ2l2ZW4gYnkgdGhlIFNhbmdoIFBhcml2YXIgaW4gb3Bwb3NpbmcgdGhlIGVudHJ5IG9mIHlvdW5nIHdvbWVuIGluIHRoZSB0ZW1wbGUsIGhhcyBjaG9zZW4gbm90IHRvIHJlY2lwcm9jYXRlIHRoZSBzdXBwb3J0IGluIHRoZSBwb2xpdGljYWwgYXJlbmEuIFRoZSBvcmdhbmlzYXRpb24gdGhhdCBob2xkcyBzd2F5IG92ZXIgdGhlIDE0IHBlcmNlbnQgTmFpciBwb3B1bGF0aW9uIGluIHRoZSBkaXN0cmljdCBoYXMgZGVjaWRlZCB0byBjb250aW51ZSB3aXRoIGl0cyBwb2xpY3kgb2YgbWFpbnRhaW5pbmcgZXF1aS1kaXN0YW5jZSBmcm9tIGJvdGggdGhlIExlZnQgYW5kIHRoZSBSaWdodC4gIFNhYmFyaW1hbGEgS2FybWEgU2FtaXRoaSBwYXRyb24gU3dhbWkgQ2hpZGFuYW5kYXB1cmlcdTIwMTlzIGNhbGwgdG8gdGhlIEF5eWFwcGEgZGV2b3RlZXMgdG8gdm90ZSBmb3IgdGhlIENvbmdyZXNzLWxlZCBVbml0ZWQgRGVtb2NyYXRpYyBGcm9udFx1MjAxOXMgY2FuZGlkYXRlcyBpbiBjb25zdGl0dWVuY2llcyB3aGVyZSB0aGUgTkRBIGlzIHdlYWsgaGFzIGFsc28gY29tZSBhcyBhIHNldGJhY2sgdG8gdGhlIEJKUFx1MjAxOXMgZWZmb3J0cyB0byB1c2UgdGhlIGlzc3VlIHRvIHN0cmVuZ3RoZW4gdGhlIHBhcnR5IGJhc2UgaW4gdGhlIHN0YXRlLiAgVGhvdWdoIHRoZSBvcGluaW9uIG9uIHNvY2lhbCBtZWRpYSB3YXMgaW50ZW5kZWQgdG8gZW5zdXJlIHRoZSBkZWZlYXQgb2YgdGhlIExERiwgc2VuaW9yIEJKUCBsZWFkZXJzIGZlYXIgdGhhdCB0aGUgY29uZnVzaW9uIGl0IGNyZWF0ZXMgd2lsbCBhZmZlY3QgdGhlIHBhcnR5XHUyMDE5cyBwcm9zcGVjdHMgaW4gbWFyZ2luYWwgc2VhdHMuICBCSlAgd2FzIGNvdW50aW5nIG9uIHRoZSBzdXBwb3J0IG9mIE5TUyBmb3IgdGhlIHZpY3Rvcnkgb2YgU3VyZW5kcmFuIGF0IFBhdGhhbmFtdGhpdHRhLiBTb3VyY2VzIGluIHRoZSBvcmdhbmlzYXRpb24gc2FpZCB0aGF0IHRoZSBOU1MgbGVhZGVyc2hpcCB3YXMgbm90IGhhcHB5IHdpdGggdGhlIHdheSBTdXJlbmRyYW4sIGluIHBhcnRpY3VsYXIsIGFuZCB0aGUgc2FmZnJvbiBwYXJ0eSBpbiBnZW5lcmFsIGRyYWdnZWQgdGhlIGlzc3VlIGludG8gdGhlIHN0cmVldHMuIE5TUycgb2ZmaWNpYWwgam91cm5hbCBTZXJ2aWNlIGFjY3VzZWQgYWxsIHBvbGl0aWNhbCBwYXJ0aWVzIG9mIHRyeWluZyB0byB1c2UgU2FiYXJpbWFsYSBmb3IgdGhlaXIgZWxlY3RvcmFsIGdhaW5zLiAgVGhlIE5TUyBqb3VybmFsIGFsc28gZG91YnRzIHRoZSBzaW5jZXJpdHkgb2YgdGhlIEJKUCBpbiBmaW5kaW5nIGEgbGVnYWwgc29sdXRpb24gdG8gdGhlIGlzc3VlLiBJbiBpdHMgZWRpdG9yaWFsLCBTZXJ2aWNlIHNhaWQgdGhhdCB0aGUgcGFydHkgaGFkIHRyaWVkIHRvIHByZXZlbnQgd29tZW4gb24gdGhlIHN0cmVldHMgaW5zdGVhZCBvZiBwYXlpbmcgYXR0ZW50aW9uIHRvIHRoZSBsZWdhbCBtYXR0ZXJzLiBUaGUgTlNTIGxlYWRlcnNoaXAgaXMgYWxzbyBub3QgaW1wcmVzc2VkIGJ5IHRoZSBwcm9taXNlIGdpdmVuIGJ5IHRoZSBCSlAgaW4gaXRzIGVsZWN0aW9uIG1hbmlmZXN0byB0byBzZWN1cmUgY29uc3RpdHV0aW9uYWwgcHJvdGVjdGlvbiBvbiBpc3N1ZXMgcmVsYXRlZCB0byBmYWl0aCBhbmQgYmVsaWVmIHNpbmNlIGl0IGRpZCBub3RoaW5nIHRvIGZ1bGZpbCBpdHMgcHJvbWlzZSByZWdhcmRpbmcgdGhlIFJhbSB0ZW1wbGUgYXQgQXlvZGh5YSBkdXJpbmcgaXRzIHRlcm0uIEhlIHNhaWQgdGhhdCB0aGUgQkpQIGNhbm5vdCBmb29sIHRoZSBwZW9wbGUgaW4gS2VyYWxhIHdpdGggc3VjaCBlbXB0eSB3b3Jkcy4gIEJKUCBjYW4gd2luIHRoZSBzZWF0IG9ubHkgaWYgaXQgaXMgYWJsZSB0byBwb29sIHRoZSB2b3RlcyBvZiB0aGUgZW50aXJlIG1ham9yaXR5IGNvbW11bml0eSwgd2hpY2ggYWNjb3VudHMgZm9yIGFib3V0IDU3IHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24gaW4gdGhlIGRpc3RyaWN0LiBOb25lIGV4cGVjdHMgdGhlIGVudGlyZSBIaW5kdSB2b3RlcyB0byBmYWxsIGluIHRoZSBCSlAga2l0dHkgc2luY2UgYSBzdWJzdGFudGlhbCBjaHVuayBvZiB0aGVtIGhhdmUgYmVlbiB0cmFkaXRpb25hbCBzdXBwb3J0ZXJzIG9mIFVERiBhbmQgTERGIGFuZCBpdCB3b25cdTIwMTl0IGJlIGVhc3kgZm9yIHRoZW0gdG8gY2hhbmdlIHBvbGl0aWNhbCBhZmZpbGlhdGlvbnMgYmFzZWQgb24gb25lIGlzc3VlLiAgXHUyMDFjSSBrbm93IHdoYXQgdGhlIGdvdmVybm1lbnQgaGFzIGRvbmUgYXQgU2FiYXJpbWFsYSB3YXMgbm90IHJpZ2h0LiBJIGFtIGFsc28gaHVydCBieSB0aGUgaGFzdGUgd2l0aCB3aGljaCB0aGUgZ292ZXJubWVudCB0cmllZCB0byBpbXBsZW1lbnQgdGhlIFNDIHZlcmRpY3QuIEhvd2V2ZXIsIEkgY2Fubm90IHRoaW5rIG9mIGNoYW5naW5nIG15IHBvbGl0aWNhbCBhZmZpbGlhdGlvbiBhcyBJIGFuZCBteSBmYW1pbHkgaGF2ZSBiZWVuIHN1cHBvcnRpbmcgdGhlIENvbW11bmlzdCBQYXJ0eSBvZiBJbmRpYSBmcm9tIG15IGNoaWxkaG9vZC4gSSB3aWxsIHZvdGUgZm9yIHRoZSBwYXJ0eSBjYW5kaWRhdGUgdGhpcyB0aW1lIHRvbyxcdTIwMWQgc2FpZCBHb3ZpbmdhIFBpbGxhaSwgYSA3NS15ZWFyLW9sZCB0cmFkZXIgbmVhciBLb25uaS4gIEhvd2V2ZXIsIGhpcyB3aWZlIExhbGl0aGEgc2FpZCBzaGUgd291bGQgbm90IHZvdGUgZm9yIHRoZSBDUE0gdGhpcyB0aW1lLiBCdXQgc2hlIGhhcyBub3QgYmVlbiBhYmxlIHRvIGRlY2lkZSB3aGV0aGVyIHRvIHZvdGUgZm9yIEJKUCBvciBDb25ncmVzcy4gU2hlIHNhaWQgbWFueSBvZiBoZXIgZnJpZW5kcyBpbiB0aGUgYXJlYSB3ZXJlIGFsc28gY29uZnVzZWQgbGlrZSBoZXIuIFx1MjAxY1dlIHdpbGwgdGFrZSBhIGRlY2lzaW9uIGFmdGVyIHNlZWluZyB0aGUgY2FtcGFpZ24sXHUyMDFkIHNhaWQgTGFsaXRoYS4gIENvbmdyZXNzIGhhcyBiZWVuIHdpbm5pbmcgdGhlIHNlYXQgZXZlciBzaW5jZSB0aGUgY29uc3RpdHVlbmN5IHdhcyBjYXJ2ZWQgb3V0IGluIDIwMDkgd2l0aCB0aGUgc3VwcG9ydCBvZiBhIHNlY3Rpb24gb2YgdGhlIE5haXIgY29tbXVuaXR5IGFuZCB0aGUgbWlub3JpdGllcywgd2hvIGFjY291bnQgZm9yIDQzIHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24uIEhvd2V2ZXIsIHBhcnR5IGNhbmRpZGF0ZSBBbnRvIEFudG9ueVx1MjAxOXMgdmljdG9yeSBtYXJnaW4gc2F3IGEgZHJvcCBmcm9tIDEsMTEsMjA2IHZvdGVzIGluIDIwMDkgdG8gNTYsMTkxIHZvdGVzIGluIDIwMTQuICBUaGlzIHdhcyBtYWlubHkgZHVlIHRvIGFuIGltcHJvdmVkIHNob3dpbmcgYnkgdGhlIEJKUCwgd2hpY2ggaW5jcmVhc2VkIGl0cyB2b3RlIHNoYXJlIGZyb20gNy4wOCBwZXJjZW50IHRvIDE1Ljk4IHBlcmNlbnQgdm90ZXMgZHVyaW5nIHRoZSBwZXJpb2QuIEEgc3dpbmcgaW4gbWlub3JpdHkgdm90ZXMgaW4gdGhlIDIwMTYgQXNzZW1ibHkgZWxlY3Rpb24gc2F3IHRoZSBMREYgd2lubmluZyBmb3VyIEFzc2VtYmx5IHNlZ21lbnRzLiAgSG93ZXZlciwgdGhlIENvbmdyZXNzIGNhbXAgZXhwZWN0cyB0aGF0IHRoZSBtb2RlcmF0ZSBzZWN0aW9ucyBvZiB0aGUgbWFqb3JpdHkgY29tbXVuaXR5IHdpbGwgc3VwcG9ydCB0aGUgVURGLCBtYWtpbmcgQW50b1x1MjAxOXMgdmljdG9yeSBlYXN5LiBUaGUgTERGIGNhbXAgaXMgcGlubmluZyB0aGVpciBob3BlIG9uIHRoZSBwcm9ncmVzc2l2ZSBzZWN0aW9ucyBvZiB0aGUgc29jaWV0eS4gQSB0b3VyIGFjcm9zcyB0aGUgY29uc3RpdHVlbmN5LCBjb21wcmlzaW5nIGZvdXIgQXNzZW1ibHkgc2VnbWVudHMgaW4gUGF0aGFuYW10aGl0dGEgZGlzdHJpY3QgYW5kIHR3byBpbiBLb3R0YXlhbSBkaXN0cmljdCwgc2hvdyB0aGVpciBudW1iZXIgdG9vIHNob3J0IGZvciBhIHZpY3RvcnkgZm9yIFZlZW5hIEdlb3JnZSwgdGhlIExERiBjYW5kaWRhdGUuICBUaGUgZmlnaHQgaW4gUGF0aGFuYW10aGl0dGEgaXMgYmV0d2VlbiBCSlAgYW5kIHRoZSBDb25ncmVzcy4gSXQgaXMgdG9vIGVhcmx5IHRvIHByZWRpY3Qgd2hvIHdpbGwgaGF2ZSB0aGUgbGFzdCBsYXVnaCBpbiB0aGlzIGV4dHJlbWVseSBjbG9zZSBmaWdodC4gIFlvdXIgZ3VpZGUgdG8gdGhlIGxhdGVzdCBlbGVjdGlvbiBuZXdzLCBhbmFseXNpcywgY29tbWVudGFyeSwgbGl2ZSB1cGRhdGVzIGFuZCBzY2hlZHVsZSBmb3IgTG9rIFNhYmhhIEVsZWN0aW9ucyAyMDE5IG9uIGZpcnN0cG9zdC5jb20vZWxlY3Rpb25zLiBGb2xsb3cgdXMgb24gVHdpdHRlciBhbmQgSW5zdGFncmFtIG9yIGxpa2Ugb3VyIEZhY2Vib29rIHBhZ2UgZm9yIHVwZGF0ZXMgZnJvbSBhbGwgNTQzIGNvbnN0aXR1ZW5jaWVzIGZvciB0aGUgdXBjb21pbmcgZ2VuZXJhbCBlbGVjdGlvbnMuIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTkiLCAidGl0bGUiOiAiTG9rIFNhYmhhIHBvbGxzOiBCSlAgdHJ5aW5nIHRvIG1pbGsgU2FiYXJpbWFsYSBpc3N1ZSBmb3Igdm90ZXMsIGJ1dCB3aW5uaW5nIFBhdGhhbmFtdGhpdHRhIHNlYXQgd2lsbCBiZSB0b3VnaCAtIEZpcnN0cG9zdCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkVuZ2FnZSBpbiBuZWdvdGlhdGlvbiIsICIgY29uZ3Jlc3MgIiwgIiBlbGVjdGlvbiJdLCAiY291bnRyaWVzIjogWyJJTkRJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siMTMuMDgzMyIsICI4MC4yODMzIl1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmluZGlhdGltZXMuY29tL25ld3MvaW5kaWEvYWxsLWluLXRoZS1mYW1pbHktcmF2aW5kcmEtamFkZWphLXMtZmF0aGVyLXNpc3Rlci1qb2luLWNvbmdyZXNzLXdpZmUtYWxyZWFkeS1hLWJqcC1sZWFkZXItMzY1NDQyLmh0bWwiLCAiY29udGVudCI6ICJBbGwgSW4gVGhlIEZhbWlseTogUmF2aW5kcmEgSmFkZWphJ3MgRmF0aGVyICYgU2lzdGVyIEpvaW4gQ29uZ3Jlc3MsIFdpZmUgQWxyZWFkeSBBIEJKUCBMZWFkZXIgIEFsbCBJbiBUaGUgRmFtaWx5OiBSYXZpbmRyYSBKYWRlamEncyBGYXRoZXIgJiBTaXN0ZXIgSm9pbiBDb25ncmVzcywgV2lmZSBBbHJlYWR5IEEgQkpQIExlYWRlciAgVGhlcmUgYXJlIHRpbWVzIHdoZW4gdGhlcmVcdTIwMTlzIGhhcmRseSBhbnkgZGlmZmVyZW5jZSBiZXR3ZWVuIGZhbWlseSBwb2xpdGljcyBhbmQgcGFydHkgcG9saXRpY3MuIFRlYW0gSW5kaWEgQWxsLXJvdW5kZXIgUmF2aW5kcmEgSmFkZWphXHUyMDE5cyBmYW1pbHkgaXMgcHJvYmFibHkgaGF2aW5nIHRoZSBzYW1lIG1vbWVudCBhcyBoaXMgZmFtaWx5IG1lbWJlcnMgaGF2ZSBjaG9zZW4gZGlmZmVyZW50IHBvbGl0aWNhbCBwYXJ0aWVzIHRvIGdvIHdpdGggaW4gdGhlIG9uZ29pbmcgZWxlY3Rpb25zIGZvciBMb2sgU2FiaGEuICBJZiB0aGUgcmVwb3J0cyBhcmUgdG8gYmUgYmVsaWV2ZWQsIGp1c3QgYSBmZXcgd2Vla3MgYWZ0ZXIgSmFkZWphXHUyMDE5cyB3aWZlIFJpdmFiYSBTb2xhbmtpIGpvaW5lZCBBbWl0IFNoYWgtbGVkIEJoYXJ0aXlhIEphbnRhIFBhcnR5LCB0d28gaW1wb3J0YW50IG1lbWJlcnMgZnJvbSBoaXMgZmFtaWx5IGhhdmUgam9pbmVkIENvbmdyZXNzLiAgQWNjb3JkaW5nIHRvIHJlcG9ydHMsIEphZGVqYVx1MjAxOXMgZmF0aGVyIEFuaXJ1ZGhzaW5oIEphZGVqYSBhbmQgTmF5bmFiYSBqb2luZWQgdGhlIENvbmdyZXNzIGluIEthbGF2YWQgY2l0eSBvZiBKYW1uYWdhciBkaXN0cmljdC4gVGhleSBkaWQgc28gaW4gdGhlIHByZXNlbmNlIG9mIGZpcmVicmFuZCBQYXRpZGFyIGxlYWRlciBIYXJkaWsgUGF0ZWwuICBIaXMgZmFtaWx5LCBpcyBhcHBhcmVudGx5IHVuaGFwcHkgd2l0aCBCSlAgb3ZlciBub3QgZnVsZmlsbGluZyB0aGUgcHJvbWlzZXMgbWFkZSB0byB0aGUgcGVvcGxlIGluIDIwMTQuICBFYXJsaWVyLCBNcnMgSmFkZWphIGpvaW5lZCB0aGUgQkpQIGZpdmUgbW9udGhzIGFmdGVyIHNoZSB3YXMgYXBwb2ludGVkIHRoZSBjaGllZiBvZiB3b21lblx1MjAxOXMgd2luZyBvZiBLYXJuaSBTZW5hIHRoYXQgaGFkIHByb3Rlc3RlZCB0aGUgcmVsZWFzZSBvZiBIaW5kaSBtb3ZpZSBQYWRtYXZhYXQuICBcdTIwMWNIaXMgcGVyc29uYWxpdHksIGhpcyBpZGVudGl0eSwgdGhlIHdheSBoZSBoYXMgbGVkIHRoZSBuYXRpb24sIGhpcyB2aXNpb24gZm9yIHRoZSBjb3VudHJ5IGFuZCB0aGUgaWRlbnRpdHkgb2YgSGluZHVzdGFuIGhlIGhhcyBjYXJ2ZWQgb3V0IGluIHRoZSB3b3JsZCwgaXQgaXMgYSBtYXR0ZXIgb2YgcHJpZGUgZm9yIGV2ZXJ5IGNpdGl6ZW4sXHUyMDFkIHNoZSB0b2xkIFRoZSBJbmRpYW4gRXhwcmVzcy4gIEphZGVqYSBpcyBjdXJyZW50bHkgcmVwcmVzZW50aW5nIENoZW5uYWkgU1VwZXIgS2luZ3MgaW4gdGhlIG9uZ29pbmcgZWRpdGlvbiBvZiB0aGUgSW5kaWEgUHJlbWllciBMZWFndWUuIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MTkiLCAidGl0bGUiOiAiQWxsIEluIFRoZSBGYW1pbHk6IFJhdmluZHJhIEphZGVqYSdzIEZhdGhlciAmIFNpc3RlciBKb2luIENvbmdyZXNzLCBXaWZlIEFscmVhZHkgQSBCSlAgTGVhZGVyIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiTWFrZSBhIHZpc2l0IiwgIiBhcHBvaW50bWVudCIsICJldmlkZW5jZSIsICJvcGVyYXRpb24iXSwgImNvdW50cmllcyI6IFsiTUFMQVlTSUEiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjMuNTMyMSIsICIxMDMuNDYyIl1dLCAic291cmNlIjogImh0dHBzOi8vd3d3Lm1hbGF5bWFpbC5jb20vbmV3cy9tYWxheXNpYS8yMDE5LzA0LzE0L25hamlicy10cmlhbC1jb250aW51ZXMtdG9tb3Jyb3ctd2l0aC1kZWZlbmNlLXRvLWNyb3NzLWV4YW1pbmUtZmlyc3Qtd2l0bmVzcy8xNzQzMjMyIiwgImNvbnRlbnQiOiAiS1VBTEEgTFVNUFVSLCBBcHJpbCAxNCBcdTIwMTQgVGhlIHRyaWFsIG9mIGZvcm1lciBQcmltZSBNaW5pc3RlciBEYXR1ayBTZXJpIE5hamliIFJhemFrXHUyMDE5cyBjYXNlIGludm9sdmluZyBSTTQyIG1pbGxpb24gb2YgU1JDIEludGVybmF0aW9uYWwgU2RuIEJoZCBmdW5kcyB3aWxsIGNvbnRpbnVlIHRvbW9ycm93IHdpdGggaGlzIGRlZmVuY2UgdGVhbSB0byBjcm9zcy1leGFtaW5lIHRoZSBmaXJzdCB3aXRuZXNzLiAgT24gQXByaWwgMywgSGlnaCBDb3VydCBKdWRnZSBNb2hkIE5hemxhbiBNb2hkIEdoYXphbGkgc2V0IEFwcmlsIDE1IHVudGlsIE1heSAxMCB0byBjb250aW51ZSB0aGUgdHJpYWwgb2YgTmFqaWIsIHdobyBpcyBQZWthbiBNZW1iZXIgb2YgUGFybGlhbWVudC4gIFRoZSBoaWdoIHByb2ZpbGUgdHJpYWwgd291bGQgY29udGludWUgd2l0aCBjb3Vuc2VsIEhhcnZpbmRlcmppdCBTaW5naCByZXByZXNlbnRpbmcgTmFqaWIgdG8gY3Jvc3MtZXhhbWluZSB0aGUgZmlyc3Qgd2l0bmVzcywgTXVoYW1tYWQgQWttYWx1ZGluIEFiZHVsbGFoLCAzNSwgYXNzaXN0YW50IHJlZ2lzdHJhciBvZiBDb21wYW5pZXMgQ29tbWlzc2lvbiBvZiBNYWxheXNpYSAoU1NNKS4gIE9uIHRoZSBmaXJzdCBkYXkgb2YgdHJpYWwsIE11aGFtbWFkIEFrbWFsdWRpbiB0b2xkIHRoZSBjb3VydCB0aGF0IFNSQyBJbnRlcm5hdGlvbmFsIFNkbiBCaGQsIGhhZCBhIHBhaWQgY2FwaXRhbCBvZiBSTTEgbWlsbGlvbiB3aGVuIGl0IHJlZ2lzdGVyZWQgd2l0aCB0aGUgU1NNIG9uIEphbnVhcnkgNywgMjAxMSwgYW5kIGNoZWNrcyBvbiB0aGUgc2hhcmVob2xkZXJzIGFsc28gZm91bmQgdGhhdCBhbGwgb25lIG1pbGxpb24gc2hhcmVzIHdlcmUgaGVsZCBieSB0aGUgRmluYW5jZSBNaW5pc3RyeSAoSW5jb3Jwb3JhdGVkKS4gIE5hamliLCA2NiwgaXMgZmFjaW5nIHRocmVlIGNvdW50cyBvZiBjcmltaW5hbCBicmVhY2ggb2YgdHJ1c3QsIG9uZSBjaGFyZ2Ugb2YgYWJ1c2luZyBoaXMgcG9zaXRpb24gYW5kIHRocmVlIGNvdW50cyBvZiBtb25leSBsYXVuZGVyaW5nIG92ZXIgU1JDIEludGVybmF0aW9uYWwgU2RuIEJoZCBmdW5kcyBhbW91bnRpbmcgdG8gUk00MiBtaWxsaW9uLiAgSGUgaXMgYWxsZWdlZCB0byBoYXZlIGNvbW1pdHRlZCB0aGUgb2ZmZW5jZXMgYXQgQW1Jc2xhbWljIEJhbmsgQmVyaGFkIGluIEphbGFuIFJhamEgQ2h1bGFuIGFuZCB0aGUgUHJpbWUgTWluaXN0ZXJcdTIwMTlzIE9mZmljZSBpbiBQdXRyYWpheWEgYmV0d2VlbiBBdWd1c3QgMTcsIDIwMTEsIGFuZCBGZWJydWFyeSAxMCwgMjAxNS4gIE5hamliLCB3aG8gaXMgdGhlIHNpeHRoIHByaW1lIG1pbmlzdGVyIG9mIE1hbGF5c2lhLCBpcyB0aGUgZmlyc3QgdG8gZmluZCBoaW1zZWxmIGluIHRoZSBhY2N1c2VkIGRvY2suICBBdHRvcm5leS1HZW5lcmFsIFRvbW15IFRob21hcyBpbiBoaXMgb3BlbmluZyBzdGF0ZW1lbnQgb24gdGhlIGZpcnN0IGRheSBvZiB0cmlhbCwgYW1vbmcgb3RoZXJzLCBzYWlkIHRoZSBwcm9zZWN1dGlvbiB3aWxsIHByb3ZlIHRoYXQgTmFqaWIgaGFkIHVzZWQgaGlzIHBvc2l0aW9uIGFzIFByaW1lIE1pbmlzdGVyIGFuZCBNaW5pc3RlciBvZiBGaW5hbmNlIHRvIG9idGFpbiBmb3IgaGltc2VsZiBhIGdyYXRpZmljYXRpb24gb2YgUk00MiBtaWxsaW9uLiAgXHUyMDFjSXQgaXMgbXkgZHV0eSBhbmQgcHJpdmlsZWdlIG9mIG9wZW5pbmcgdGhlIGZpcnN0IHRyaWFsIGluIG91ciBjb3VydHMgYWdhaW5zdCBhIGZvcm1lciBwcmltZSBtaW5pc3RlciB3aG8sIGZvciBuZWFybHkgYSBkZWNhZGUsIG9jY3VwaWVkIHRoZSBtb3N0IHBvd2VyZnVsIG9mZmljZSBpbiB0aGUgbGFuZCBhbmQgd2llbGRlZCBuZWFyIGFic29sdXRlIHBvd2VyLiAgXHUyMDFjU3VjaCBwcml2aWxlZ2UgY2FycmllcyB3aXRoIGl0IGVub3Jtb3VzIHJlc3BvbnNpYmlsaXR5LCB3aGljaCBteSBvZmZpY2UgaW50ZW5kcyB0byBkaXNjaGFyZ2UgaW4gb3JkZXIgdG8gZXN0YWJsaXNoIHRoYXQgdGhlIGFjY3VzZWQgaXMgZ3VpbHR5IG9mIHRoZSBzZXZlbiBjaGFyZ2VzIHRoYXQgaGUgaXMgZmFjaW5nIGJlZm9yZSB5b3VyIGxvcmRzaGlwLiAgXHUyMDFjVGhlIGFjY3VzZWQgZHVyaW5nIGhpcyBlbnRpcmUgcGVyaW9kIGluIG9mZmljZSBhcyBQcmltZSBNaW5pc3RlciBvZiB3aGljaCB0aW1lIHRoZXNlIG9mZmVuY2VzIHdlcmUgY29tbWl0dGVkIHNpbXVsdGFuZW91c2x5IGhlbGQgdGhlIG9mZmljZSBvZiBNaW5pc3RlciBvZiBGaW5hbmNlLCB0aGVyZWJ5IGNvbWJpbmluZyBtYXhpbXVtIHBvbGl0aWNhbCBwb3dlciBhbmQgY29udHJvbCBvZiB0aGUgbmF0aW9uXHUyMDE5cyBwdXJzZSxcdTIwMWQgaGUgc2FpZC4gIFRob21hcyBhbHNvIHNhaWQgXHUyMDFjdGhlIG9wZXJhdGlvbiBvZiBBcnRpY2xlIDggKDEpIG9mIHRoZSBGZWRlcmFsIENvbnN0aXR1dGlvbiB0aGF0IFx1MjAxOGFsbCBwZXJzb25zIGFyZSBlcXVhbCBiZWZvcmUgdGhlIGxhd1x1MjAxOSBpcyBhbXBseSBkZW1vbnN0cmF0ZWQgYnkgdGhpcyB0cmlhbFx1MjAxZC4gIFx1MjAxY0EgZm9ybWVyIFByaW1lIE1pbmlzdGVyIGlzIGNoYXJnZWQgdW5kZXIgZHVlIHByb2Nlc3MgaW4gdGhlIG9yZGluYXJ5IGNvdXJ0IG9mIHRoZSBsYW5kLCBsaWtlIGFueSBvdGhlciBhY2N1c2VkLiBUaGUgYWNjdXNlZCBpcyBub3QgYWJvdmUgdGhlIGxhdyBhbmQgaGlzIHByb3NlY3V0aW9uIGFuZCB0aGlzIHRyaWFsIHNob3VsZCBzZXJ2ZSBhcyBwcmVjZWRlbnRzIGZvciBhbGwgZnV0dXJlIGhvbGRlcnMgb2YgdGhpcyBhdWd1c3Qgb2ZmaWNlLFx1MjAxZCBoZSBzYWlkLiAgRm9sbG93aW5nIGFyZSBhbW9uZyBvdGhlcnMga2V5IGluZ3JlZGllbnRzIGluIHRoZSBwcm9zZWN1dGlvblx1MjAxOXMgb3BlbmluZyBzdGF0ZW1lbnQgcmVhZCBvdXQgYnkgVGhvbWFzLiAgVGhlIHByb3NlY3V0aW9uIHdpbGwgYWJ1bmRhbnRseSBlc3RhYmxpc2ggdGhhdCB0aGUgYWNjdXNlZCB3YXMgZGlyZWN0bHkgaW52b2x2ZWQgaW4gdGhlIGRlY2lzaW9uIG9uIGJlaGFsZiBvZiB0aGUgR292ZXJubWVudCBvZiBNYWxheXNpYSB0byBnaXZlIGdvdmVybm1lbnQgZ3VhcmFudGVlcyBmb3IgdGhlIGxvYW5zIGFtb3VudGluZyB0byBSTTQgYmlsbGlvbiByZWNlaXZlZCBieSBTUkMgSW50ZXJuYXRpb25hbCBTZG4gQmhkIGZyb20gS3VtcHVsYW4gV2FuZyBQZXJzYXJhYW4gKERpcGVyYmFkYW5rYW4pIChcdTIwMWNLV0FQXHUyMDFkKS4gIFRoZSBldmlkZW5jZSB3aWxsIGFsc28gZXN0YWJsaXNoIHRoYXQgaW4gRGVjZW1iZXIgMjAxNCwgdGhlIGFjY3VzZWRcdTIwMTlzIGNyZWRpdCBjYXJkIHdhcyBjaGFyZ2VkIFVTJDEzMCw2MjUgKFJNNTM3LDQ1NikgZm9yIGV4cGVuc2VzIG1hZGUgYXQgQ2hhbmVsLCBhbiBleGNsdXNpdmUgZmFzaGlvbiBzdG9yZSBpbiBIb25vbHVsdS4gIFRoZSBwcm9zZWN1dGlvbiB3aWxsIHByb3ZlIHRoYXQgcGVyc29uYWwgY2hlcXVlcyB3ZXJlIGlzc3VlZCwgYW1vbmcgb3RoZXJzLCBhcyBwYXltZW50IGZvciByZW5vdmF0aW9uIHdvcmtzIGNhcnJpZWQgb3V0IGF0IHRoZSBhY2N1c2VkXHUyMDE5cyByZXNpZGVuY2UgYXQgSmFsYW4gTGFuZ2dhayBEdXRhLCBLdWFsYSBMdW1wdXIsIHRoZSBhY2N1c2VkXHUyMDE5cyByZXNpZGVuY2UgaW4gUGVrYW4sIFBhaGFuZyBhcyB3ZWxsIGFzIGNoZXF1ZXMgd2VyZSBpc3N1ZWQgdG8gdmFyaW91cyBCYXJpc2FuIE5hc2lvbmFsIGNvbXBvbmVudCBwb2xpdGljYWwgcGFydGllcy4gIEluIHByb3ZpbmcgdGhlIGluZ3JlZGllbnRzIG9uIHRoZSBjaGFyZ2Ugb2YgYWJ1c2luZyBoaXMgcG9zaXRpb24sIGV2aWRlbmNlLCBib3RoIG9yYWwsIGRvY3VtZW50YXJ5IGFuZCBjaXJjdW1zdGFudGlhbCB3b3VsZCBiZSBsZWQgYnkgdGhlIHByb3NlY3V0aW9uIHRvIGVzdGFibGlzaCB0aGUgcHJvcG9zZWQgZXN0YWJsaXNobWVudCBvZiBTUkMgSW50ZXJuYXRpb25hbCBTZG4gQmhkLCB0aGUgcHJvcG9zZWQgc2V0dGluZy11cCBvZiBhIFJNMyBiaWxsaW9uIGdyYW50LCBTUkMgSW50ZXJuYXRpb25hbFx1MjAxOXMgcmVxdWVzdCBmb3IgYSBnb3Zlcm5tZW50IGxvYW4gZm9yIFJNMy45NSBiaWxsaW9uLCBhcHBvaW50bWVudHMgb2YgU1JDIEludGVybmF0aW9uYWxcdTIwMTlzIEJvYXJkIG9mIERpcmVjdG9ycywgYW5kIG9uZSBOaWsgRmFpc2FsIEFyaWZmIEthbWlsIGFzIENFTyBvZiBTUkMgSW50ZXJuYXRpb25hbC4gIFRoZSBwcm9zZWN1dGlvbiB3aWxsIGFsc28gZXN0YWJsaXNoIG9uIG1hdHRlcnMgdGhhdCBsZWQgdG8gdGhlIGFwcHJvdmFsIG9mIHRoZSBNYWxheXNpYW4gZ292ZXJubWVudCwgdGhyb3VnaCB0aGUgTWluaXN0cnkgb2YgRmluYW5jZSwgdGhlIGlzc3VhbmNlIG9mIGEgUk0yIGJpbGxpb24gZ292ZXJubWVudCBndWFyYW50ZWUgaW4gZmF2b3VyIG9mIFNSQyBJbnRlcm5hdGlvbmFsIGFuZCBmb3IgdGhlIGlzc3VhbmNlIG9mIGEgZnVydGhlciBSTTIgYmlsbGlvbiBnb3Zlcm5tZW50IGd1YXJhbnRlZSBpbiBmYXZvdXIgb2YgdGhlIGNvbXBhbnkgKFNSQyBJbnRlcm5hdGlvbmFsKS4gIFRoZSBldmlkZW5jZSB3aWxsIGFsc28gYmUgbGVkIHJlZ2FyZGluZyBtb25pZXMgdG90YWxsaW5nIFJNNDIgbWlsbGlvbiwgc291cmNlZCBmcm9tIFNSQyBJbnRlcm5hdGlvbmFsLCB3ZXJlIGNoYW5uZWxsZWQgdGhyb3VnaCB0aGUgY29tcGFueSBhY2NvdW50cyBvZiBHYW5kaW5nYW4gTWVudGFyaSBTZG4gQmhkIChhIHdob2xseS1vd25lZCBzdWJzaWRpYXJ5IG9mIFNSQyBJbnRlcm5hdGlvbmFsIFNkbiBCaGQpIGFuZCBJaHNhbiBQZXJkYW5hIFNkbiBCaGQgKHB1cnBvcnRlZGx5IGFwcG9pbnRlZCBhcyBTUkMgSW50ZXJuYXRpb25hbFx1MjAxOXMgY29ycG9yYXRlIHNvY2lhbCByZXNwb25zaWJpbGl0eSBwYXJ0bmVyKS4gIEZvciB0aGUgY3JpbWluYWwgYnJlYWNoIG9mIHRydXN0IChDQlQpIGNoYXJnZXMsIHRoZSBwcm9zZWN1dGlvbiB3aWxsIGVzdGFibGlzaCB0aGF0IE5hamliLCBhcyBQcmltZSBNaW5pc3RlciBhbmQgTWluaXN0ZXIgb2YgRmluYW5jZSwgYW5kIEFkdmlzb3IgRW1lcml0dXMgb2YgU1JDIEludGVybmF0aW9uYWwsIHdoaWxzdCBlbnRydXN0ZWQgd2l0aCBtb25pZXMgYmVsb25naW5nIHRvIFNSQyBJbnRlcm5hdGlvbmFsLCBjb21taXR0ZWQgQ0JUIGluIHJlc3BlY3Qgb2YgdGhlIFJNMjcgbWlsbGlvbiwgUk01IG1pbGxpb24gYW5kIFJNMTAgbWlsbGlvbiBiZWxvbmdpbmcgdG8gU1JDIEludGVybmF0aW9uYWwuICBUaGUgcHJvc2VjdXRpb24gd2lsbCBhbHNvIHByb3ZpZGUgZXZpZGVuY2UgdGhhdCBOYWppYiBoYWQgZW5nYWdlZCBpbiBtb25leSBsYXVuZGVyaW5nIGJ5IHJlY2VpdmluZyBSTTQyIG1pbGxpb24sIGJlaW5nIHRoZSBwcm9jZWVkcyBvZiB1bmxhd2Z1bCBhY3Rpdml0eSwgaW4gaGlzIEFtUHJpdmF0ZSBCYW5raW5nIGFjY291bnQuICBUaGUgZXZpZGVuY2Ugd291bGQgYWxzbyBiZSBsZWQgdGhhdCBOYWppYiBoYWQgaXNzdWVkIDE1IGNoZXF1ZXMgZnJvbSBoaXMgYmFuayBhY2NvdW50IHRvdGFsbGluZyBSTTEwLDc3Niw1MTQuMDAuIFx1MjAxNCBCZXJuYW1hIiwgImNyZWF0ZWRfZGF0ZV90aW1lIjogIjIwMTktMDQtMTUgMDA6MTE6MjEiLCAidGl0bGUiOiAiTmFqaWJcdTIwMTlzIHRyaWFsIGNvbnRpbnVlcyB0b21vcnJvdyB3aXRoIGRlZmVuY2UgdG8gY3Jvc3MtZXhhbWluZSBmaXJzdCB3aXRuZXNzIHwgTWFsYXkgTWFpbCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkNvbmZpc2NhdGUgcHJvcGVydHkiLCAiYXJyZXN0IiwgImRldGFpbiIsICJtb25pdG9yIiwgIm9wZXJhdGlvbiIsICJ0YXJnZXQiXSwgImNvdW50cmllcyI6IFsiUEhJTElQUElORVMiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjExIiwgIjEyMy41Il1dLCAic291cmNlIjogImh0dHBzOi8vY2VidWRhaWx5bmV3cy5pbnF1aXJlci5uZXQvMjI4MzY2L3A0LTVtLXNoYWJ1LXNlaXplZC00LXBlcnNvbnMtbmFiYmVkLWluLXdlZWtlbmQtZHJ1Zy1idXN0cy1pbi1jZWJ1LWNpdHkiLCAiY29udGVudCI6ICJDRUJVIENJVFksIFBoaWxpcHBpbmVzIFx1MjAxNCBUd28gc2VwYXJhdGUgYW50aS1pbGxlZ2FsIGRydWcgb3BlcmF0aW9ucyBpbiBhIHNwYW4gb2YgZWlnaHQgaG91cnMgb3ZlciB0aGUgd2Vla2VuZCBpbiBDZWJ1IENpdHkgeWllbGRlZCBQNC41IG1pbGxpb24gb2Ygc3VzcGVjdGVkIHNoYWJ1IGFuZCBuZXR0ZWQgZm91ciBwZXJzb25zLCBvbmUgb2Ygd2hvbSB3YXMgY29uc2lkZXJlZCBieSB0aGUgcG9saWNlIGFzIGEgaGlnaCB2YWx1ZSB0YXJnZXQuICBBdCBwYXN0IDggcC5tLiBvbiBTYXR1cmRheSwgQXByaWwgMTMsIGluIEJhcmFuZ2F5IFNhbiBOaWNvbGFzLCBwb2xpY2UgYXJyZXN0ZWQgQXJub2xkIFJlc3VyZWN0aW9uLCBhIHJlc2lkZW50IG9mIHRoZSBiYXJhbmdheSwgYWZ0ZXIgaGUgd2FzIGNhdWdodCB3aXRoIGhhbGYgYSBraWxvIG9mIHN1c3BlY3RlZCBzaGFidSBkdXJpbmcgYSBidXktYnVzdCBvcGVyYXRpb24sIHNhaWQgTGlldXRlbmFudCBDb2xvbmVsIEdsZW5uIE1heWFtLCBQaGlsaXBwaW5lIERydWcgRW5mb3JjZW1lbnQgR3JvdXAgVmlzYXlhcyBjaGllZiwgZHVyaW5nIGFuIGludGVydmlldyB3aXRoIENETiBEaWdpdGFsLiAgTWF5YW0gc2FpZCB0aGF0IHRoZSBzaXggbGFyZ2UgcGFja3Mgb2Ygc3VzcGVjdGVkIHNoYWJ1IGNvbmZpc2NhdGVkIGZyb20gUmVzdXJlY3Rpb24gaGFkIGFuIGVzdGltYXRlZCBEYW5nZXJvdXMgRHJ1Z3MgQm9hcmQgdmFsdWUgb2YgUDMuNCBtaWxsaW9uLiAgSGUgc2FpZCB0aGF0IHRoZXkgaGFkIG1vbml0b3JlZCB0aGUgc3VzcGVjdCBmb3IgdGhyZWUgd2Vla3MgYWZ0ZXIgdGhleSBnb3QgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGhpcyBpbGxlZ2FsIGFjdGl2aXRpZXMgZnJvbSBhIHN1c3BlY3RlZCBkcnVnIGNvdXJpZXIgaW4gb25lIG9mIHRoZWlyIGFudGktaWxsZWdhbCBkcnVnIG9wZXJhdGlvbnMgaW4gdGhlIHBhc3QgbW9udGguICBIZSBzYWlkIHRoYXQgdGhleSBsZWFybmVkIHRoYXQgdGhlIHN1c3BlY3Qgd2FzIGFsbGVnZWRseSBhIGRydWcgdXNlciwgYSBkcnVnIGNvdXJpZXIgYW5kIHdhcyBhbGxlZ2VkbHkgbGlua2VkIHRvIGEgZ3JvdXAgaGVhZGVkIGJ5IGEgZHJ1ZyBsb3JkIG9wZXJhdGluZyB3aXRoaW4gdGhlIGNpdHkuICBNYXlhbSwgaG93ZXZlciwgcmVmdXNlZCB0byBuYW1lIHRoZSBzdXNwZWN0ZWQgZHJ1ZyBsb3JkIHRoYXQgUmVzdXJlY3Rpb24gd2FzIGxpbmtlZCB0by4gIFJlc3VyZWN0aW9uIHdhcyBkZXRhaW5lZCBhdCB0aGUgQWJlbGxhbmEgUG9saWNlIFByZWNpbmN0IGRldGVudGlvbiBjZWxsIHBlbmRpbmcgdGhlIGZpbGluZyBvZiBjaGFyZ2VzLiAgQXQgcGFzdCA0IGEubS4gb24gU3VuZGF5LCBBcHJpbCAxNCwgdGhyZWUgcGVyc29ucyB3ZXJlIGFycmVzdGVkIGluY2x1ZGluZyBvbmUsIHdob20gcG9saWNlIGNvbnNpZGVyZWQgYSBoaWdoIHZhbHVlIHRhcmdldCBpbiBhIGJ1eS1idXN0IG9wZXJhdGlvbiBpbiBhIHJlbnRlZCBhcGFydG1lbnQgaW4gYSBzdWJkaXZpc2lvbiBpbiBCYXJhbmdheSBCdWxhY2FvLCBDZWJ1IENpdHkuICBBcmNoaWUgQWJlbGxhbmEgYWxzbyBrbm93biBhcyBBcmNoaWUgQmF5b3QsIDM5LCBvZiBCYXJhbmdheSBTdWJhIGluIENlYnUgQ2l0eTsgTWFyam9yeSBBcnJpZXNnYWRvLCAzMywgb2YgU2l0aW8gQ2Fib3RveSwgQmFyYW5nYXkgUG9vYyBpbiBUYWxpc2F5IENpdHk7IGFuZCBMZW5kb24gR29uemFnYSwgMzcsIG9mIEJhcmFuZ2F5IEJ1bGFjYW8gaW4gQ2VidSBDaXR5OyB3ZXJlIGFycmVzdGVkIGFmdGVyIHRoZXkgd2VyZSBjYXVnaHQgd2l0aCBQMS4xIG1pbGxpb24gd29ydGggb2Ygc3VzcGVjdGVkIHNoYWJ1LCBzYWlkIFBvbGljZSBNYWpvciBSZWdpbm8gTWFyYW1hZywgUGFyZG8gUG9saWNlIFByZWNpbmN0IGNoaWVmLCBpbiBhIHNlcGFyYXRlIGludGVydmlldyB3aXRoIENETiBEaWdpdGFsLiAgTWFyYW1hZyBzYWlkIHRoYXQgQWJlbGxhbmEsIGFsbGVnZWRseSB3YXMgdGhlIGhlYWQgb2YgYSBkcnVnIHN5bmRpY2F0ZSBhbmQgd2hvIGhhZCBiZWVuIGluIGFuZCBvdXQgb2YgamFpbCB3aGlsZSBoaXMgdHdvIGFsbGVnZWQgY29ob3J0cywgQXJyaWVzZ2FkbyBhbmQgR29uemFnYSB3ZXJlIGFsbGVnZWRseSBBYmVsbGFuYVx1MjAxOXMgdHJ1c3RlZCBhaWRlcyBhbmQgY291cmllcnMuICBIZSBzYWlkIHRoYXQgdGhleSBjb25maXNjYXRlZCAxNjguMTQgZ3JhbXMgb2Ygc3VzcGVjdGVkIHNoYWJ1IGZyb20gdGhlIHN1c3BlY3RzIHdoaWNoIGhhZCBhbiBlc3RpbWF0ZWQgRERCIHZhbHVlIG9mIFAxLjEgbWlsbGlvbi4gIFRoZSBzdXNwZWN0cyB3ZXJlIGRldGFpbmVkIGF0IHRoZSBQYXJkbyBQb2xpY2UgUHJlY2luY3QgZGV0ZW50aW9uIGNlbGwgcGVuZGluZyB0aGUgZmlsaW5nIG9mIGNoYXJnZXMuL2RicyIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjIxIiwgInRpdGxlIjogIlA0LjVNIHNoYWJ1IHNlaXplZDsgNCBwZXJzb25zIG5hYmJlZCBpbiB3ZWVrZW5kIGRydWcgYnVzdHMgaW4gQ2VidSBDaXR5In0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiSG9zdCBhIHZpc2l0IiwgIiBjaGVtaWNhbCAiLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIkFVU1RSQUxJQSJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siLTIyLjczMzMiLCAiMTQ5LjQ1Il1dLCAic291cmNlIjogImh0dHA6Ly93d3cuZ2VvbG9neXBhZ2UuY29tLzIwMTkvMDQvd2hlcmUtd2FzLXRoZS1tb3N0LWdvbGQtZm91bmQtaW4tdGhlLXVuaXRlZC1zdGF0ZXMuaHRtbCIsICJjb250ZW50IjogIkdvbGQgaXMgYSBjaGVtaWNhbCBlbGVtZW50IHdpdGggc3ltYm9sIEF1IGFuZCBhdG9taWMgbnVtYmVyIDc5LCBtYWtpbmcgaXQgb25lIG9mIHRoZSBoaWdoZXIgYXRvbWljIG51bWJlciBlbGVtZW50cyB0aGF0IG9jY3VyIG5hdHVyYWxseS4gSW4gaXRzIHB1cmVzdCBmb3JtLCBpdCBpcyBhIGJyaWdodCwgc2xpZ2h0bHkgcmVkZGlzaCB5ZWxsb3csIGRlbnNlLCBzb2Z0LCBtYWxsZWFibGUsIGFuZCBkdWN0aWxlIG1ldGFsLiBDaGVtaWNhbGx5LCBnb2xkIGlzIGEgdHJhbnNpdGlvbiBtZXRhbCBhbmQgYSBncm91cCAxMSBlbGVtZW50LiAgV2hlcmUgdG8gRmluZCBHb2xkIGluIHRoZSBVbml0ZWQgU3RhdGVzPyAgR29sZCB3YXMgZGlzY292ZXJlZCBpbiBBbGFiYW1hIGFib3V0IDE4MzAsIHNob3J0bHkgZm9sbG93aW5nIHRoZSBHZW9yZ2lhIEdvbGQgUnVzaC4gVGhlIHByaW5jaXBhbCBkaXN0cmljdHMgd2VyZSB0aGUgQXJiYWNvb2NoZWUgZGlzdHJpY3QgaW4gQ2xlYnVybmUgQ291bnR5LCBtb3N0bHkgZnJvbSBwbGFjZXIgZGVwb3NpdHMsIGFuZCB0aGUgSG9nIE1vdW50YWluIGRpc3RyaWN0IGluIFRhbGxhcG9vc2EgQ291bnR5LCB3aGljaCBwcm9kdWNlZCAyNCwwMDAgdHJveSBvdW5jZXMgKDc1MCBrZykgZnJvbSB2ZWlucyBpbiBzY2hpc3QuICBSdXNzaWFuIGV4cGxvcmVycyBkaXNjb3ZlcmVkIHBsYWNlciBnb2xkIGluIHRoZSBLZW5haSBSaXZlciBpbiAxODQ4LCBidXQgbm8gZ29sZCB3YXMgcHJvZHVjZWQuIEdvbGQgbWluaW5nIHN0YXJ0ZWQgaW4gMTg3MCBmcm9tIHBsYWNlcnMgc291dGhlYXN0IG9mIEp1bmVhdS4gQWxhc2thIHByb2R1Y2VkIGEgdG90YWwgb2YgNDAsMzAwLDAwMCB0cm95IG91bmNlcyAoMSwyNTAsMDAwIGtnKSBvZiBnb2xkIGZyb20gMTg4MCB0aHJvdWdoIHRoZSBlbmQgb2YgMjAwNy4gSW4gMjAxNSBBbGFza2FuIG1pbmVzIHByb2R1Y2VkIDg3Myw5ODQgdHJveSBvdW5jZXMgKDI3LDE4My45IGtnKSBvZiBnb2xkLCAxMi43JSBvZiBVUyBwcm9kdWN0aW9uLiBUaGUgbGFyZ2VzdCBnb2xkIHByb2R1Y2VyIGlzIHRoZSBGb3J0IEtub3ggbWluZSwgYSBsYXJnZSBvcGVuIHBpdCBhbmQgY3lhbmlkZSBsZWFjaGluZyBvcGVyYXRpb24gaW4gdGhlIEZhaXJiYW5rcyBtaW5pbmcgZGlzdHJpY3QuICBBcml6b25hIGhhcyBwcm9kdWNlZCBtb3JlIHRoYW4gMTYgbWlsbGlvbiB0cm95IG91bmNlcyAoNDk4IHRvbm5lcykgb2YgZ29sZC4gIEdvbGQgbWluaW5nIGluIEFyaXpvbmEgcmVwb3J0ZWRseSBiZWdhbiBpbiAxNzc0IHdoZW4gU3BhbmlzaCBwcmllc3QgTWFudWVsIExvcGV6IGRpcmVjdGVkIFBhcGFnbyBJbmRpYW5zIHRvIHdhc2ggZ29sZCBmcm9tIGdyYXZlbCBvbiB0aGUgZmxhbmtzIG9mIHRoZSBRdWlqb3RvYSBNb3VudGFpbnMsIFBpbWEgQ291bnR5LiBHb2xkIG1pbmluZyBjb250aW51ZWQgdGhlcmUgdW50aWwgMTg0OSwgd2hlbiB0aGUgTWV4aWNhbiBtaW5lcnMgd2VyZSBsdXJlZCBhd2F5IGJ5IHRoZSBDYWxpZm9ybmlhIEdvbGQgUnVzaC4gT3RoZXIgZ29sZCBtaW5pbmcgdW5kZXIgU3BhbmlzaCBhbmQgTWV4aWNhbiBydWxlIHRvb2sgcGxhY2UgaW4gdGhlIE9ybyBCbGFuY28gZGlzdHJpY3Qgb2YgU2FudGEgQ3J1eiBDb3VudHksIGFuZCB0aGUgQXJpdmFjYSBkaXN0cmljdCwgUGltYSBDb3VudHkuICBNb3VudGFpbiBtYW4gUGF1bGluZSBXZWF2ZXIgZGlzY292ZXJlZCBwbGFjZXIgZ29sZCBvbiB0aGUgZWFzdCBzaWRlIG9mIHRoZSBDb2xvcmFkbyBSaXZlciBpbiAxODYyLiBXZWF2ZXJcdTIwMTlzIGRpc2NvdmVyeSBzdGFydGVkIHRoZSBDb2xvcmFkbyBSaXZlciBHb2xkIFJ1c2ggdG8gdGhlIG5vdyBnaG9zdCB0b3duIG9mIExhIFBheiwgQXJpem9uYSBhbmQgb3RoZXIgbG9jYXRpb25zIGFsb25nIHRoZSByaXZlciBpbiB0aGUgZW5zdWluZyB5ZWFycy4gIFNwYW5pc2ggcHJvc3BlY3RvcnMgZm91bmQgZ29sZCBpbiB0aGUgUG90aG9sZXMgZGlzdHJpY3QgYmV0d2VlbiAxNzc1IGFuZCAxNzgwLCBhbG9uZyB0aGUgQ29sb3JhZG8gUml2ZXIsIGluIHByZXNlbnQgSW1wZXJpYWwgQ291bnR5LCBDYWxpZm9ybmlhLCBhYm91dCB0ZW4gbWlsZXMgbm9ydGhlYXN0IGZyb20gWXVtYSwgQXJpem9uYS4gVGhlIGdvbGQgd2FzIHJlY292ZXJlZCBmcm9tIGRyeSBwbGFjZXJzLiBPdGhlciBwbGFjZXIgZGVwb3NpdHMgb24gdGhlIHdlc3QgYmFuayBvZiB0aGUgQ29sb3JhZG8gUml2ZXIgd2VyZSBxdWlja2x5IGZvdW5kLCBpbmNsdWRpbmcgdGhlIFBpY2FjaG8gYW5kIENhcmdvIE11Y2hhY2hvIGRpc3RyaWN0cy4gIFBsYWNlciBnb2xkIGRlcG9zaXRzIHdlcmUgZm91bmQgYXQgU2FuIFlzaWRybyBpbiBTYW4gRGllZ28gQ291bnR5IGluIDE4MjgsIFNhbiBGcmFuY2lzcXVpdG8gQ2FueW9uIGFuZCBQbGFjZXJpdGEgQ2FueW9uIGluIExvcyBBbmdlbGVzIENvdW50eSBpbiAxODM1IGFuZCAxODQyLCByZXNwZWN0aXZlbHkgIE1ham9yIGdvbGQgbWluaW5nIGluIENhbGlmb3JuaWEgYmVnYW4gZHVyaW5nIHRoZSBDYWxpZm9ybmlhIEdvbGQgUnVzaC4gR29sZCB3YXMgZm91bmQgYnkgSmFtZXMgTWFyc2hhbGwgYXQgU3V0dGVycyBNaWxsLCBwcm9wZXJ0eSBvZiBKb2huIFN1dHRlciwgaW4gcHJlc2VudC1kYXkgQ29sb21hLiBJbiAxODQ5LCBwZW9wbGUgc3RhcnRlZCBoZWFyaW5nIGFib3V0IHRoZSBnb2xkIGFuZCBhZnRlciBqdXN0IGEgZmV3IHllYXJzIFNhbiBGcmFuY2lzY29cdTIwMTlzIHBvcHVsYXRpb24gaW5jcmVhc2VkIHRvIHRob3VzYW5kcy4gIEdvbGQgd2FzIGRpc2NvdmVyZWQgaW4gMTg1OCBkdXJpbmcgdGhlIFBpa2VcdTIwMTlzIFBlYWsgR29sZCBSdXNoIGluIHRoZSB2aWNpbml0eSBvZiBwcmVzZW50LWRheSBEZW52ZXIgaW4gMTg1OCwgYnV0IHRoZSBkZXBvc2l0cyB3ZXJlIHNtYWxsLiBUaGUgZmlyc3QgaW1wb3J0YW50IGdvbGQgZGlzY292ZXJpZXMgaW4gQ29sb3JhZG8gd2VyZSBpbiB0aGUgQ2VudHJhbCBDaXR5LUlkYWhvIFNwcmluZ3MgZGlzdHJpY3QgaW4gSmFudWFyeSAxODU5LiBPbmx5IG9uZSBDb2xvcmFkbyBtaW5lIGNvbnRpbnVlcyB0byBwcm9kdWNlIGdvbGQsIHRoZSBDcmlwcGxlIENyZWVrICYgVmljdG9yIEdvbGQgTWluZSBhdCBWaWN0b3IgbmVhciBDb2xvcmFkbyBTcHJpbmdzLCBhbiBvcGVuLXBpdCBoZWFwIGxlYWNoIG9wZXJhdGlvbiBvd25lZCBieSBOZXdtb250IE1pbmluZyBDb3Jwb3JhdGlvbiwgd2hpY2ggcHJvZHVjZWQgMzYwLDAwMCB0cm95IG91bmNlcyAoMTEsMDAwIGtnKSBvZiBnb2xkIGluIDIwMTguICBTbWFsbCBhbW91bnRzIG9mIGdvbGQgd2VyZSBtaW5lZCBjb21tZXJjaWFsbHkgaW4gTm9ydGggRWFzdGVybiBGbG9yaWRhIGR1cmluZyB0aGUgbGF0ZSAxOXRoIENlbnR1cnksIGF0IHRoZSBzaXRlIHdoZXJlIE1pa2UgUm9lc3MgR29sZCBIZWFkIEJyYW5jaCBTdGF0ZSBQYXJrIGlzIGxvY2F0ZWQgdG9kYXkuIE5vIHJlY29yZHMgYXJlIGV4dGFudCBvbiB0aGUgYW1vdW50IG9mIGdvbGQgcHJvZHVjZWQsIGJ1dCB0aGUgZmluZCB3YXMgaW5zdWZmaWNpZW50IHRvIGtlZXAgdGhlIG9wZXJhdGlvbiBydW5uaW5nIGNvbW1lcmNpYWxseSwgYW5kIHRoZSBzbWFsbCBhbW91bnQgb2YgcGF5IGRpcnQgd2FzIGRlcGxldGVkIHdpdGhpbiBhIG1hdHRlciBvZiBtb250aHMuICBHZW9yZ2lhIGlzIGNyZWRpdGVkIHdpdGggYSB0b3RhbCBoaXN0b3JpY2FsIHByb2R1Y3Rpb24gb2YgODcxLDAwMCB0cm95IG91bmNlcyAoMjcsMTAwIGtnKSBvZiBnb2xkIGZyb20gMTgzMCB0aHJvdWdoIDE5NTkuIEFsdGhvdWdoIGhpc3RvcmljYWxseSBpbXBvcnRhbnQsIHRoZSBzdGF0ZSBpcyBub3QgY3VycmVudGx5IGEgZ29sZCBwcm9kdWNlci4gIEdvbGQgd2FzIGZpcnN0IGRpc2NvdmVyZWQgaW4gSWRhaG8gaW4gMTg2MCwgaW4gUGllcmNlIGF0IHRoZSBqdW5jdHVyZSB3aGVyZSBDYW5hbCBDcmVlayBtZWV0cyBPcm9maW5vIENyZWVrLiAgVGhlIGxlYWRpbmcgaGlzdG9yaWNhbCBnb2xkLXByb2R1Y2luZyBkaXN0cmljdCBpcyB0aGUgQm9pc2UgQmFzaW4gaW4gQm9pc2UgQ291bnR5LCB3aGljaCB3YXMgZGlzY292ZXJlZCBpbiAxODYyIGFuZCBwcm9kdWNlZCAyLjkgbWlsbGlvbiB0cm95IG91bmNlcyAoOTAuMiB0b25uZXMpLCBtb3N0bHkgZnJvbSBwbGFjZXJzLiAgVGhlIEZyZW5jaCBDcmVlay1GbG9yZW5jZSBkaXN0cmljdCBpbiBJZGFobyBDb3VudHkgYmVnYW4gaW4gdGhlIDE4NjBzLCBhbmQgaGFzIHByb2R1Y2VkIGFib3V0IDEgbWlsbGlvbiB0cm95IG91bmNlcyAoMzEgdG9ubmVzKSBmcm9tIHBsYWNlcnMuICBUaGUgU2lsdmVyIENpdHkgZGlzdHJpY3QgaW4gT3d5aGVlIENvdW50eSBiZWdhbiBwcm9kdWNpbmcgaW4gMTg2MywgYW5kIG1hZGUgb3ZlciAxIG1pbGxpb24gdHJveSBvdW5jZXMgKDMxIHRvbm5lcyksIG1vc3RseSBmcm9tIGxvZGUgZGVwb3NpdHMuICBUaGUgQ29ldXIgZFx1MjAxOUFsZW5lIGRpc3RyaWN0IGluIFNob3Nob25lIENvdW50eSBoYXMgbWFkZSA0NCwwMDAgdHJveSBvdW5jZXMgKDEsNDAwIGtnKSBvZiBnb2xkIGFzIGJ5cHJvZHVjdCB0byBzaWx2ZXIgbWluaW5nLiAgSW4gMjAwNiwgYWN0aXZlIGdvbGQgbWluZXMgaW4gSWRhaG8gaW5jbHVkZWQgdGhlIFNpbHZlciBTdHJhbmQgbWluZSBhbmQgdGhlIEJvbmQgbWluZS4gIEdvbGQgd2FzIHJlcG9ydGVkIGluIE1hcnlsYW5kIGFzIGVhcmx5IGFzIDE4MzAsIGJ1dCBubyBwcm9kdWN0aW9uIHJlc3VsdGVkLiBQbGFjZXIgZ29sZCB3YXMgZGlzY292ZXJlZCBhdCBHcmVhdCBGYWxscyBuZWFyIFdhc2hpbmd0b24sIERDIGluIDE4NjEgZHVyaW5nIHRoZSBBbWVyaWNhbiBDaXZpbCBXYXIgYnkgVW5pb24gc29sZGllcnMgZnJvbSBDYWxpZm9ybmlhLiBBZnRlciB0aGUgd2FyIGEgbnVtYmVyIG9mIG1pbmVzIHdlcmUgb3BlbmVkIG9uIGdvbGQtYmVhcmluZyBxdWFydHogdmVpbnMgaW4gTW9udGdvbWVyeSBDb3VudHkuIE5vIGdvbGQgcHJvZHVjdGlvbiBoYXMgYmVlbiByZXBvcnRlZCBzaW5jZSAxOTUxLiBUb3RhbCBwcm9kdWN0aW9uIHdhcyBhYm91dCA2LDAwMCB0cm95IG91bmNlcyAoMTkwIGtnKS4gIEFwcHJveGltYXRlbHkgMjksMDAwIHRyb3kgb3VuY2VzICg5MDAga2cpIG9mIGdvbGQgd2VyZSBwcm9kdWNlZCBmcm9tIHRoZSBSb3BlcyBnb2xkIG1pbmUgbm9ydGhlYXN0IG9mIElzaHBlbWluZyBpbiBNYXJxdWV0dGUgQ291bnR5LCBNaWNoaWdhbi4gVGhlIHVuZGVyZ3JvdW5kIG1pbmUsIG9yaWdpbmFsbHkgb3BlcmF0ZWQgZnJvbSAxODgwIHRvIDE4OTcsIGFuZCByZW9wZW5lZCBmcm9tIDE5ODNcdTIwMTMxOTg5LCBleHRyYWN0ZWQgZ29sZCBmcm9tIHF1YXJ0eiB2ZWlucyBpbiBwZXJpZG90aXRlLiAgR29sZCB3YXMgZmlyc3QgZGlzY292ZXJlZCBpbiBNb250YW5hIGluIDE4NTIsIGJ1dCBtaW5pbmcgZGlkIG5vdCBiZWdpbiB1bnRpbCAxODYyLCB3aGVuIGdvbGQgcGxhY2VycyB3ZXJlIGRpc2NvdmVyZWQgYXQgQmFubmFjaywgTW9udGFuYSBpbiAxODYyLiBUaGUgcmVzdWx0aW5nIGdvbGQgcnVzaCByZXN1bHRlZCBpbiBtb3JlIHBsYWNlciBkaXNjb3ZlcmllcywgaW5jbHVkaW5nIHRob3NlIGF0IFZpcmdpbmlhIENpdHkgaW4gMTg2MywgYW5kIGF0IEhlbGVuYSBhbmQgQnV0dGUgaW4gMTg2NC4gSW4gMTg2NywgdGhlIEF0bGFudGljIENhYmxlIFF1YXJ0eiBMb2RlIHdhcyBsb2NhdGVkLiAgVGhlIEJ1dHRlIGRpc3RyaWN0LCBhbHRob3VnaCBtaW5lZCBwcmltYXJpbHkgZm9yIGNvcHBlciwgcHJvZHVjZWQgMi45IG1pbGxpb24gb3VuY2VzICg5MSB0b25lcykgb2YgZ29sZCB0aHJvdWdoIDE5OTAsIGFsbW9zdCBhbGwgYXMgYSBieXByb2R1Y3Qgb2YgY29wcGVyIHByb2R1Y3Rpb24uICBDdXJyZW50IGFjdGl2ZSBoYXJkcm9jayBnb2xkIG1pbmVzIGluY2x1ZGUgdGhlIE1vbnRhbmEgVHVubmVscyBtaW5lLCBhbmQgdGhlIEdvbGRlbiBTdW5saWdodCBtaW5lLiBBY3RpdmUgZ29sZCBwbGFjZXJzIGluY2x1ZGUgdGhlIEJyb3ducyBHdWxjaCBwbGFjZXIgYW5kIHRoZSBDb25mZWRlcmF0ZSBHdWxjaCBwbGFjZXIuIEdvbGQgaXMgYWxzbyBwcm9kdWNlZCBmcm9tIHRocmVlIHBsYXRpbnVtIG1pbmVzIGluIHRoZSBTdGlsbHdhdGVyIGlnbmVvdXMgY29tcGxleDogdGhlIFN0aWxsd2F0ZXIgbWluZSwgdGhlIExvZGVzdGFyIG1pbmUsIGFuZCB0aGUgRWFzdCBCb3VsZGVyIFByb2plY3QuICBOZXZhZGEgaXMgdGhlIGxlYWRpbmcgZ29sZC1wcm9kdWNpbmcgc3RhdGUgaW4gdGhlIG5hdGlvbiwgaW4gMjAxNiBwcm9kdWNpbmcgNSw0NjcsNjQ2IHRyb3kgb3VuY2VzICgxNzAuMDYgdG9ubmVzKSwgcmVwcmVzZW50aW5nIDgxJSBvZiBVUyBnb2xkIGFuZCA1LjUlIG9mIHRoZSB3b3JsZFx1MjAxOXMgcHJvZHVjdGlvbi4gTXVjaCBvZiB0aGUgZ29sZCBpbiBOZXZhZGEgY29tZXMgZnJvbSBsYXJnZSBvcGVuIHBpdCBtaW5pbmcgYW5kIHdpdGggaGVhcCBsZWFjaGluZyByZWNvdmVyeS4gU29tZSBvZiB0aGUgd29ybGRcdTIwMTlzIG1ham9yIG1pbmluZyBjb21wYW5pZXMsIGluY2x1ZGluZyBOZXdtb250IE1pbmluZywgQmFycmljayBHb2xkIGFuZCBLaW5yb3NzIEdvbGQsIG9wZXJhdGUgZ29sZCBtaW5lcyBpbiB0aGUgc3RhdGUuIEFjdGl2ZSBtYWpvciBtaW5lcyBpbmNsdWRlIENvcnRleiwgVHdpbiBDcmVla3MsIEJldHotUG9zdCwgTWVpa2xlLCBNYXJpZ29sZCwgUm91bmQgTW91bnRhaW4sIEplcnJpdHQgQ2FueW9uIGFuZCBHZXRjaGVsbC4gIE5ld21vbnQgYW5kIEJhcnJpY2sgb3BlcmF0ZSB0aGUgbGFyZ2VzdCBtaW5pbmcgb3BlcmF0aW9ucywgb24gdGhlIHByb2xpZmljIENhcmxpbiBUcmVuZCwgb25lIG9mIHRoZSB3b3JsZFx1MjAxOXMgcmljaGVzdCBtaW5pbmcgZGlzdHJpY3RzLiAgR29sZCB3YXMgZmlyc3QgZGlzY292ZXJlZCBpbiBOZXcgTWV4aWNvIGluIDE4MjggaW4gdGhlIFx1MjAxY09sZCBQbGFjZXJzXHUyMDFkIGRpc3RyaWN0IGluIHRoZSBPcnRpeiBNb3VudGFpbnMsIFNhbnRhIEZlIENvdW50eSwgTmV3IE1leGljby4gVGhlIHBsYWNlciBnb2xkIGRpc2NvdmVyeSB3YXMgZm9sbG93ZWQgYnkgZGlzY292ZXJ5IG9mIGEgbmVhcmJ5IGxvZGUgZGVwb3NpdC4gIEluIDE4NzcsIHR3byBwcm9zcGVjdG9ycyBjb2xsZWN0ZWQgZmxvYXQgaW4gdGhlIGFyZWEgb2YgdGhlIGZ1dHVyZSBPcHBvcnR1bml0eSBNaW5lIG5lYXIgSGlsbHNib3JvLCBOZXcgTWV4aWNvLCB3aGljaCB3YXMgYXNzYXllZCBhdCAkMTYwIHBlciB0b24gaW4gZ29sZCBhbmQgc2lsdmVyLiBTb29uLCBvcmUgd2FzIGRpc2NvdmVyZWQgYXQgdGhlIG5lYXJieSBSYXR0bGVzbmFrZSB2ZWluIGFuZCBhIHBsYWNlciBkZXBvc2l0IG9mIGdvbGQgd2FzIGZvdW5kIGluIE5vdmVtYmVyIGF0IHRoZSBSYXR0bGVzbmFrZSBhbmQgV2lja3MgZ3VsY2hlcy4gVG90YWwgcHJvZHVjdGlvbiBwcmlvciB0byAxOTA0IHdhcyBhYm91dCAkNiw3NTAsMDAwLiAgSW4gMjAwNyBhbGwgZ29sZCBwcm9kdWN0aW9uIGluIE5ldyBNZXhpY28gKDEzLDAwMCB0cm95IG91bmNlcyAoNDAwIGtnKSkgY2FtZSBhcyBhIGJ5cHJvZHVjdCBvZiBjb3BwZXIgbWluaW5nIGZyb20gdHdvIGxhcmdlIG9wZW4gcGl0IG1pbmVzIGluIEdyYW50IENvdW50eS4gSG93ZXZlciwgdHdvIHByaW1hcnkgZ29sZCBtaW5lcyBhcmUgYmVpbmcgcmVhZGllZCBmb3IgcHJvZHVjdGlvbjogdGhlIE5vcnRoc3RhciBtaW5lIGluIFJpbyBBcnJpYmEgQ291bnR5LCBhbmQgdGhlIFNhbiBMb3JlbnpvIENsYWltcyBtaW5lIGluIFNvY29ycm8gQ291bnR5LiAgTm9ydGggQ2Fyb2xpbmEgd2FzIHRoZSBzaXRlIG9mIHRoZSBmaXJzdCBnb2xkIHJ1c2ggaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIGZvbGxvd2luZyB0aGUgZGlzY292ZXJ5IG9mIGEgMTctcG91bmQgKDcuNyBrZykgZ29sZCBudWdnZXQgYnkgMTIteWVhci1vbGQgQ29ucmFkIFJlZWQgaW4gYSBjcmVlayBhdCBoaXMgZmF0aGVyXHUyMDE5cyBmYXJtIGluIDE3OTkuIFRoZSBSZWVkIEdvbGQgTWluZSwgc291dGh3ZXN0IG9mIEdlb3JnZXZpbGxlIGluIENhYmFycnVzIENvdW50eSwgTm9ydGggQ2Fyb2xpbmEgcHJvZHVjZWQgYWJvdXQgNTAsMDAwIHRyb3kgb3VuY2VzICgxLDYwMCBrZykgb2YgZ29sZCBmcm9tIGxvZGUgYW5kIHBsYWNlciBkZXBvc2l0cy4gIEdvbGQgd2FzIHByb2R1Y2VkIGZyb20gMTUgZGlzdHJpY3RzLCBhbG1vc3QgYWxsIGluIHRoZSBQaWVkbW9udCByZWdpb24gb2YgdGhlIHN0YXRlLiBUb3RhbCBnb2xkIHByb2R1Y3Rpb24gaXMgZXN0aW1hdGVkIGF0IDEuMiBtaWxsaW9uIHRyb3kgb3VuY2VzICgzNy4zIHRvbm5lcykuICBBbHRob3VnaCBnb2xkIG1pbmVzIGFyZSBzcHJlYWQgb3ZlciBtdWNoIG9mIE9yZWdvbiwgYWxtb3N0IGFsbCBvZiB0aGUgZ29sZCBwcm9kdWNlZCBoYXMgY29tZSBmcm9tIHR3byBwcmluY2lwYWwgYXJlYXM6IHRoZSBLbGFtYXRoIE1vdW50YWlucyBpbiBzb3V0aHdlc3QgT3JlZ29uLCBpbmNsdWRpbmcgQ29vcywgQ3VycnksIERvdWdsYXMsIEphY2tzb24gYW5kIEpvc2VwaGluZSBjb3VudGllczsgYW5kIHRoZSBCbHVlIE1vdW50YWlucyBpbiBub3J0aGVhc3QgT3JlZ29uLCBtb3N0bHkgaW4gQmFrZXIgYW5kIEdyYW50IGNvdW50aWVzLiAgUHJvc3BlY3RvcnMgZnJvbSBJbGxpbm9pcyBkaXNjb3ZlcmVkIHBsYWNlciBnb2xkIGluIHRoZSBLbGFtYXRoIE1vdW50YWlucyBvZiBzb3V0aHdlc3QgT3JlZ29uIGluIDE4NTAsIHN0YXJ0aW5nIGEgcnVzaCB0byB0aGUgYXJlYS4gTG9kZSBnb2xkIGRlcG9zaXRzIHdlcmUgYWxzbyBkaXNjb3ZlcmVkLiAgVHJhdmVsbGVycyBhbG9uZyB0aGUgT3JlZ29uIFRyYWlsIGJvdW5kIGZvciB0aGUgV2lsbGFtZXR0ZSBWYWxsZXkgYXJlIHNhaWQgdG8gaGF2ZSBkaXNjb3ZlcmVkIGdvbGQgaW4gbm9ydGhlYXN0ZXJuIE9yZWdvbiBpbiAxODQ1LCBidXQgbWluaW5nIGluIGVhcm5lc3QgZGlkIG5vdCBiZWdpbiB1bnRpbCAxODYxLiAgQWJvdXQgMzcsMDAwIHRyb3kgb3VuY2VzICgxLDIwMCBrZykgb2YgZ29sZCB3YXMgcHJvZHVjZWQgZnJvbSB0aGUgQ29ybndhbGwgaXJvbiBtaW5lIGZpdmUgbWlsZXMgc291dGggb2YgTGViYW5vbiwgTGViYW5vbiBDb3VudHksIFBlbm5zeWx2YW5pYS4gQWx0aG91Z2ggdGhlIGRlcG9zaXQgcHJvZHVjZWQgaXJvbiBzaW5jZSAxNzQyLCBubyBnb2xkIHdhcyByZXBvcnRlZCBmcm9tIHRoZSBtaW5lIHVudGlsIDE4NzguICBTb3V0aCBDYXJvbGluYSBoYWQgYSBudW1iZXIgb2YgbG9kZSBnb2xkIG1pbmVzIGFsb25nIHRoZSBDYXJvbGluYSBTbGF0ZSBCZWx0LlszOF0gIFRoZSBIYWlsZSBkZXBvc2l0IHdhcyBkaXNjb3ZlcmVkIGluIExhbmNhc3RlciBDb3VudHkgaW4gMTgyNywgYW5kIGF0IGxlYXN0IDI1NywwMDAgdHJveSBvdW5jZXMgKDgsMDAwIGtnKSBvZiBnb2xkIHdlcmUgZXh0cmFjdGVkIGludGVybWl0dGVudGx5IGJldHdlZW4gdGhlbiBhbmQgMTk0Miwgd2hlbiB0aGUgZ29sZCBtaW5lIHdhcyBvcmRlcmVkIGNsb3NlZCBhcyBub25lc3NlbnRpYWwgdG8gdGhlIHdhciBlZmZvcnQuIEJlZ2lubmluZyBpbiAxOTUxLCB0aGUgZGVwb3NpdCB3YXMgbWluZWQgZm9yIGFzc29jaWF0ZWQgc2VyaWNpdGUsIHdoaWNoIHdhcyB1c2VkIGFzIGEgd2hpdGUgZmlsbGVyLiAgVGhlIG9ubHkgb3BlcmF0aW5nIGdvbGQgbWluZSBpbiBTb3V0aCBEYWtvdGEgaXMgdGhlIFdoYXJmIG1pbmUsIGF0IExlYWQsIGFuIG9wZW4gcGl0IGhlYXAgbGVhY2ggb3BlcmF0aW9uIG9wZXJhdGVkIGJ5IENvZXVyIE1pbmluZyB0aGF0IHByb2R1Y2VkIDEwOSwwMDAgb3VuY2VzIG9mIGdvbGQgaW4gMjAxNi4gIFBsYWNlciBnb2xkIHdhcyBkaXNjb3ZlcmVkIG9uIENva2VyIENyZWVrIGluIE1vbnJvZSBDb3VudHksIFRlbm5lc3NlZSBpbiAxODI3LiBUaGUgZGlzdHJpY3QgcHJvZHVjZWQgYWJvdXQgOSwwMDAgdHJveSBvdW5jZXMgKDI4MCBrZykuICBBYm91dCAxNSwwMDAgdHJveSBvdW5jZXMgKDQ3MCBrZykgb2YgZ29sZCB3YXMgcmVjb3ZlcmVkIGZyb20gdGhlIG1hc3NpdmUgc3VsZmlkZSBjb3BwZXIgb3JlcyBhdCBEdWNrdG93biwgVGVubmVzc2VlLiAgU29tZSBwcm9zcGVjdHMgaGF2ZSBiZWVuIGV4Y2F2YXRlZCBmb3IgZ29sZCBvbiB0aGUgTGxhbm8gVXBsaWZ0IG9mIGNlbnRyYWwgVGV4YXMuIEdvbGQgcHJvc3BlY3RzIGluY2x1ZGUgdGhlIEhlYXRoIG1pbmUgYW5kIHRoZSBCYWJ5aGVhZCBkaXN0cmljdCwgYm90aCBpbiBMbGFubyBDb3VudHksIGFuZCB0aGUgQ2VudHJhbCBUZXhhcyBtaW5lIGluIEdpbGxlc3BpZSBDb3VudHkuIEdvbGQgcHJvZHVjdGlvbiwgaWYgYW55LCBpcyBub3Qga25vd24uIEhpc3RvcmljYWxseSwgdGhlIExvc3QgTmlnZ2VyIEdvbGQgTWluZSBtYXkgYmUgaW4gVGV4YXMuICBNb3N0IGdvbGQgcHJvZHVjZWQgaW4gVXRhaCB0b2RheSBpcyBhIGJ5cHJvZHVjdCBvZiB0aGUgaHVnZSBCaW5naGFtIENhbnlvbiBjb3BwZXIgbWluZSwgc291dGh3ZXN0IG9mIFNhbHQgTGFrZSBDaXR5LiBJbiAyMDEzLCB0aGUgQmluZ2hhbSBDYW55b24gbWluZSBwcm9kdWNlZCAxOTIsMzAwIHRyb3kgb3VuY2VzICg1LDk4MCBrZykgb2YgZ29sZC4gT3ZlciBpdHMgbGlmZSwgQmluZ2hhbSBDYW55b24gaGFzIHByb2R1Y2VkIG1vcmUgdGhhbiAyMyBtaWxsaW9uIG91bmNlcyAoNzE1IHRvbm5lcykgb2YgZ29sZCwgbWFraW5nIGl0IG9uZSBvZiB0aGUgbGFyZ2VzdCBnb2xkIHByb2R1Y2VycyBpbiB0aGUgVVMuICBUaGUgQmFybmV5cyBDYW55b24gbWluZSBpbiBTYWx0IExha2UgQ291bnR5LCB0aGUgbGFzdCBwcmltYXJ5IGdvbGQgbWluZSB0byBvcGVyYXRlIGluIFV0YWgsIHN0b3BwZWQgbWluaW5nIGluIDIwMDEsIGJ1dCBpcyBzdGlsbCByZWNvdmVyaW5nIGdvbGQgZnJvbSBpdHMgaGVhcCBsZWFjaGluZyBwYWRzLiBVdGFoIGdvbGQgcHJvZHVjdGlvbiB3YXMgNDYwLDAwMCB0cm95IG91bmNlcyAoMTQsMDAwIGtnKSBpbiAyMDA2LiAgTW9zdCBnb2xkIG1pbmluZyBpbiBWaXJnaW5pYSB3YXMgY29uY2VudHJhdGVkIGluIHRoZSBWaXJnaW5pYSBHb2xkLVB5cml0ZSBiZWx0IGluIGEgbGluZSB0aGF0IHJ1bnMgbm9ydGhlYXN0IHRvIHNvdXRod2VzdCB0aHJvdWdoIHRoZSBjb3VudGllcyBvZiBGYWlyZmF4LCBQcmluY2UgV2lsbGlhbSwgU3RhZmZvcmQsIEZhdXF1aWVyLCBDdWxwZXBlciwgU3BvdHN5bHZhbmlhLCBPcmFuZ2UsIExvdWlzYSwgRmx1dmFubmEsIEdvb2NobGFuZCwgQ3VtYmVybGFuZCwgYW5kIEJ1Y2tpbmdoYW0uIFNvbWUgZ29sZCB3YXMgYWxzbyBtaW5lZCBpbiBIYWxpZmF4LCBGbG95ZCwgYW5kIFBhdHJpY2sgY291bnRpZXMuICBHb2xkIHdhcyBmaXJzdCBkaXNjb3ZlcmVkIGluIFdhc2hpbmd0b24gaW4gMTg1MywgYXMgcGxhY2VyIGRlcG9zaXRzIGluIHRoZSBZYWtpbWEgVmFsbGV5LiBQcm9kdWN0aW9uIGZyb20gdGhlIHN0YXRlIG5ldmVyIGV4Y2VlZGVkIDUwLDAwMCB0cm95IG91bmNlcyBwZXIgeWVhciB1bnRpbCB0aGUgbWlkLTE5MzBzLCB3aGVuIGxhcmdlIGhhcmQgcm9jayBkZXBvc2l0cyB3ZXJlIGRldmVsb3BlZCBuZWFyIHRoZSBDaGVsYW4gTGFrZSBhbmQgV2VuYXRjaGVlIGRlcG9zaXRzIGluIENoZWxhbiBDb3VudHksIGFuZCB0aGUgUmVwdWJsaWMgZGVwb3NpdCBpbiBGZXJyeSBDb3VudHkuIFByb2R1Y3Rpb24gdGhyb3VnaCAxOTY1IGlzIGVzdGltYXRlZCB0byBiZSAyLjMgbWlsbGlvbiBvdW5jZXMuICBHb2xkIHdhcyBkaXNjb3ZlcmVkIGF0IHRoZSBTb3V0aCBQYXNzLUF0bGFudGljIENpdHktU3dlZXR3YXRlciBkaXN0cmljdCBpbiBwcmVzZW50IEZyZW1vbnQgQ291bnR5IGluIDE4NDIuIFRoZSBwbGFjZXJzIHdlcmUgd29ya2VkIGludGVybWl0dGVudGx5IHVudGlsIDE4NjcsIHdoZW4gdGhlIGZpcnN0IGltcG9ydGFudCBnb2xkIHZlaW4gd2FzIGRpc2NvdmVyZWQsIGFuZCBwcm9zcGVjdG9ycyBhbmQgbWluZXJzIHJ1c2hlZCB0byB0aGUgYXJlYS4uIFRoZSB0b3ducyBvZiBTb3V0aCBQYXNzIENpdHksIEF0bGFudGljIENpdHksIGFuZCBNaW5lclx1MjAxOXMgRGVsaWdodCBjYXRlcmVkIHRvIHRoZSBtaW5lcnMuIFRoZSBkaXN0cmljdCB3YXMgbmVhcmx5IGRlc2VydGVkIGJ5IDE4NzUsIGFuZCB3YXMgd29ya2VkIG9ubHkgaW50ZXJtaXR0ZW50bHkgYWZ0ZXJ3YXJkLiBUb3RhbCBnb2xkIHByb2R1Y3Rpb24gd2FzIGFib3V0IDMwMCwwMDAgdHJveSBvdW5jZXMgKDksMzAwIGtnKS4gSW4gMTk2MiwgdGhlIGRpc3RyaWN0IGJlY2FtZSB0aGUgc2l0ZSBvZiBhIG1ham9yIGlyb24gbWluZS4gIFRoZSBmaXJzdCBzaWduaWZpY2FudCBnb2xkIHJ1c2ggaW4gdGhlIFVuaXRlZCBTdGF0ZXMgd2FzIGluIENhYmFycnVzIENvdW50eSwgTm9ydGggQ2Fyb2xpbmEgKGVhc3Qgb2YgQ2hhcmxvdHRlKSwgaW4gMTc5OSBhdCB0b2RheVx1MjAxOXMgUmVlZFx1MjAxOXMgR29sZCBNaW5lLiBUaGlydHkgeWVhcnMgbGF0ZXIsIGluIDE4MjksIHRoZSBHZW9yZ2lhIEdvbGQgUnVzaCBpbiB0aGUgc291dGhlcm4gQXBwYWxhY2hpYW5zIG9jY3VycmVkLiBJdCB3YXMgZm9sbG93ZWQgYnkgdGhlIENhbGlmb3JuaWEgR29sZCBSdXNoIG9mIDE4NDhcdTIwMTM1NSBpbiB0aGUgU2llcnJhIE5ldmFkYSwgd2hpY2ggY2FwdHVyZWQgdGhlIHBvcHVsYXIgaW1hZ2luYXRpb24uICBUaGUgQ2FsaWZvcm5pYSBnb2xkIHJ1c2ggbGVkIGRpcmVjdGx5IHRvIHRoZSBzZXR0bGVtZW50IG9mIENhbGlmb3JuaWEgYnkgQW1lcmljYW5zIGFuZCB0aGUgcmFwaWQgZW50cnkgb2YgdGhhdCBzdGF0ZSBpbnRvIHRoZSB1bmlvbiBpbiAxODUwLiBUaGUgZ29sZCBydXNoIGluIDE4NDkgc3RpbXVsYXRlZCB3b3JsZHdpZGUgaW50ZXJlc3QgaW4gcHJvc3BlY3RpbmcgZm9yIGdvbGQsIGFuZCBsZWQgdG8gbmV3IHJ1c2hlcyBpbiBBdXN0cmFsaWEsIFNvdXRoIEFmcmljYSwgV2FsZXMgYW5kIFNjb3RsYW5kLiAgU3VjY2Vzc2l2ZSBnb2xkIHJ1c2hlcyBvY2N1cnJlZCBpbiB3ZXN0ZXJuIE5vcnRoIEFtZXJpY2E6IEZyYXNlciBDYW55b24sIHRoZSBDYXJpYm9vIGRpc3RyaWN0IGFuZCBvdGhlciBwYXJ0cyBvZiBCcml0aXNoIENvbHVtYmlhLCBpbiBOZXZhZGEsIGluIHRoZSBSb2NreSBNb3VudGFpbnMgaW4gQ29sb3JhZG8sIElkYWhvLCBNb250YW5hLCBlYXN0ZXJuIE9yZWdvbiwgYW5kIHdlc3Rlcm4gTmV3IE1leGljbyBUZXJyaXRvcnkgYW5kIGFsb25nIHRoZSBsb3dlciBDb2xvcmFkbyBSaXZlci4gUmVzdXJyZWN0aW9uIENyZWVrLCBuZWFyIEhvcGUsIEFsYXNrYSB3YXMgdGhlIHNpdGUgb2YgQWxhc2thXHUyMDE5cyBmaXJzdCBnb2xkIHJ1c2ggaW4gdGhlIG1pZFx1MjAxMzE4OTBzLiBPdGhlciBub3RhYmxlIEFsYXNrYSBHb2xkIFJ1c2hlcyB3ZXJlIE5vbWUsIEZhaXJiYW5rcywgYW5kIHRoZSBGb3J0eW1pbGUgUml2ZXIuICBPbmUgb2YgdGhlIGxhc3QgXHUyMDFjZ3JlYXQgZ29sZCBydXNoZXNcdTIwMWQgd2FzIHRoZSBLbG9uZGlrZSBHb2xkIFJ1c2ggaW4gQ2FuYWRhXHUyMDE5cyBZdWtvbiBUZXJyaXRvcnkgKDE4OTZcdTIwMTM5OSkuIFRoaXMgZ29sZCBydXNoIGlzIGltbW9ydGFsaXNlZCBpbiB0aGUgbm92ZWxzIG9mIEphY2sgTG9uZG9uLCBhbmQgQ2hhcmxpZSBDaGFwbGluXHUyMDE5cyBmaWxtIFRoZSBHb2xkIFJ1c2guIFJvYmVydCBXaWxsaWFtIFNlcnZpY2UgZGVwaWN0ZWQgd2l0aCB0YWxlbnQgaW4gaGlzIHBvZXRyaWVzIHRoZSBkcmFtYXRpYyBldmVudCBvZiB0aGUgR29sZCBSdXNoLCBlc3BlY2lhbGx5IGluIHRoZSBib29rIFRoZSBUcmFpbCBvZiBcdTIwMTk5OC4gVGhlIG1haW4gZ29sZGZpZWxkIHdhcyBhbG9uZyB0aGUgc291dGggZmxhbmsgb2YgdGhlIEtsb25kaWtlIFJpdmVyIG5lYXIgaXRzIGNvbmZsdWVuY2Ugd2l0aCB0aGUgWXVrb24gUml2ZXIgbmVhciB3aGF0IHdhcyB0byBiZWNvbWUgRGF3c29uIENpdHkgaW4gQ2FuYWRhXHUyMDE5cyBZdWtvbiBUZXJyaXRvcnksIGJ1dCBpdCBhbHNvIGhlbHBlZCBvcGVuIHVwIHRoZSByZWxhdGl2ZWx5IG5ldyBVUyBwb3NzZXNzaW9uIG9mIEFsYXNrYSB0byBleHBsb3JhdGlvbiBhbmQgc2V0dGxlbWVudCwgYW5kIHByb21vdGVkIHRoZSBkaXNjb3Zlcnkgb2Ygb3RoZXIgZ29sZCBmaW5kcy4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToyMyIsICJ0aXRsZSI6ICJXaGVyZSBXYXMgVGhlIE1vc3QgR29sZCBGb3VuZCBJbiBUaGUgVW5pdGVkIFN0YXRlcz8gfCBHZW9sb2d5IFBhZ2UifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJZaWVsZCwgbm90IHNwZWNpZmllZCBiZWxvdyIsICIgYXR0YWNrICIsICJhcnJlc3QiLCAiZGV0YWluIl0sICJjb3VudHJpZXMiOiBbIlVOSVRFRCBBUkFCIEVNSVJBVEVTIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIyNS4yNTIyIiwgIjU1LjI4Il1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmV4cHJlc3MuY28udWsvbmV3cy91ay8xMTE0MTMyL21vdGhlci1kdWJhaS1wcmlzb24taG9yc2UtZmFjZWJvb2stTGFsZWgtU2hhaHJhdmVzaCIsICJjb250ZW50IjogIkxhbGVoIFNoYWhyYXZlc2ggc3BlbnQgMzMgZGF5cyBkZXRhaW5lZCBpbiB0aGUgZW1pcmF0ZSBiZWZvcmUgYmVjb21pbmcgdGhlIGZpcnN0IEJyaXRpc2ggY2l0aXplbiB0byBiZSBjb252aWN0ZWQgdW5kZXIgdGhlIFVBRSdzIHN0cmljdCBjeWJlciBjcmltZSBsYXdzLiBUaGUgd2lmZSBoYWQgcmVwb3J0ZWQgaGVyIHRvIHBvbGljZSBmb3IgdHdvIHNvY2lhbCBtZWRpYSBtZXNzYWdlcyBwb3N0ZWQgb24gRmFjZWJvb2sgaW4gMjAxNi4gU2hlIHdhcyBmaW5hbGx5IHJldW5pdGVkIHdpdGggaGVyIDE0LXllYXItb2xkIGRhdWdodGVyIFBhcmlzIGluIHRoZSBhcnJpdmFscyBoYWxsIGF0IEhlYXRocm93IG9uIEZyaWRheSwgZm9sbG93aW5nIGFuIGludGVybmF0aW9uYWwgb3V0Y3J5IG92ZXIgaGVyIHRyZWF0bWVudC4gTGFsZWgsIDU1LCBmcm9tIFJpY2htb25kLCBTdXJyZXksIHdlcHQgYXMgc2hlIGFkbWl0dGVkOiBcIlRoZSBkYXkgYmVmb3JlIEkgd2FzIHRvbGQgSSB3YXMgZnJlZSB0byBnbyBJJ2QgZ2l2ZW4gdXAgaG9wZSBhbmQgd2FzIHN1aWNpZGFsLiBcIkkgZmVsdCBsaWtlIEkgd2FzIG5ldmVyIGdvaW5nIHRvIHNlZSBteSBkYXVnaHRlciBhZ2FpbiBhbmQgc2VudCBhIG1lc3NhZ2UgdG8gbXkgc2lzdGVyIHNheWluZyAnSSBjYW4ndCBkbyB0aGlzIGFueW1vcmUnLiBJIHRvbGQgaGVyICdJdCdzIGtpbGxpbmcgbWUsIGV2ZXJ5IGRheSBpcyBraWxsaW5nIG1lLiBJIGZlbHQgc28gbXVjaCBwYWluIGFuZCB0aGVuIEkgdHVybmVkIG9mZiBteSBwaG9uZS4gSSBjb3VsZCBzZWUgbXkgd2hvbGUgbGlmZSBmbGFzaGluZyBiZWZvcmUgbXkgZXllcyBhbmQgSSBqdXN0IHdhbnRlZCB0byBkaWUuIEl0IHdhcyB0b3J0dXJlIHRvIG1lLlwiICBMYWxlaCwgYSBwcml2YXRlbHkgZWR1Y2F0ZWQgZG9jdG9yJ3MgZGF1Z2h0ZXIsIHdhcyBhcnJlc3RlZCBhdCBEdWJhaSBJbnRlcm5hdGlvbmFsIEFpcnBvcnQgb24gTWFyY2ggMTAgYWZ0ZXIgc2hlIGFuZCBQYXJpcyB0cmF2ZWxsZWQgdG8gdGhlIGVtaXJhdGUgc28gdGhleSBjb3VsZCBncmlldmUgYXQgdGhlIGdyYXZlc2lkZSBvZiBMYWxlaCdzIGV4LWh1c2JhbmQgUGVkcm8gQ29ycmVpYSBEb3MgU2FudG9zIGFmdGVyIGhlIGRpZWQgb2YgYSBoZWFydCBhdHRhY2sgYWdlZCA1MSwgc2V2ZW4gZGF5cyBlYXJsaWVyLiBBdCBwYXNzcG9ydCBjb250cm9sIExhbGVoIHdhcyBoYXVsZWQgYXdheSBieSBwb2xpY2UsIHdobyB0b2xkIGhlciB0aGF0IGhlciBleCdzIG5ldyB3aWZlIGhhZCBtYWRlIGEgbGVnYWwgY29tcGxhaW50IGFib3V0IHR3byBGYWNlYm9vayBwb3N0cywgaW5jbHVkaW5nIG9uZSB3aGVyZSBzaGUgaGFkIGJlZW4gZGVzY3JpYmVkIGFzIFwiYSBob3JzZVwiLiBMYWxlaCBzYWlkOiBcIkkgY291bGRuJ3QgdW5kZXJzdGFuZCB3aGF0IHdhcyBoYXBwZW5pbmcgYW5kIHRoZW4gYSBwb2xpY2Ugb2ZmaWNlciBjYW1lIGluIGFuZCBzYWlkICdUaGVyZSdzIGEgY29tcGxhaW50IGFnYWluc3QgeW91IC0gZG8geW91IGtub3cgU2FtYWggYWwgSGFtbWFkaT8nIFwiSSBqdXN0IGJ1cnN0IGludG8gdGVhcnMuIEkgaGFkIGJlZW4gYXJyZXN0ZWQgZm9yIHR3byBGYWNlYm9vayBwb3N0cyBtYWRlIGluIHRoZSBVSyB0aHJlZSB5ZWFycyBhZ28uIFwiSSBzdGlsbCBoYWQgbm8gaWRlYSBhYm91dCB3aGF0IHdhcyBnb2luZyB0byB1bmZvbGQgYW5kIHRoZSBmdWxsIGV4dGVudCBvZiB0aGUgdHJvdWJsZSBJIHdhcyBpbi4gSSBqdXN0IHRob3VnaHQgJ1RoaXMgd2lsbCBhbGwgYmUgZmluZSBhbmQgb3ZlciBieSB0b21vcnJvdycuXCIgIExhbGVoIHNwZW50IDEyIGhvdXJzIGF0IGEgcG9saWNlIHN0YXRpb24gd2hlcmUgc2hlIHdhcyBvcmRlcmVkIHRvIHNpZ24gYSBzdGF0ZW1lbnQsIGRlc3BpdGUgaXQgYmVpbmcgaW4gQXJhYmljIGFuZCBoZXIgaGF2aW5nIG5vIHVuZGVyc3RhbmRpbmcgb2Ygd2hhdCBpdCBzYWlkLiBTaGUgbGF0ZXIgZGlzY292ZXJlZCB0aGUgdHJhbnNsYXRpb24gb2YgdGhlIEZhY2Vib29rIHBvc3QgYm9yZSBubyByZWxhdGlvbiB0byB3aGF0IHNoZSBoYWQgd3JpdHRlbiwgd2l0aCBhIHN3ZWFyIHdvcmQgc3Vic3RpdHV0ZWQgZm9yIHRoZSB3b3JkIFwiaG9yc2VcIi4gVGhlIHBvc3RzLCB3aGljaCBMYWxlaCB3cm90ZSBhZnRlciBzZWVpbmcgYSBwaG90byBvZiBoZXIgZXgtaHVzYmFuZCBnZXR0aW5nIG1hcnJpZWQgdG8gaGlzIG5ldyBUdW5pc2lhbiBsb3ZlciBTYW1haCBhbCBIYW1tYWRpLCA0Miwgc2FpZDogXCJJIGhvcGUgeW91IGdvIHVuZGVyIHRoZSBncm91bmQgeW91IGlkaW90LiBEYW1uIHlvdS4gWW91IGxlZnQgbWUgZm9yIHRoaXMgaG9yc2VcIiBhbmQgXCJZb3UgbWFycmllZCBhIGhvcnNlIHlvdSBpZGlvdFwiLiBTaGUgc2FpZDogXCJJIGtub3cgSSBzaG91bGRuJ3QgaGF2ZSBwb3N0ZWQgdGhlIG1lc3NhZ2VzLCBidXQgYXQgdGhlIHRpbWUgSSB3YXMgZGlzdHJhdWdodC4gXCJJdCBoYWQgbmV2ZXIgb2NjdXJyZWQgdG8gbWUgYW5kIHRvb2sgbWUgY29tcGxldGVseSBieSBzdXJwcmlzZS4gSSB3YXMgYmVpbmcgYXJyZXN0ZWQgZm9yIGNhbGxpbmcgaGVyIGEgaG9yc2UsIEkgdGhvdWdodCAndGhpcyBpcyBub25zZW5zZScuXCIgIExhbGVoLCB3aG8gd2FzIGVkdWNhdGVkIGF0IFRvcm1lYWQgU2Nob29sIGluIEd1aWxkZm9yZCwgU3VycmV5LCBhbmQgdXNlZCB0byB3b3JrIGZvciBMb25kb24gYXVjdGlvbmVlcnMgQm9uaGFtcywgd2FzIHRvbGQgc2hlIHdhcyBiZWluZyBoZWxkIGluIER1YmFpIHdoaWxlIHNoZSBhd2FpdGVkIGEgY291cnQgaGVhcmluZy4gSXQgd2FzIGF0IHRoYXQgcG9pbnQgc2hlIG1hZGUgdGhlIGhlYXJ0YnJlYWtpbmcgZGVjaXNpb24gdG8gc2VuZCBQYXJpcyBob21lIG9uIGhlciBvd24uIExhbGVoIHNhaWQ6IFwiUGFyaXMgd2FzIGFic29sdXRlbHkgdGVycmlmaWVkLiBJIHRob3VnaHQgJ0kgY2FuJ3Qgc3ViamVjdCBoZXIgdG8gb25lIG1vcmUgbWludXRlIG9mIHRoaXMnLiBcIkknbSBzdGlsbCBnZXR0aW5nIHNoYWtlcyBub3cgdGhpbmtpbmcgYWJvdXQgdGhhdCBtb21lbnQgYmVjYXVzZSBJIHRoaW5rIHRoYXQgd2FzIHdoZW4gSSByZWFsaXNlZCBldmVyeXRoaW5nIGhhZCBiZWNvbWUgcmVhbC4gXCJJdCB3YXMgdGhlIHNpbmdsZSBoYXJkZXN0IHRoaW5nIEkndmUgZXZlciBoYWQgdG8gZG8uIFwiSGVyIGZhdGhlciBoYWQgZGllZCBsZXNzIHRoYW4gdHdvIHdlZWtzIGVhcmxpZXIgYW5kIG5vdyBzaGUgd2FzIGxvc2luZyBoZXIgbW90aGVyLiBJIGZlbHQgbGlrZSBJIHdhcyBmYWlsaW5nIGhlciBhcyBhIHBhcmVudCwgYnV0IEkga25ldyBJIGhhZCBubyBwb3dlciBvdmVyIHRoZSBzaXR1YXRpb24uXCIgIE9uIFRodXJzZGF5LCBhZnRlciBQYXJpcyB3cm90ZSBhIHRvdWNoaW5nIGxldHRlciB0byBTaGVpa2ggTW9oYW1tZWQsIHRoZSBydWxlciBvZiBEdWJhaSBhbmQgcHJpbWUgbWluaXN0ZXIgb2YgdGhlIFVBRSwgTGFsZWggZmluYWxseSBhcHBlYXJlZCBiZWZvcmUgdGhlIER1YmFpIENvdXJ0IG9mIE1pc2RlbWVhbm91cnMuIEp1ZGdlIE1vaGFtZWQgTXVzdGFmYSBJYnJhaGltIEtoYWxpbCBzYWlkIHNoZSBjb3VsZCBiZSByZWxlYXNlZCBmcm9tIHRoZSBjb3VudHJ5IGlmIHNoZSBwYWlkIGEgXHUwMGEzNjI0IGZpbmUuIFNoZSBzYWlkOiBcIkl0IGZlbHQgbGlrZSBJIHdhcyBkcmVhbWluZyBhbmQgSSBkaWRuJ3QgYmVsaWV2ZSBpdCB3YXMgcmVhbC4gXCJJIGJ1cnN0IGludG8gdGVhcnMgb2YgaGFwcGluZXNzIGFuZCBkaXNiZWxpZWYgd2hlbiBJIGdvdCBteSBwYXNzcG9ydCwgYnV0IEkgZGlkbid0IGFsbG93IG15c2VsZiB0byBiZWxpZXZlIGl0IHdhcyBhbGwgcmVhbGx5IGFsbCBvdmVyIHVudGlsIEkgZ290IG9uIHRoZSBwbGFuZS4gSSBqdXN0IGZlbHQgbnVtYi5cIiBBZnRlciBiZWluZyBwdXQgb24gYSBmbGlnaHQgZnJvbSBEdWJhaSBpbiB0aGUgZWFybHkgaG91cnMgb2YgRnJpZGF5IG1vcm5pbmcgc2hlIHdhcyBmaW5hbGx5IHJldW5pdGVkIHdpdGggUGFyaXMgYXQgSGVhdGhyb3cuIExhbGVoIHNhaWQ6IFwiVGhlIG1vbWVudCBJIHNhdyBQYXJpcyBhdCB0aGUgYWlycG9ydCB3YXMgc3VjaCBhbiBvdmVyd2hlbG1pbmcgbW9tZW50LiBNeSBoZWFydCB3YXMgYWNoaW5nIGZvciBoZXIgYW5kIGJlaW5nIGFibGUgdG8gaG9sZCBteSBnaXJsIGFnYWluIHdhcyBzbyBlbW90aW9uYWwuICBcIkknbGwgbmV2ZXIgZm9yZ2V0IHRoYXQgbW9tZW50LiBCZWluZyBhcGFydCBmcm9tIGhlciBoYWQgYmVlbiBicnV0YWwuIFwiSSBzdGlsbCBmZWVsIGxpa2UgSSdtIGluIGEgZGF6ZSBhbmQgSSBmZWVsIGxpa2UgYSBmcmFjdGlvbiBvZiB0aGUgcGVyc29uIEkgd2FzIGJlZm9yZS4gXCJUaGlzIGxhc3QgbW9udGggaGFzIGNvbXBsZXRlbHkgYnJva2VuIG1lIHBoeXNpY2FsbHkgYW5kIG1lbnRhbGx5LCBpdCBoYXMgdHJhdW1hdGlzZWQgbWUuIFwiSSBqdXN0IHdhbnQgdG8gZW5qb3kgbGlmZSB3aXRoIFBhcmlzIG5vdyBhbmQgY2hlcmlzaCBldmVyeSBtb21lbnQuXCIiLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMToyNSIsICJ0aXRsZSI6ICJNb3RoZXIgaGVsZCBpbiBEdWJhaSBqYWlsOiAifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJSZXR1cm4sIHJlbGVhc2UgcGVyc29uKHMpIiwgIiBhc3NhdWx0ICJdLCAiY291bnRyaWVzIjogWyJVTklURUQgQVJBQiBFTUlSQVRFUyJdLCAiYXV0aG9ycyI6IFsiT1BFTi1TT1VSQ0UgSU5URVJORVQiXSwgImxvY2F0aW9uIjogW1siMjQiLCAiNTQiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly9mb3JjZWNoYW5nZS5jb20vNTMwNzc5L2ZyZWUtYXdhcmQtd2lubmluZy1odW1hbi1yaWdodHMtZGVmZW5kZXItZHlpbmctb24taHVuZ2VyLXN0cmlrZS8iLCAiY29udGVudCI6ICJHb2FsOiBGcmVlIGh1bWFuIHJpZ2h0cyBhY3RpdmlzdCBiZWZvcmUgaGUgZGllcyBmcm9tIGh1bmdlciBzdHJpa2UuICBBIGh1bWFuIHJpZ2h0cyBhY3RpdmlzdCBzaXRzIGluIHByaXNvbiwgaGlzIGhlYWx0aCBkZXRlcmlvcmF0aW5nIGZyb20gYSBsb25nIGh1bmdlciBzdHJpa2UuIEFobWVkIE1hbnNvb3IgaXMgYW4gYXdhcmQtd2lubmluZyBodW1hbiByaWdodHMgZGVmZW5kZXIgd2hvIGhhcyBzdGFydmVkIGhpbXNlbGYgZm9yIG92ZXIgYSBtb250aCBhcyBoZSBzaXRzIGluIHByaXNvbiBpbiB0aGUgVW5pdGVkIEFyYWIgRW1pcmF0ZXMuIERlbWFuZCBoZSBiZSByZWxlYXNlZC4gIE1hbnNvb3IgZmFjZXMgdXAgdG8gdGVuIHllYXJzIGluIHByaXNvbiBmb3IgY2FsbGluZyBmb3IgcHJvZ3Jlc3NpdmUgZ292ZXJubWVudCByZWZvcm0uIEhlIGhhZCBubyBhY2Nlc3MgdG8gYSBsYXd5ZXIgZHVyaW5nIGhpcyB0cmlhbCBhbmQgYXV0aG9yaXRpZXMgaGF2ZSB5ZXQgdG8gYW5ub3VuY2Ugd2hlcmUgaGUgaXMgYmVpbmcgaGVsZC4gSGUgZmFjZWQgcGh5c2ljYWwgYXNzYXVsdCBhbmQgb3RoZXIgdmlvbGVuY2UgYmVoaW5kIGJhcnMuIFRvIHByb3Rlc3QgaGlzIHRyZWF0bWVudCwgaGUgaGFzIGJlZW4gc3RhcnZpbmcgaGltc2VsZi4gTm93LCByZXBvcnRzIGluZGljYXRlIGhlIG1heSBiZSBvbiB0aGUgYnJpbmsgb2YgZGVhdGguICBEZW1hbmQgdGhhdCB0aGUgZ292ZXJubWVudCBvZiB0aGUgVW5pdGVkIEFyYWIgRW1pcmF0ZXMgcmVsZWFzZSBNYW5zb29yIGZyb20gaGlzIGluaHVtYW5lIGltcHJpc29ubWVudC4gRGVtYW5kIHRoYXQgdGhleSBhbGxvdyBoaW0gdG8gcmV0dXJuIHRvIGhpcyBsb3ZlZCBvbmVzIGFuZCBoaXMgY29tbWVuZGFibGUgZHV0eS4gIEF3YXJkLXdpbm5pbmcgaHVtYW4gcmlnaHRzIGFjdGl2aXN0IEFobWVkIE1hbnNvb3IgcmVtYWlucyBpbiBwcmlzb24sIG9uIHRoZSBicmluayBvZiBkZWF0aCBhZnRlciBhIG1vbnRoLWxvbmcgaHVuZ2VyIHN0cmlrZS4gTWFuc29vciBoYXMgYmVlbiBsYXVkZWQgYXJvdW5kIHRoZSB3b3JsZCBmb3IgaGlzIGFkdm9jYWN5IGZvciBmcmVlZG9tIG9mIHNwZWVjaCBhbmQgZXhwcmVzc2lvbi4gSG93ZXZlciwgeW91ciBnb3Zlcm5tZW50IHNhdyB0aGlzIHBlYWNlZnVsIHByb3Rlc3QgYXMgYSB0aHJlYXQgYW5kIHN1YmplY3RlZCBoaW0gdG8gYW4gdW5mYWlyIHRyaWFsIGFuZCBpbXByaXNvbm1lbnQuICBCZWZvcmUgaGlzIGhlYWx0aCBmYWlscyBldmVuIG1vcmUsIHJlbGVhc2UgTWFuc29vciB0byB0aGUgY2FyZSBvZiBoaXMgZmFtaWx5IGFuZCBsb3ZlZCBvbmVzLiBFbmQgeW91ciBhYnVzZSBvZiBwZWFjZWZ1bCBodW1hbiByaWdodHMgYWR2b2NhdGVzLiAgW1lvdXIgTmFtZSBIZXJlXSIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjI3IiwgInRpdGxlIjogIkZyZWUgQXdhcmQtV2lubmluZyBIdW1hbiBSaWdodHMgRGVmZW5kZXIgRHlpbmcgb24gSHVuZ2VyIFN0cmlrZSJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIkhvc3QgYSB2aXNpdCIsICJvcGVyYXRpb24iXSwgImNvdW50cmllcyI6IFsiVU5JVEVEIEFSQUIgRU1JUkFURVMiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjI1LjI1MjIiLCAiNTUuMjgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cua2hhbGVlanRpbWVzLmNvbS9lbWlyYXRlcy10by1kZXBsb3ktbGF0ZXN0LWJvZWluZy03NzctMzAwZXItdG8tcml5YWRoLWFuZC1rdXdhaXQiLCAiY29udGVudCI6ICJFbWlyYXRlcyBoYXMgYW5ub3VuY2VkIHRoYXQgaXQgd2lsbCBiZSBvcGVyYXRpbmcgaXRzIGxhdGVzdCBCb2VpbmcgNzc3LTMwMEVSIGFpcmNyYWZ0IGZpdHRlZCB3aXRoIHRoZSAnR2FtZSBDaGFuZ2VyJyBGaXJzdCBDbGFzcyBzdWl0ZXMgZnJvbSBEdWJhaSB0byBSaXlhZGggc3RhcnRpbmcgZnJvbSBBcHJpbCAxNiwgMjAxOSBhbmQgS3V3YWl0IHN0YXJ0aW5nIGZyb20gSnVuZSAxLCAyMDE5LiAgQWRpbCBBbCBHaGFpdGgsIHNlbmlvciB2aWNlIHByZXNpZGVudCBvZiBDb21tZXJjaWFsIE9wZXJhdGlvbnMgR3VsZiwgTWlkZGxlIEVhc3QgJiBJcmFuIHNhaWQ6IFwiVGhlIEtpbmdkb20gb2YgU2F1ZGkgQXJhYmlhIGFuZCBLdXdhaXQgd2lsbCBiZSB0aGUgZmlyc3QgY291bnRyaWVzIGluIHRoZSBNaWRkbGUgRWFzdCBhbmQgR0NDIHRvIGJlIHNlcnZlZCBieSB0aGUgbGF0ZXN0IEVtaXJhdGVzIEJvZWluZyA3NzcgYWlyY3JhZnQgZmVhdHVyaW5nIGZ1bGx5LWVuY2xvc2VkIHByaXZhdGUgc3VpdGVzIGluc3BpcmVkIGJ5IGx1eHVyeSBhdXRvbWFrZXIgTWVyY2VkZXMtQmVuei4gRGVwbG95aW5nIHRoZSBuZXdlc3QgQm9laW5nIDc3NyB0byBib3RoIFJpeWFkaCBhbmQgS3V3YWl0IHdpbGwgY2F0ZXIgdG8gdGhlIHNpZ25pZmljYW50IHByZW1pdW0gZGVtYW5kIHdlIHNlZSBvbiB0aGVzZSByb3V0ZXMsIGFuZCBpcyBpbiBsaW5lIHdpdGggb3VyIGNvbW1pdG1lbnQgdG8gcHJvdmlkZSBvdXIgY3VzdG9tZXJzIGFjcm9zcyBhbGwgY2xhc3NlcyB3aXRoIG91dHN0YW5kaW5nIHNlcnZpY2UgYW5kIGluZHVzdHJ5LWxlYWRpbmcgb25ib2FyZCBwcm9kdWN0cyBmb3IgYSBiZXR0ZXIgZmx5aW5nIGV4cGVyaWVuY2UuIFRoZSB1bmlxdWUgRmlyc3QgQ2xhc3Mgc3VpdGVzIG9uYm9hcmQgdGhlIEJvZWluZyA3Nzcgd2lsbCBvZmZlciBvdXIgcHJlbWl1bSBwYXNzZW5nZXJzIHVucGFyYWxsZWxlZCBwcml2YWN5LCBjb21mb3J0IGFuZCBsdXh1cnksIHdpdGggZXhwZXJpZW5jZXMgdGFpbG9yZWQgdG8gdGhlaXIgaW5kaXZpZHVhbCBuZWVkcy5cIiAgVHJhdmVsbGVycyB0by9mcm9tIFNhdWRpIEFyYWJpYSBjYW4gZXhwZXJpZW5jZSB0aGUgbmV3IEJvZWluZyA3NzcgcHJvZHVjdCBvbiBmbGlnaHQgRUsgODE5IGRlcGFydGluZyBEdWJhaSBhdCAwNjU1aHJzLCBhcnJpdmluZyBpbiBSaXlhZGggYXQgMDc1MGhycy4gVGhlIHJldHVybiBmbGlnaHQgRUsgODIwIGxlYXZlcyBSaXlhZGggYXQgMDkzNWhycywgYXJyaXZpbmcgaW4gRHViYWkgYXQgMTIzMGhycy4gVGhlIG5ldyBCb2VpbmcgNzc3IGFpcmNyYWZ0IHdpbGwgYmVnaW4gb3BlcmF0aW5nIHRoZSByb3V0ZSBmaXZlIHRpbWVzIGEgd2VlaywgYW5kIGZyb20gSnVuZSAxLCAyMDE5IHdpbGwgYmVnaW4gZmx5aW5nIG9uIGEgZGFpbHkgYmFzaXMuIEN1c3RvbWVycyBmbHlpbmcgb24gdGhlIGxhdGVzdCBFbWlyYXRlcyBCb2VpbmcgNzc3IGFyZSB0aGVuIGFibGUgdG8gZW5qb3kgc2VhbWxlc3MgY29ubmVjdGlvbnMgdmlhIER1YmFpIHRvIExvbmRvbiBIZWF0aHJvdywgUGFyaXMsIE1hZHJpZCwgTmV3IFlvcmsgSkZLLCBIeWRlcmFiYWQsIEJhcmNlbG9uYSwgTG9zIEFuZ2VsZXMsIEdlbmV2YSBhbmQgQW1zdGVyZGFtLiAgRW1pcmF0ZXMgd2lsbCBiZSBleHBhbmRpbmcgaXRzIHByZW1pdW0gQm9laW5nIDc3NyBleHBlcmllbmNlIHRvL2Zyb20gS3V3YWl0IG9uIEVLIDg1NSwgd2hpY2ggZGVwYXJ0cyBEdWJhaSBhdCAwNzQ1aHJzLCBhcnJpdmluZyBpbiBLdXdhaXQgYXQgMDgyNWhycy4gVGhlIHJldHVybiBmbGlnaHQgRUsgODU2IGxlYXZlcyBLdXdhaXQgYXQgMDk1MGhycywgYXJyaXZpbmcgaW4gRHViYWkgYXQgMTI0MGhycy4gVGhlIHNlcnZpY2Ugd2lsbCBvcGVyYXRlIGRhaWx5IHRvIEt1d2FpdC4gVGhlIER1YmFpLUt1d2FpdCByb3V0ZSB3YXMgcmFua2VkIG9uZSBvZiB0aGUgJ1dvcmxkJ3MgMjAgQnVzaWVzdCBSb3V0ZXMnLCBhY2NvcmRpbmcgdG8gT0FHIEF2aWF0aW9uLCBhbmQgaXMgdGhlIGJ1c2llc3Qgcm91dGUgYWNyb3NzIHRoZSBNaWRkbGUgRWFzdCBhbmQgTm9ydGggQWZyaWNhLiIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjMwIiwgInRpdGxlIjogIkVtaXJhdGVzIHRvIGRlcGxveSBsYXRlc3QgQm9laW5nIDc3Ny0zMDBFUiB0byBSaXlhZGggYW5kIEt1d2FpdCJ9Cgp7ImluZGV4IjogeyJfaW5kZXgiOiAiZXZlbnRzIiwgIl90eXBlIjogImRvYyJ9fQp7ImNhdGVnb3JpZXMiOiBbIlNlaXplIG9yIGRhbWFnZSBwcm9wZXJ0eSwgbm90IHNwZWNpZmllZCBiZWxvdyIsICIga25pZmUgIiwgImludmVzdGlnYXQiXSwgImNvdW50cmllcyI6IFsiQVVTVFJBTElBIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyItMzcuNzMzMyIsICIxNDUuMTE3Il1dLCAic291cmNlIjogImh0dHBzOi8vd3d3LmRhaWx5bWFpbC5jby51ay9uZXdzL2FydGljbGUtNjkyMDcwNS9TZXJpYWwtcHJlZGF0b3ItTXItQ3J1ZWwtYXR0YWNrZWQteW91bmctTWVsYm91cm5lLXNjaG9vbC1naXJscy1hbGl2ZS5odG1sIiwgImNvbnRlbnQiOiAiT25lIG9mIEF1c3RyYWxpYSdzIG1vc3Qgbm90b3Jpb3VzIHNlcmlhbCByYXBpc3RzIGtub3duIGFzICdNciBDcnVlbCcgY291bGQgdmVyeSB3ZWxsIHN0aWxsIGJlIGFsaXZlIDI4IHllYXJzIGFmdGVyIHRlcnJvcmlzaW5nIE1lbGJvdXJuZSwgaW52ZXN0aWdhdG9ycyBoYXZlIHJldmVhbGVkLiAgVGhlIHNlcmlhbCBwcmVkYXRvciBhbmQgc3VzcGVjdGVkIGtpbGxlciBpcyBiZWxpZXZlZCB0byBiZSByZXNwb25zaWJsZSBmb3IgcmFwaW5nIGFuZCBraWRuYXBwaW5nIGF0IGxlYXN0IGEgZG96ZW4geW91bmcgZ2lybHMgYWNyb3NzIHRoZSBjaXR5IGluIHRoZSBsYXRlIDE5ODBzIGFuZCBlYXJseSA5MHMgLSBhbmQgdG8gdGhpcyBkYXkgaGFzIG5ldmVyIGJlZW4gY2F1Z2h0IG9yIGlkZW50aWZpZWQuICBUd28gZ2lybHMga2lkbmFwcGVkIGJ5IE1yIENydWVsIC0gU2hhcm9uIFdpbGxzLCB0ZW4sIGFuZCBOaWNvbGEgTHluYXMsIDEzIC0gd2VyZSBldmVudHVhbGx5IHJlbGVhc2VkLCBidXQgMTMteWVhci1vbGQgS2FybWVpbiBDaGFuJ3MgcmVtYWlucyB3ZXJlIGZvdW5kIGEgeWVhciBhZnRlciBoZXIgYWJkdWN0aW9uLiBTaGUgaGFkIGJlZW4gc2hvdCB0aHJlZSB0aW1lcyBpbiB0aGUgaGVhZC4gIEF1c3RyYWxpYW4gQ3JpbWUgU3RvcmllcyByZXZpc2l0ZWQgdGhlIE1lbGJvdXJuZSBzY2hvb2xnaXJsJ3MgY2FzZSBvbiB0aGUgMjh0aCBhbm5pdmVyc2FyeSBvZiBoZXIgYWJkdWN0aW9uIGFuZCBtdXJkZXIgb24gU3VuZGF5IG5pZ2h0LiAgS2FybWVpbidzIGNhc2Ugc3Rvb2Qgb3V0IGZyb20gYWxsIHRoZSBvdGhlcnMgYmVjYXVzZSBzaGUgd2FzIHRoZSBvbmx5IHZpY3RpbSB0byBiZSBraWxsZWQgYnkgdGhlIHJhcGlzdCBhZnRlciBzaGUgd2FzIHRha2VuLiAgS2FybWVpbidzIGNhc2Ugc3Rvb2Qgb3V0IGZyb20gYWxsIHRoZSBvdGhlcnMgYmVjYXVzZSBzaGUgd2FzIHRoZSBvbmx5IHZpY3RpbSB0byBiZSBraWxsZWQgYnkgdGhlIHJhcGlzdCBhZnRlciBzaGUgd2FzIHRha2VuLiBIZXIgbXVyZGVyIGFsc28gbWFya2VkIHRoZSBlbmQgb2YgTXIgQ3J1ZWwncyB0aHJlZS15ZWFyIHJlaWduIG9mIHRlcnJvciBpbiAxOTkxIC0gd2hlbiBoZSBmZWxsIG9mZiB0aGUgcmFkYXIgYW5kIG5ldmVyIHN0cnVjayBhZ2FpbiAgSGVyIG11cmRlciBhbHNvIG1hcmtlZCB0aGUgZW5kIG9mIE1yIENydWVsJ3MgdGhyZWUteWVhciByZWlnbiBvZiB0ZXJyb3IgaW4gMTk5MSAtIHdoZW4gaGUgZmVsbCBvZmYgdGhlIHJhZGFyIGFuZCBuZXZlciBzdHJ1Y2sgYWdhaW4uICBNciBDcnVlbCBhdHRhY2tlZCBnaXJscyBhcyB5b3VuZyBhcyAxMSBpbiBcdTAwYWRNZWxib3VybmUgaW4gdGhlIDE5ODBzIGFuZCAxOTkwcy4gVGhlIHBhZWRvcGhpbGUgaGFzIG5ldmVyIGJlZW4gaWRlbnRpZmllZC4gQXVndXN0IDIyLCAxOTg3LCBMb3dlciBQbGVudHk6IEhlIGJyb2tlIGludG8gaG91c2UgaW4gdGhlIG5pZ2h0LCBsb2NrZWQgdGhlIHBhcmVudHMgaW4gYSB3YXJkcm9iZSBhbmQgYXR0YWNrZWQgdGhlaXIgMTEteWVhci1vbGQgZGF1Z2h0ZXIgRGVjZW1iZXIgMjcsIDE5ODgsIFJpbmd3b29kOiBIZSBicm9rZSBpbnRvIGEgaG91c2UsIHRpZWQgdXAgdGhlIHBhcmVudHMgYW5kIGFiZHVjdGVkIHRoZWlyIDEwLXllYXItb2xkIGRhdWdodGVyLCByZWxlYXNpbmcgaGVyIGF0IGEgc2Nob29sIDE4IGhvdXJzIGxhdGVyIEp1bHkgMywgMTk5MCwgQ2FudGVyYnVyeTogSGUgYnJva2UgaW50byBob3VzZSBhbmQgYWJkdWN0ZWQgYSAxMy15ZWFyLW9sZC4gSGUgZHJvdmUgaGVyIHRvIGFub3RoZXIgaG91c2Ugd2hlcmUgaGUga2VwdCBoZXIgZm9yIDUwIGhvdXJzIGJlZm9yZSByZWxlYXNlLiBBcHJpbCAxMywgMTk5MSBUZW1wbGVzdG93ZTogSGUgYnJva2UgaW50byBhIGhvdXNlIGFuZCBhYmR1Y3RlZCBLYXJtZWluIENoYW4sIDEzLiBIZXIgYm9keSB3YXMgZm91bmQgYSB5ZWFyIGxhdGVyLiAgJ0l0IGRvZXNuJ3QgbWFrZSBhbnkgc2Vuc2UuIEdvb2QgY3JpbWluYWxzLCBvZmZlbmRlcnMsIHNlcmlhbCBvZmZlbmRlcnMsIHRoZXkgZG9uJ3QgZ2V0IHNjYXJlZCBvZmYuIFRoZXkgYmVsaWV2ZSwgdGhlaXIgZWdvIGJlbGlldmVzIHRoZXkncmUgYmV0dGVyIHRoYW4gdGhlIHN5c3RlbSwgdGhleSdyZSBiZXR0ZXIgdGhhbiBpbnZlc3RpZ2F0b3JzLCcgRHIgU3RlcGhlbiBCYXJyb24sIHBzeWNob2xvZ2lzdCBhbmQgZm9ybWVyIHBvbGljZSBpbnNwZWN0b3Igc2FpZC4gIEFsdGhvdWdoIE1yIENydWVsIGhhZCBiZWVuIHBlcmNlaXZlZCBhcyBhIGRhcmssIG15c3RlcmlvdXMgZmlndXJlIGluIHRoZSBwdWJsaWMgZXllLCBpbnZlc3RpZ2F0b3JzIHN1Z2dlc3RlZCB0aGUgc2VyaWFsIHJhcGlzdCBjb3VsZCBhY3R1YWxseSBqdXN0IGJlICdNciBBdmVyYWdlLicgIEZvbGxvd2luZyBLYXJtZWluJ3MgYWJkdWN0aW9uLCBBdXN0cmFsaWFuIGF1dGhvcml0aWVzIGhhZCBzb3VnaHQgaGVscCBmcm9tIHRoZSBBbWVyaWNhbiBGQkkgLSB3aG8gcmV2ZWFsZWQgdGhlcmUgd2FzIG5vdGhpbmcgcGFydGljdWxhcmx5IHN0cmlraW5nIGFib3V0IE1yIENydWVsJ3MgcHJvZmlsZS4gIEhlIHdhcyBiZWxpZXZlZCB0byBiZSBiZXR3ZWVuIDIwIGFuZCA1MCB5ZWFycyBvbGQsIGJldHdlZW4gMTY1IGFuZCAxODNjbSB0YWxsLCB0aGluIHRvIG1lZGl1bSBidWlsZCB3aXRoIGEgcG90YmVsbHkuICBIZSBhbHNvIGRpZCBub3QgaGF2ZSBhIGRpc3RpbmN0IGFjY2VudCBhbmQgd2FzIGRlc2NyaWJlZCBhcyBxdWlldGx5IHNwb2tlbi4gIE1yIENydWVsJ3Mgd2VhcG9uIG9mIGNob2ljZSB3YXMgYSBrbmlmZSBhbmQgaGUgd2FzIGtub3duIHRvIHdlYXIgYSBiYWxhY2xhdmEgYW5kIGhhZCB0YXBlZCBvdmVyIGhpcyB2aWN0aW1zJyBleWVzIHRvIHNoaWVsZCBoaXMgaWRlbnRpdHkuICBPdGhlciB0aGVvcmllcyBzdWdnZXN0IEthcm1laW4gaGFkIGJlZW4gYm9sZCBlbm91Z2ggdG8gcmlwIG9mZiB0aGUgdGFwZSBmcm9tIGhlciBleWVzIG9yIGhhZCBwdWxsZWQgTXIgQ3J1ZWwncyBtYXNrIG9mZiwgcmV2ZWFsaW5nIGhpcyBpZGVudGl0eSBhbmQgZm9yY2luZyBoaW0gdG8ga2lsbCBoZXIuICBCdXQgc29tZSBpbnZlc3RpZ2F0b3JzIHNheSBpdCBpcyB1bmxpa2VseSBhIHNlcmlhbCBvZmZlbmRlciB3b3VsZCBiZSAnc2NhcmVkIG9mZicgYW5kIGJlbGlldmUgaXQgaXMgcG9zc2libGUgTXIgQ3J1ZWwgd2VudCBxdWlldCBiZWNhdXNlIGhlIGxlZnQgdG93biB0byBjb250aW51ZSBoaXMgYXR0YWNrcyBvdmVyc2VhcyBvciBlbHNld2hlcmUuICAnTXkgc3VzcGljaW9uIGlzIHRoYXQgaGUgcHJvYmFibHkganVzdCBsZWZ0IHRvd24gb3IgaGUgd2VudCB0byBqYWlsIGFuZCBkaWVkLCcgQ3JpbWluYWwgcHN5Y2hvbG9naXN0IFRpbSBXYXRzb24gTXVucm8gc2FpZC4gICdUaGVyZSB3ZXJlIHRoZSBIaWxsc2lkZSBTdHJhbmdsZXJzIGluIExvcyBBbmdlbGVzLiBBIGd1eSBhbmQgaGlzIGNvdXNpbiB3ZXJlIGFiZHVjdGluZywgcmFwaW5nIGFuZCBtdXJkZXJpbmcgd29tZW4gaW4gdGhlIEhpbGxzIGRpc3RyaWN0IG9mIExBLCBkdW1waW5nIHRoZSBjYWRhdmVycyBvbiB0aGUgZnJvbnQgbGF3bnMgb2YgcGxhY2VzIGFzIGFsbCBwYXJ0IG9mIHRoZSBob3Jyb3Igc2hvdywgYW5kIGl0IHN0b3BwZWQgYXMgYWJydXB0bHkgYXMgaXQgc3RhcnRlZC4gICdIZSB3YXMgZXZlbnR1YWxseSBkaXNjb3ZlcmVkIGluIE9yZWdvbiwgc28sIGhlJ2QgcmVsb2NhdGVkLCBoZSdkIGdvbmUgZnVydGhlciBub3J0aCwgaW50byBhIGRpZmZlcmVudCBzdGF0ZS4gSXQgc3RhcnRlZCBhZ2Fpbi4nICBBbHRob3VnaCBuZWFybHkgdGhyZWUgZGVjYWRlcyBoYXZlIHBhc3NlZCBzaW5jZSBNciBDcnVlbCdzIGxhc3QgYXR0YWNrLCByZXRpcmVkIERldGVjdGl2ZSBDaHJpcyBPJ0Nvbm5vciBzYWlkIHRoZSBpbnZlc3RpZ2F0aW9uIHJlbWFpbnMgYWN0aXZlLiIsICJjcmVhdGVkX2RhdGVfdGltZSI6ICIyMDE5LTA0LTE1IDAwOjExOjM2IiwgInRpdGxlIjogIkF1c3RyYWxpYSdzIHNlcmlhbCByYXBpc3QgTXIgQ3J1ZWwnIGNvdWxkIHN0aWxsIGJlIGFsaXZlIn0KCnsiaW5kZXgiOiB7Il9pbmRleCI6ICJldmVudHMiLCAiX3R5cGUiOiAiZG9jIn19CnsiY2F0ZWdvcmllcyI6IFsiRW5nYWdlIGluIG5lZ290aWF0aW9uIiwgIiBlc3Bpb25hZ2UgIiwgInNlY3VyaXR5IiwgImludmVzdGlnYXQiLCAib3BlcmF0aW9uIl0sICJjb3VudHJpZXMiOiBbIkNISU5BIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIzNSIsICIxMDUiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cuYW1lcmljYW50aGlua2VyLmNvbS9ibG9nLzIwMTkvMDQvdXNfYnVzaW5lc3NfaXRzX293bl93b3JzdF9lbmVteV9pbl9maWdodGluZ19jaGluYV9oYWNraW5nLmh0bWwiLCAiY29udGVudCI6ICJBbiBpbnZlc3RpZ2F0aW9uIGJ5IE5hdGlvbmFsIFB1YmxpYyBSYWRpbyBhbmQgUEJTIGZvdW5kIHRoYXQgZmVhciBvZiBsb3NpbmcgcHJvZml0cyBoYXMgZHJpdmVuIHRoZSBzaWxlbmNlIGZyb20gVVMgY29tcGFuaWVzIHdobyBzZWUgcm9ja2luZyB0aGUgYm9hdCBhcyBtb3JlIG9mIGEgdGhyZWF0IHRvIHRoZWlyIGxpdmVsaWhvb2QgdGhhbiB0YWtpbmcgc3Ryb25nIGFjdGlvbi4gIFRoZSBwcm9ibGVtIG9mIENoaW5hIGhhY2tpbmcgVVMgYnVzaW5lc3NlcyBhbmQgc3RlYWxpbmcgaW50ZWxsZWN0dWFsIHByb3BlcnR5IGhhcyBiZWVuIGdvaW5nIG9uIGZvciBkZWNhZGVzLiBCdXQgd2hlbiBpdCBjb21lcyB0byBmaWdodGluZyB0aGUgY3JpbWUgd2F2ZSBmcm9tIENoaW5hLCB0aGUgVVMgZ292ZXJubWVudCBoYXMgYmVlbiBoYW1wZXJlZCBieSBhIGxhY2sgb2YgY29vcGVyYXRpb24gZnJvbSB0aGUgdmljdGltcy4gIEluIGRvemVucyBvZiBpbnRlcnZpZXdzIHdpdGggVS5TLiBnb3Zlcm5tZW50IGFuZCBidXNpbmVzcyByZXByZXNlbnRhdGl2ZXMsIG9mZmljaWFscyBpbnZvbHZlZCBpbiBjb21tZXJjZSB3aXRoIENoaW5hIHNhaWQgaGFja2luZyBhbmQgdGhlZnQgd2VyZSBhbiBvcGVuIHNlY3JldCBmb3IgYWxtb3N0IHR3byBkZWNhZGVzLCBhbGxvd2VkIHRvIHF1aWV0bHkgY29udGludWUgYmVjYXVzZSBVLlMuIGNvbXBhbmllcyBoYWQgdG9vIG11Y2ggbW9uZXkgYXQgc3Rha2UgdG8gbWFrZSB3YXZlcy4gV2VuZHkgQ3V0bGVyLCB3aG8gd2FzIGEgdmV0ZXJhbiBuZWdvdGlhdG9yIGF0IHRoZSBPZmZpY2Ugb2YgdGhlIFUuUy4gVHJhZGUgUmVwcmVzZW50YXRpdmUsIHNheXMgaXQgd2Fzbid0IGp1c3QgdGhhdCBVLlMuIGJ1c2luZXNzZXMgd2VyZSBoZXNpdGFudCB0byBjb21lIGZvcndhcmQgaW4gc3BlY2lmaWMgY2FzZXMuIFNoZSBzYXlzIGJ1c2luZXNzZXMgZGlkbid0IHdhbnQgdGhlIHRyYWRlIG9mZmljZSB0byB0YWtlIFwiYW55IHN0cm9uZyBhY3Rpb24uXCIgXCJXZSBhcmUgbm90IGFzIGVmZmVjdGl2ZSBpZiB3ZSBkb24ndCBoYXZlIHRoZSBVLlMuIGJ1c2luZXNzIGNvbW11bml0eSBzdXBwb3J0aW5nIHVzLFwiIHNoZSBzYXlzLiBcIkxvb2tpbmcgYmFjayBvbiBpdCwgaW4gcmV0cm9zcGVjdCwgSSB0aGluayB3ZSBwcm9iYWJseSBzaG91bGQgaGF2ZSBiZWVuIG1vcmUgYWN0aXZlIGFuZCBtb3JlIHJlc3BvbnNpdmUuIFdlIGtpbmQgb2YgbG9zdCB0aGUgYmlnIHBpY3R1cmUgb2Ygd2hhdCB3YXMgcmVhbGx5IGhhcHBlbmluZy5cIiBOb25lIG9mIHRoZSBkb3plbnMgb2YgY29tcGFuaWVzIG9yIG9yZ2FuaXphdGlvbnMgdGhhdCBOUFIgcmVhY2hlZCBvdXQgdG8gdGhhdCBoYXZlIGJlZW4gdmljdGltcyBvZiB0aGVmdCBvciBjb3Jwb3JhdGUgZXNwaW9uYWdlIG9yaWdpbmF0aW5nIGZyb20gQ2hpbmEgd291bGQgZ28gb24gdGhlIHJlY29yZC4gQW5kIGZvciBpdHMgcGFydCwgdGhlIENoaW5lc2UgZ292ZXJubWVudCBvZmZpY2lhbGx5IGRlbmllZCB0byBOUFIgYW5kIEZyb250bGluZSB0aGF0IGl0IGhhcyBiZWVuIGludm9sdmVkIGluIHN1Y2ggcHJhY3RpY2VzLiAgSXQncyBlc3RpbWF0ZWQgdGhhdCBDaGluZXNlIHVuZmFpciBidXNpbmVzcyBwcmFjdGljZXMgYXJlIGNvc3RpbmcgQW1lcmljYW4gY29tcGFuaWVzICQ1NyBiaWxsaW9uIGEgeWVhci4gQnV0IHRoZSBleHBvc3VyZSBvZiBjb21wYW55IHNlY3JldHMgY2FuIG1lYW4gYW4gaW5jYWxjdWFibGUgbG9zcy4gIEJ1dCBub3cgdGhlIGltcGFjdCBvZiB0aGF0IHNlY3JlY3kgaXMgY29taW5nIHRvIGxpZ2h0LCB0aGV5IHNheS4gQ29tcGFuaWVzIGFyZSBmYWNpbmcgaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiBmdXR1cmUgbG9zc2VzIGZyb20gdGhlIHRoZWZ0LCBhbmQgVS5TLiBvZmZpY2lhbHMgc2F5IHRoZXkgYXJlIHllYXJzIGJlaGluZCB0cnlpbmcgdG8gdGFja2xlIHRoZSBwcm9ibGVtLiBNaWNoYWVsIFdlc3NlbCwgY29tbWlzc2lvbmVyIG9uIHRoZSBVLlMuIGdvdmVybm1lbnQncyBVLlMuLUNoaW5hIEVjb25vbWljIGFuZCBTZWN1cml0eSBSZXZpZXcgQ29tbWlzc2lvbiwgc2F5cyBpdCB3YXNuJ3Qgc3VwcG9zZWQgdG8gYmUgdGhpcyB3YXkuIFUuUy4gb2ZmaWNpYWxzIGhhZCBoaWdoIGhvcGVzIHdoZW4gQ2hpbmEgb2ZmaWNpYWxseSBqb2luZWQgdGhlIFdvcmxkIFRyYWRlIE9yZ2FuaXphdGlvbiBpbiAyMDAxLiBcIlRoZXJlIHdhcyBhIGhvbmV5bW9vbiBwZXJpb2QgaW4gdGhlIGZpcnN0IHNpeCBvciBzZXZlbiB5ZWFycywgYSBkZXNpcmUgdG8gdHJ5IFt0b10gbWFrZSB0aGluZ3Mgd29yayxcIiBXZXNzZWwgc2F5cy4gQnV0LCBoZSBzYXlzLCBzdGFydGluZyBhcm91bmQgMjAwNiwgYnVzaW5lc3NlcyBiZWdhbiBjb21pbmcgdG8gaGltIHNheWluZyB0aGF0IENoaW5hIGhhZCBzdG9sZW4gdGhlaXIgZGVzaWducyBvciBpZGVhcyBvciBoYWQgcHJlc3N1cmVkIHRoZW0gaW50byBwYXJ0bmVyc2hpcHMgYW5kIHRha2VuIHRoZWlyIHRlY2hub2xvZ3kuIEp1c3QgbGlrZSB3aXRoIEhpY2t0b24sIFdlc3NlbCBzYXlzLCB0aGV5IHdvdWxkbid0IGNvbWUgZm9yd2FyZCBwdWJsaWNseS4gIENoaW5hIGlzIGNvdW50aW5nIG9uIHRoaXMgY29kZSBvZiBvbWVydGEgYnkgQW1lcmljYW4gYnVzaW5lc3NlcyBhcyB0aGV5IGNvbnRpbnVlIHdpdGggYnVzaW5lc3MgYXMgdXN1YWwuIEJ1dCB5b3Ugd291bGQgdGhpbmsgdGhhdCBldmVudHVhbGx5LCBDaGluYSdzIHN0ZWFsaW5nIHdpbGwgYmVjb21lIHNvIHByZXZlbGFudCwgdGhhdCBVUyBjb21wYW5pZXMgd2lsbCBiZSBmb3JjZWQgdG8gY29vcGVyYXRlIGZvciBzZWxmIHByZXNlcnZhdGlvbi4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMTozOCIsICJ0aXRsZSI6ICJVUyBidXNpbmVzcyBpdHMgb3duIHdvcnN0IGVuZW15IGluIGZpZ2h0aW5nIENoaW5hIGhhY2tpbmcifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJIb3N0IGEgdmlzaXQiLCAiZGlzY2lwbGluIl0sICJjb3VudHJpZXMiOiBbIkNISU5BIl0sICJhdXRob3JzIjogWyJPUEVOLVNPVVJDRSBJTlRFUk5FVCJdLCAibG9jYXRpb24iOiBbWyIzOS45Mjg5IiwgIjExNi4zODgiXV0sICJzb3VyY2UiOiAiaHR0cHM6Ly93d3cuZnhzdHJlZXQuY29tL2FuYWx5c2lzL2ZlZC1jYW5kaWRhdGVzLWNyb3NzLWEtbGluZS1pbGxpbm9pcy1maW5kcy1pdHMtd2F5LTIwMTkwNDE0MTUzNiIsICJjb250ZW50IjogIklsbGlub2lzIGlzIGEgbWVkaWFuIGFtb25nIFUuUy4gc3RhdGVzLiBHZW9ncmFwaGljYWxseSwgaXQgc2l0cyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBjb3VudHJ5LiBPZiB0aGUgNTAgc3RhdGVzIGluIHRoZSB1bmlvbiwgaXQgd2FzIGNocm9ub2xvZ2ljYWxseSB0aGUgMjFzdCB0byBlbnRlci4gQnkgbGFuZCBhcmVhLCBpdCBpcyB0aGUgMjV0aCBsYXJnZXN0IHN0YXRlLCBjb25uZWN0aW5nIHRoZSBHcmVhdCBMYWtlcyBvbiBpdHMgZWFzdCB0byB0aGUgTWlzc2lzc2lwcGkgUml2ZXIgb24gaXRzIHdlc3QuIEl0cyBwb3B1bGF0aW9uIGFuZCBlY29ub215IGhhdmUgbXVjaCBpbiBjb21tb24gd2l0aCB0aGUgcmVzdCBvZiB0aGUgY291bnRyeS4gICAgICBMaWtlIG1hbnkgc3RhdGVzLCBJbGxpbm9pcyBtdXN0IHN0cmlrZSBhIGJhbGFuY2UgYmV0d2VlbiBpdHMgdXJiYW4gY29yZSwgQ2hpY2Fnbywgd2hpY2ggY29udGFpbnMgdGhlIG1ham9yaXR5IG9mIGl0cyBwb3B1bGF0aW9uOyBhbmQgdGhlIHJ1cmFsIGV4cGFuc2UgdGhhdCByZXByZXNlbnRzIHRoZSBtYWpvcml0eSBvZiBpdHMgc3BhY2UgYW5kIG5hdHVyYWwgcmVzb3VyY2VzLiBJdHMgY2FwaXRhbCwgU3ByaW5nZmllbGQsIHNpdHMgaW4gdGhlIG1pZGRsZSBvZiB0aGUgc3RhdGUsIGEgdGhyZWUtaG91ciBkcml2ZSBmcm9tIENoaWNhZ28sIGFzc3VtaW5nIG5vIHRyYWZmaWMuIFRoZSBjb25jZXJucyBvZiB1cmJhbiByZXNpZGVudHMsIGxpa2UgZ2FuZyB2aW9sZW5jZSBhbmQgcHVibGljIHRyYW5zaXQsIGFyZSB1bmZhbWlsaWFyIHRvIHRob3NlIGluIHRoZSByZXN0IG9mIHRoZSBzdGF0ZS4gVGhlc2UgZGlmZmVyZW5jZXMgaW4gbG9jYXRpb24gYW5kIGxpZmVzdHlsZSBhcmUgbXVjaCBsaWtlIHRoZSBnYXBzIGJldHdlZW4gTmV3IFlvcmsgQ2l0eSBhbmQgQWxiYW55OyBMb3MgQW5nZWxlcyBhbmQgU2FjcmFtZW50bzsgTWlhbWkgYW5kIFRhbGxhaGFzc2VlLiAgICAgIElsbGlub2lzIGlzIGFsc28gZW1ibGVtYXRpYyBvZiB0aGUgZGlyZSBmaXNjYWwgc3RhdGUgb2YgVS5TLiBzdGF0ZXMuIFdoaWxlIElsbGlub2lzIGZhY2VzIGEgdW5pcXVlbHkgZGlmZmljdWx0IGNoYWxsZW5nZSwgaXQgb2ZmZXJzIGxlc3NvbnMgdG8gb3RoZXJzIHNlZWtpbmcgdG8gYXZvaWQgYmFkIG91dGNvbWVzLiAgICAgICAgQXMgd2UgZGlzY3Vzc2VkIGxhc3QgeWVhciwgZGVjYWRlcyBvZiBuZWdsZWN0IGluIGZ1bmRpbmcgcGVuc2lvbnMgZm9yIHN0YXRlIHdvcmtlcnMgZHJvdmUgSWxsaW5vaXNcdTIwMTkgZmluYW5jZXMgdG8gdGhlIGJyaW5rIG9mIGEganVuayBjcmVkaXQgcmF0aW5nLCB3aGlsZSBhIHBvbGl0aWNhbCBzdGFuZG9mZiBuZWFybHkgYnJvdWdodCB0aGUgc3RhdGUgdG8gaW5zb2x2ZW5jeS4gSWxsaW5vaXMgaGFzIGFsc28gYm9ybmUgdGhlIGRvd25zaWRlIHJpc2tzIG9mIHRyYWRlIGNvbmZsaWN0cy4gSWxsaW5vaXNcdTIwMTkgZmFybWVycyBoYXZlIG1hZGUgaXQgdGhlIGxlYWRpbmcgcHJvZHVjZXIgb2Ygc295YmVhbnMgYW1vbmcgVS5TLiBzdGF0ZXMsIHdoaWxlIGl0cyBhbHJlYWR5LXN0cnVnZ2xpbmcgbWFudWZhY3R1cmVycyBoYWQgdG8gYWJzb3JiIGhpZ2hlciBzdGVlbCBhbmQgYWx1bWludW0gcHJpY2VzLiAgICAgIFNpbmNlIG91ciBsYXN0IHdyaXRpbmcsIGEgbmV3IGdvdmVybm9yIGhhcyB0YWtlbiBvZmZpY2UuIFRoZSBleHBlbnNpdmUgY2FtcGFpZ24gYmV0d2VlbiB0d28gc2VsZi1mdW5kZWQgYnVzaW5lc3NtZW4gaGFzIGJlZW4gYSByZWN1cnJpbmcgdGhlbWUgaW4gbWFueSBndWJlcm5hdG9yaWFsIHJhY2VzLiBBbHNvIGNvbW1vbiBhY3Jvc3MgdGhlIGNvdW50cnkgaGFzIGJlZW4gdGhlIFx1MjAxY291dHNpZGVyc1x1MjAxZCBwcm9taXNpbmcgdG8gbGVhZCB3aXRoIGEgYnVzaW5lc3MgcGVyc3BlY3RpdmUgaW5zdGVhZCBvZiB0aGUgZW50cmVuY2hlZCB2aWV3cyBvZiBjYXJlZXIgcG9saXRpY2lhbnMuICAgICAgVGhlIG5ldyBnb3Zlcm5vciwgSi4gQi4gUHJpdHprZXIsIHJlY29nbml6ZXMgdGhlIG5lZWQgZm9yIGRyYXN0aWMgZmlzY2FsIGFjdGlvbi4gSWxsaW5vaXNcdTIwMTlzIGNvbnN0aXR1dGlvbiB1bmlxdWVseSBmb3JiaWRzIGEgZ3JhZHVhdGVkIGluY29tZSB0YXggYW5kIGNvbnRhaW5zIHN0cmljdCBwcm90ZWN0aW9uIGZvciBwdWJsaWMgd29ya2Vyc1x1MjAxOSBwZW5zaW9ucy4gVGhlIHN0YXRlXHUyMDE5cyBjdXJyZW50IGZsYXQgaW5jb21lIHRheCBhbmQgc2FsZXMgdGF4IHB1dCBhIHJlZ3Jlc3NpdmVseSBoaWdoZXIgdGF4IGJ1cmRlbiBvbiBsb3dlciBlYXJuZXJzLiBBbWVuZGluZyB0aGUgY29uc3RpdHV0aW9uIGlzIG9uIFByaXR6a2VyXHUyMDE5cyBhZ2VuZGEsIGJ1dCBhbiBhbWVuZG1lbnQgY2Fubm90IGJlIGJyb3VnaHQgZm9yIGEgdm90ZSB1bnRpbCBOb3ZlbWJlciAyMDIwIGFuZCB3aWxsIG5vdCBiZSBpbiBwbGFjZSB1bnRpbCAyMDIxIGF0IGVhcmxpZXN0LiAgICAgIEV2ZW4gaWYgdGhlIGNvbnN0aXR1dGlvbmFsIHJlc3RyaWN0aW9uIGlzIGxpZnRlZCwgdGhlIGZ1dHVyZSB0YXggb3V0bG9vayBpcyB1bmNlcnRhaW4uIFByaXR6a2VyIGhhcyBwcm9wb3NlZCBhIGdyYWR1YXRlZCBpbmNvbWUgdGF4IHBsYW4sIG5vdGFibGUgZm9yIGl0cyBtaWxsaW9uYWlyZVx1MjAxOXMgdGF4OiBUYXhwYXllcnMgZWFybmluZyBvdmVyICQxLDAwMCwwMDAgd291bGQgbG9zZSB0aGVpciBtYXJnaW5hbCB0YXggaW5jcmVhc2VzIGFuZCBpbnN0ZWFkIHNlZSBhbGwgaW5jb21lIHRheGVkIGF0IHRoZSBoaWdoZXN0IHJhdGUuIFRoZSBwcm9wb3NhbCBpcyBpbXBlcmZlY3QgYW5kIG5vdCBiaW5kaW5nLCBidXQgaXQgZ2l2ZXMgYSBjbGVhciBzaWduYWwgb2Ygd2hlcmUgdGF4ZXMgYXJlIGdvaW5nLiAgICAgIFRoZSByaXNrcyBhbmQgY29zdHMgb2YgdGF4IGluY3JlYXNlcyBoYXZlIGdyb3duIGluIGxpZ2h0IG9mIHRoZSAyMDE3IFRheCBDdXRzIGFuZCBKb2JzIEFjdCAoVENKQSkuIE9uZSBvZiBUQ0pBXHUyMDE5cyBtb3N0IHN1YnN0YW50aWFsIGNoYW5nZXMgd2FzIGl0cyBsaW1pdGF0aW9uIG9mICQxMCwwMDAgc3RhdGUgYW5kIGxvY2FsIHRheCAoU0FMVCkgZGVkdWN0aW9ucyBhZ2FpbnN0IGZlZGVyYWwgaW5jb21lIHRheC4gQmVmb3JlIHRoaXMgY2FwLCByZXNpZGVudHMgb2YgaGlnaGVyLXRheCBzdGF0ZXMgY291bGQgZmluZCBzb21lIGNvbnNvbGF0aW9uIGluIHJlZHVjaW5nIHRoZWlyIGZlZGVyYWwgdGF4IGJ1cmRlbiB3aXRoIHRoZWlyIHN1YnN0YW50aWFsIHN0YXRlIGluY29tZSBhbmQgcHJvcGVydHkgdGF4ZXMuIFdpdGggdGhlIFNBTFQgY2FwLCBldmVyeSBsb2NhbCB0YXggaW5jcmVhc2UgY2FycmllcyBhIGhpZ2hlciByZWFsIGNvc3QgdG8gdGF4cGF5ZXJzLiAgICAgIENvbXBldGl0aW9uIGFtb25nIHN0YXRlcyBjYW5ub3QgYmUgaWdub3JlZC4gV2hpbGUgZWNvbm9taWMgZGV2ZWxvcG1lbnQgaW5jZW50aXZlcyBjYW4gYmUgYSByYWNlIHRvIHRoZSBib3R0b20sIHRoZSBoaWdoZXIgYSBzdGF0ZVx1MjAxOXMgdGF4IHJhdGVzIHJpc2UsIHRoZSBtb3JlIHRlbXB0aW5nIGl0IGlzIGZvciBidXNpbmVzc2VzIGFuZCByZXNpZGVudHMgdG8gcmVsb2NhdGUuIElsbGlub2lzIGhhcyBiZWVuIGxvc2luZyBwb3B1bGF0aW9uIGZvciBmaXZlIHllYXJzIHJ1bm5pbmcuICAgICAgICAgICAgUHJpdHprZXIgaGFzIG1hZGUgbW9yZSBpbW1lZGlhdGUgcHJvcG9zYWxzIHRvIHJhaXNlIGFkZGl0aW9uYWwgc3RhdGUgcmV2ZW51ZSB3aXRob3V0IGluY29tZSB0YXggY2hhbmdlcy4gSWYgYWxsIHByb3Bvc2FscyBhcmUgaW1wbGVtZW50ZWQsIHRoZXkgY291bGQgcmFpc2Ugb3ZlciAkMS4xIGJpbGxpb24gaW4gYWRkaXRpb25hbCBhbm51YWwgcmV2ZW51ZSBmb3IgdGhlIHN0YXRlLCBhIGdvb2Qgc3RhcnQgYnV0IG5vdCBzdWZmaWNpZW50IHRvIGNsb3NlIGl0cyBzdHJ1Y3R1cmFsIGRlZmljaXQgb2YgJDMuMiBiaWxsaW9uLiAgICAgIFdpdGggc28gbWFueSBjYXRlZ29yaWVzIG9mIHRheGVzIGFuZCBmZWVzLCBjb21wYXJpbmcgdGF4IGJ1cmRlbnMgYmV0d2VlbiBzdGF0ZXMgaXMgbnVhbmNlZC4gTm8gc3RhdGUgaGFzIHplcm8gdGF4ZXMsIGFuZCB0aG9zZSB3aXRoIGxvdyBvciBubyB0YXhlcyBpbiBvbmUgY2F0ZWdvcnkgKGxpa2UgVGV4YXNcdTIwMTkgbGFjayBvZiBhbiBpbmNvbWUgdGF4KSBtYWtlIHVwIGZvciBpdCB3aXRoIG90aGVycyAobGlrZSB0aGUgTG9uZSBTdGFyIHN0YXRlXHUyMDE5cyBoaWdoIHByb3BlcnR5IHRheGVzKS4gVG9kYXksIElsbGlub2lzXHUyMDE5IGNvbWJpbmVkIHRheCBidXJkZW4gbGVhdmVzIGl0IHNvbWUgaGVhZHJvb20gdG8gaW5jcmVhc2UgdGF4ZXMsIGJ1dCBub3QgYnkgbXVjaC4gICAgICBUaGUgcGVuc2lvbiBmdW5kaW5nIGdhcCBzdGFydGVkIHdpdGggYSBkZWNpc2lvbiBpbiB0aGUgbWlkLTE5OTBzIHRvIGRlZmVyIGEgc21hbGwgcG9ydGlvbiBvZiBwZW5zaW9uIHBheW1lbnRzLiBVbmZvcnR1bmF0ZWx5IGZvciB0b2RheVx1MjAxOXMgSWxsaW5vaXMgdGF4cGF5ZXJzLCB0aGUgZGVmZXJyYWwgd2FzIGFuIGVmZmVjdGl2ZSB0b29sIHRvIGJhbGFuY2UgdGhlIGJ1ZGdldC4gU3Vic2VxdWVudCBnb3Zlcm5vcnMgcm91dGluZWx5IHVuZGVyZnVuZGVkIHRoZSBwZW5zaW9uIG9yIHBhaWQgYnkgaXNzdWluZyBib25kcy4gVGhlIHN0YXRlIHRvb2sgMjUgeWVhcnMgdG8gcmVhY2ggaXRzIGN1cnJlbnQgc3RyYWl0cywgYW5kIGl0IHdpbGwgdGFrZSBhIHNpbWlsYXIgZHVyYXRpb24gb2YgZmlzY2FsIHJlc3RyYWludCB0byByZWNvdmVyIGZyb20gaXQuIEV2ZW4gUHJpdHprZXJcdTIwMTlzIG93biBidWRnZXQgcHJvcG9zYWwsIGZ1bGwgb2YgdGF4IGFuZCBmZWUgaW5jcmVhc2VzLCBlbnZpc2lvbnMgdGhlIHBlbnNpb24gcHJvZ3JhbSByZWFjaGluZyBhIGZ1bmRlZCByYXRpbyBvZiBvbmx5IDY1JSBieSB0aGUgeWVhciAyMDQ1LiAgICAgIEEgc2xvdyBzbG9nIGlzIHRoZSBvbmx5IHJlYWxpc3RpYyBhcHByb2FjaC4gQmFua3J1cHRjeSBpcyBub3QgYW4gb3B0aW9uLCBhcyB0aGUgZmVkZXJhbCBiYW5rcnVwdGN5IGNvZGUgZG9lcyBub3QgYWxsb3cgc3RhdGVzIHRvIHVuZGVyZ28gcmVvcmdhbml6YXRpb24uIEFueSBhdHRlbXB0IHRvIHNlZWsgYSBiYWlsb3V0IGZyb20gdGhlIGZlZGVyYWwgZ292ZXJubWVudCB3b3VsZCBmYWNlIHN0cmlkZW50IG9iamVjdGlvbnMgZnJvbSB0aGUgb3RoZXIgNDkgc3RhdGVzIHRoYXQgZXhlcmNpc2VkIGZpc2NhbCBkaXNjaXBsaW5lLCBzZXR0aW5nIHVwIGEgcHJvbG9uZ2VkIGZpZ2h0IHdpdGggYW4gdW5jZXJ0YWluIG91dGNvbWUuICAgICAgSWxsaW5vaXNcdTIwMTkgcGFpbiBpcyBub3QgZm9yIG5hdWdodCBpZiBvdGhlciBzdGF0ZXMgbGVhcm4gZnJvbSB0aGlzIGVwaXNvZGUuIE1vc3Qgc3RhdGVzIG9mZmVyIGdlbmVyb3VzIHBlbnNpb24gcGxhbnMsIGFuZCBmaXhlZCBpbmNvbWUgaW52ZXN0b3JzIGFyZSBoYXBweSB0byBwdXJjaGFzZSBzdGF0ZSBib25kcy4gVGhlIHRlbXB0YXRpb24gdG8gdW5kZXJmdW5kIGEgcGVuc2lvbiB3aWxsIGFsd2F5cyBiZSBwcmVzZW50LCBidXQgaXQgaXMgZm9sbHkuIEFzIHJlY2VudGx5IGFzIDIwMTAsIElsbGlub2lzIHdhcyBqdXN0IG9uZSBvZiBzZXZlcmFsIGhpZ2gtcmlzayBzdGF0ZXMsIHdpdGggYW5hbHlzdHMgZXF1YWxseSB3b3JyaWVkIGFib3V0IHRoZSBmaXNjYWwgY29uZGl0aW9ucyBvZiBDYWxpZm9ybmlhLCBOZXcgSmVyc2V5IGFuZCBPaGlvLiBUaGVzZSBvdGhlciByaXNreSBzdGF0ZXMgdG9vayB0aGVpciBtZWRpY2luZSB0byBjb3JyZWN0IHRoZWlyIGZpc2NhbCBnYXBzOiBOZXcgSmVyc2V5IHJhaXNlZCBpdHMgcHJvcGVydHkgdGF4ZXMgdG8gdGhlIGhpZ2hlc3QgcmF0ZXMgaW4gdGhlIG5hdGlvbjsgQ2FsaWZvcm5pYSBib29zdGVkIGl0cyBpbmNvbWUgYW5kIHNhbGVzIHRheGVzLiBPaGlvIGhhcyBwcm92aWRlZCBhbiBlbmNvdXJhZ2luZyBleGFtcGxlIG9mIGEgcmVjb3Zlcnkgd2l0aG91dCBhIHRheCBpbmNyZWFzZSwgYXMgZGlzY2lwbGluZWQgc3BlbmRpbmcgYW1pZCBhbiBlY29ub21pYyByZWNvdmVyeSBoZWxwZWQgdG8gYmFsYW5jZSBpdHMgYnVkZ2V0LiAgICAgIElsbGlub2lzIGhhcyBhIGxvbmcgaGlzdG9yeSBvZiBjaGFuZ2UuIFRoZSBuYXRpdmVzIGluIENhaG9raWEsIGFuZCBMYXR0ZXIgRGF5IFNhaW50cyBpbiBOYXV2b28sIG1vdmVkIG9uIGZyb20gdGhlaXIgc2V0dGxlbWVudHM7IENoaWNhZ28gcmVidWlsdCBmcm9tIGEgZGV2YXN0YXRpbmcgZmlyZS4gVG9kYXksIHRoZSBtb3N0IHN1Y2Nlc3NmdWwgcmVnaW9ucyBpbiB0aGUgVS5TLiBhcmUgdGhvc2UgdGhhdCBoYXZlIHBsYW5uZWQgd2VsbCBhbmQgYWRhcHRlZCBxdWlja2x5IHRvIG1lZXQgdG9kYXlcdTIwMTlzIGVjb25vbWljIG5lZWRzLiBUaGUgc29vbmVyIGFuZCBtb3JlIGRlY2lzaXZlbHkgSWxsaW5vaXMgbGVhZGVycyBhY3QgdG8gY29ycmVjdCB0aGUgc3RhdGVcdTIwMTlzIHNob3J0Y29taW5ncywgdGhlIGJldHRlciB0aGUgZnV0dXJlIHdpbGwgYmUgZm9yIHRob3NlIG9mIHVzIHdobyBsaXZlIGhlcmUuICAgICAgRnJlbmVtaWVzICAgICAgTGFzdCBPY3RvYmVyLCBKYXBhbmVzZSBQcmltZSBNaW5pc3RlciBTaGluelx1MDE0ZCBBYmUgYXJyaXZlZCBpbiBCZWlqaW5nIGZvciB0aGUgZmlyc3QgYmlsYXRlcmFsIHRyaXAgYnkgYSBKYXBhbmVzZSBsZWFkZXIgdG8gQ2hpbmEgaW4gc2V2ZW4geWVhcnMuIFRoZSB2aXNpdCB3YXMgbm9taW5hbGx5IGludGVuZGVkIHRvIGNvbW1lbW9yYXRlIHRoZSA0MHRoIGFubml2ZXJzYXJ5IG9mIHRoZSBUcmVhdHkgb2YgUGVhY2UgYW5kIEZyaWVuZHNoaXAuIE1vcmUgYnJvYWRseSwgaG93ZXZlciwgdGhlIGRpcGxvbWF0aWMgZFx1MDBlOXRlbnRlLCBpbml0aWF0ZWQgaW4gMjAxNyBhZnRlciB5ZWFycyBvZiBlbmR1cmluZyByaXZhbHJ5LCBjYW4gYmUgYXR0cmlidXRlZCB0byB0aGUgY291bnRyaWVzXHUyMDE5IGNvbW1vbiBpbnRlcmVzdCBpbiBzdGFuZGluZyB1cCB0byBVLlMuIHRyYWRlIHJlc3RyaWN0aW9ucy4gICAgICBEZXNwaXRlIHNvbWUgdW5mb3J0dW5hdGUgaGlzdG9yeSBhbmQgaW1wb3J0YW50IHN0cmF0ZWdpYyBkaWZmZXJlbmNlcywgdHJhZGUgYmV0d2VlbiB0aGUgdHdvIEFzaWFuIHJpdmFscyBoYXMgZmxvdXJpc2hlZC4gRm9yIEphcGFuZXNlIGNvbXBhbmllcywgQ2hpbmEgaXMgbm90IG9ubHkgdGhlIHdvcmxkXHUyMDE5cyBmYWN0b3J5IGJ1dCBpcyBhbHNvIGEga2V5IGNvbnN1bWVyIG9mIHRoZWlyIHByb2R1Y3RzLiBDaGluYSBoYXMgZW1lcmdlZCBhcyB0aGUgdG9wIGRlc3RpbmF0aW9uIGZvciBKYXBhbmVzZSBwcm9kdWN0czogaXRzIHNoYXJlIG9mIHRvdGFsIEphcGFuZXNlIGV4cG9ydHMgaGFzIGluY3JlYXNlZCBzaWduaWZpY2FudGx5IGZyb20ganVzdCA1JSBpbiAxOTk4IHRvIDIwJSBpbiAyMDE4LiBPdmVyIHRoZSBzYW1lIHRpbWUgcGVyaW9kLCB0aGUgVS5TLiBzaGFyZSBvZiBleHBvcnRzIGZyb20gSmFwYW4gaGFzIGRlY2xpbmVkIGZyb20gMzElIHRvIDE5JS4gICAgICBUaG91Z2ggSmFwYW4gaGFzIG1hbmFnZWQgdG8gZGl2ZXJzaWZ5IGl0cyBleHBvcnQgbWFya2V0cywgaXQgcmVsaWVzIGhlYXZpbHkgb24gdGhlIFVuaXRlZCBTdGF0ZXMgZm9yIGl0cyBkZWZlbnNlLiBKYXBhblx1MjAxOXMgcG9saXRpY2FsIGFuZCBlY29ub21pYyBzeXN0ZW1zIGFyZSBzaW1pbGFyIHRvIHRob3NlIGluIHRoZSBVLlMuLCBhbmQgSmFwYW4gc2hhcmVzIHRoZSBBbWVyaWNhbiBnb2FsIG9mIGN1cmJpbmcgQ2hpbmFcdTIwMTlzIGdyb3dpbmcgaW5mbHVlbmNlIGluIHRoZSBBc2lhLVBhY2lmaWMgcmVnaW9uIChpbmNsdWRpbmcgaW4gdGhlIFNvdXRoIENoaW5hIFNlYSkuIEluIGFkZGl0aW9uLCBKYXBhbiBhbmQgQ2hpbmEgaGF2ZSByaXZhbCBkZXZlbG9wbWVudCBiYW5rcyBhaW1lZCBhdCBoZWxwaW5nIGVtZXJnaW5nIEFzaWFuIG5hdGlvbnMuICAgICAgSmFwYW5cdTIwMTlzIGluY3JlYXNlZCByZWxpYW5jZSBvbiBDaGluZXNlIGRlbWFuZCBoYXMgbGVkIHRvIGNvbmNlcm5zIG92ZXIgd2hldGhlciB0aGUgd2Vha2VuaW5nIENoaW5lc2UgZWNvbm9teSB3aWxsIGJyaW5nIEphcGFuIGRvd24gd2l0aCBpdC4gRXhwb3J0cyB0byBDaGluYSBoYXZlIGFsc28gZGVjcmVhc2VkIG5vdGFibHkgb24gdGhlIGJhY2sgb2YgdGhlIHNsb3dpbmcgQ2hpbmVzZSBlY29ub215LiBFbGV2YXRlZCB0cmFkZSB1bmNlcnRhaW50eSBoYXMgYmVlbiB3ZWlnaGluZyBvbiBKYXBhbmVzZSBleHBvcnRzLiAgICAgIEphcGFuXHUyMDE5cyBpbmNyZWFzaW5nIGRlcGVuZGVuY2Ugb24gQ2hpbmVzZSBkZW1hbmQgaXMgdmlzaWJsZSBhY3Jvc3Mgc2V2ZXJhbCBpbmR1c3RyaWVzIGFzIHRoZSBzdHJ1Y3R1cmUgb2YgZXhwb3J0cyBoYXMgZXZvbHZlZCBjb25zaWRlcmFibHkgc2luY2UgdGhlIGVhcmx5IDIwMDBzLiBBdCBvbmUgcG9pbnQsIEphcGFuXHUyMDE5cyBleHBvcnRzIHdlcmUgb25seSBhc3NlbWJsZWQgaW4gQ2hpbmEgYmVmb3JlIGJlaW5nIHJlLWV4cG9ydGVkIHRvIEphcGFuIGFuZCBvdGhlciBlY29ub21pZXMuIFRodXMsIENoaW5lc2UgZGVtYW5kIGhhZCBvbmx5IGEgbGltaXRlZCBpbXBhY3Qgb24gSmFwYW5lc2UgZXhwb3J0cy4gICAgICBJbiBsYXN0IGZldyB5ZWFycywgaG93ZXZlciwgSmFwYW5lc2UgZ29vZHMgaGF2ZSBiZWVuIGRpcmVjdGx5IGNhdGVyaW5nIHRvIENoaW5hXHUyMDE5cyBkb21lc3RpYyBkZW1hbmQuIFNhbGVzIG9mIEphcGFuZXNlIGZpbmFsIHByb2R1Y3RzIHRvIENoaW5hIGhhdmUgaW5jcmVhc2VkIHNpZ25pZmljYW50bHkgc2luY2UgdGhlIGVhcmx5IDIwMDBzIGZyb20gYXJvdW5kIDM0JSB0byA3NCUgb2YgdG90YWwgc2FsZXMuIFRoZSBDaGluZXNlIG1pZGRsZSBjbGFzcyBoYXMgZ3Jvd24sIGFuZCBncm93biB3ZWFsdGhpZXIsIHN0aW11bGF0aW5nIGRlbWFuZCBmb3IgSmFwYW5lc2UgcHJvZHVjdHMuICAgICAgICAgICAgV2Vha2VyIENoaW5lc2UgZGVtYW5kIGlzblx1MjAxOXQgdGhlIG9ubHkgY29uY2VybiBmb3IgSmFwYW5lc2UgZXhwb3J0ZXJzLiBDaGluYSBoYXMgdHJhbnNpdGlvbmVkIGl0c2VsZiBmcm9tIG1hbnVmYWN0dXJpbmcgdGV4dGlsZXMgYW5kIHRveXMgdG8gcHJvZHVjdGlvbiBvZiBoaWdoLXRlY2ggY29tcG9uZW50cywgbWFjaGluZXJ5IGFuZCBlbGVjdHJvbmljcy4gVGhlIHBlcmNlbnRhZ2Ugb2YgdmFsdWUtYWRkZWQgcHJvZHVjdHMgbWFkZSBkb21lc3RpY2FsbHkgZm9yIGV4cG9ydHMgdG91Y2hlZCA4NyUgaW4gQ2hpbmEgY29tcGFyZWQgdG8gSmFwYW4gYXQgNzklIGluIDIwMTguIENoaW5lc2UgY29tcGFuaWVzIGFyZSBub3cgbW9yZSBkaXJlY3QgY29tcGV0aXRvcnMgZm9yIEphcGFuZXNlIGZpcm1zLiAgICAgIEJleW9uZCB0cmFkZSwgQ2hpbmEgaXMgYWxzbyBhbiBpbXBvcnRhbnQgc291cmNlIG9mIG92ZXJzZWFzIGludmVzdG1lbnQgYW5kIHRvdXJpc20gdG8gSmFwYW4uIEJ1dCBvd2luZyB0byBDaGluYVx1MjAxOXMgcHJvdGVjdGl2ZSByZWdpbWUsIEphcGFuXHUyMDE5cyBkaXJlY3QgaW52ZXN0bWVudCB0byBDaGluYSBoYXMgZ3Jvd24gc2x1Z2dpc2hseS4gQ2hpbmEgYWNjb3VudHMgZm9yIG9ubHkgNS43JSBvZiBKYXBhblx1MjAxOXMgdG90YWwgb3V0d2FyZCBmb3JlaWduIGRpcmVjdCBpbnZlc3RtZW50LiBCeSBjb250cmFzdCwgSmFwYW4gaGFzIG1hZGUgYSBjb25zaWRlcmFibGUgYW1vdW50IG9mIGRpcmVjdCBpbnZlc3RtZW50IChhcm91bmQgJDQ3MCBiaWxsaW9uKSBpbiB0aGUgVS5TLiwgcGFydGljdWxhcmx5IGluIHRoZSB3aG9sZXNhbGUgdHJhZGUgYW5kIG1hbnVmYWN0dXJpbmcgc2VjdG9ycy4gICAgICBGb3IgSmFwYW4sIGJhbGFuY2luZyB0aGUgZWNvbm9taWMgYW5kIHN0cmF0ZWdpYyBhc3BlY3RzIG9mIGl0cyByZWxhdGlvbnNoaXAgd2l0aCBDaGluYSBpcyBkaWZmaWN1bHQuIFRoZSB0YXNrIHdpbGwgYmVjb21lIGV2ZW4gaGFyZGVyIGlmIHRoZSB3ZWRnZSBiZXR3ZWVuIFdhc2hpbmd0b24gYW5kIEJlaWppbmcgd2lkZW5zIGZ1cnRoZXIuIEJ1dCBmb3Igbm93LCB0aGUgSmFwYW5lc2Ugc2VlbSB0byBoYXZlIGtlcHQgdGhlIHR3byByZWFsbXMgZnJvbSBpbnRlcmZlcmluZyB3aXRoIG9uZSBhbm90aGVyLiBUaGVpciBleHBlcmllbmNlIG1pZ2h0IGJlIGEgdXNlZnVsIGxlc3NvbiBmb3Igb3RoZXJzLiAgICAgIE5vIFBsYWNlIGZvciBQYXJ0aXNhbnMgICAgICBTaW5jZSBpdHMgZXN0YWJsaXNobWVudCBtb3JlIHRoYW4gMTAwIHllYXJzIGFnbywgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBCb2FyZCBoYXMgaW5jbHVkZWQgZ292ZXJub3JzIHdpdGggYSBicm9hZCByYW5nZSBvZiBiYWNrZ3JvdW5kcywgcG9saXRpY2FsIHZpZXdzIGFuZCBsaWZlIGV4cGVyaWVuY2VzLiBTb21lIGhhdmUgYmVlbiBsb3VkLCBvdGhlcnMgcXVpZXQ7IHNvbWUgYXJlIGFjYWRlbWljcywgd2hpbGUgb3RoZXJzIGNvbWUgZnJvbSBpbmR1c3RyeS4gT3JnYW5pemF0aW9ucyB0aGF0IGludml0ZSBhIGRpdmVyc2l0eSBvZiB0aG91Z2h0IHR5cGljYWxseSBtYWtlIGJldHRlciBjaG9pY2VzIHRoYW4gdGhvc2Ugd2l0aCBtb3JlIGhvbW9nZW5lb3VzIGNvbnN0aXR1dGlvbnMuICAgICAgV2hpbGUgbWFueSBGZWQgZGVjaXNpb25zIGFyZSB1bmFuaW1vdXMsIGRlYmF0ZSB3aXRoaW4gdGhlIHdhbGxzIGlzIGFjdGl2ZSBhbmQgZGlzc2VudHMgZG8gb2NjdXIuIFRob3NlIHdobyBzdWdnZXN0IHRoZSBCb2FyZCBpcyBtaXJlZCBpbiBncm91cHRoaW5rIHNob3VsZCBoYXZlIGEgY2xvc2VyIGxvb2sgYXQgdGhlIG1pbnV0ZXMsIG1lZXRpbmcgdHJhbnNjcmlwdHMgYW5kIGZvcmVjYXN0IGRpc3BlcnNpb24uIEJ1dCB3aGlsZSBwYXJ0aWNpcGFudHMgaGF2ZSB0aGVpciBkaWZmZXJlbmNlcywgdGhlIEZlZFx1MjAxOXMgY3VsdHVyZSBpcyBjb25zZW5zdXMtZHJpdmVuIGFuZCBhcG9saXRpY2FsLiBUaGlzIGNoYXJhY3RlciBhbGxvd3MgaXQgdG8gdGFrZSBhIGxvbmcgdmlldyBhbmQgbGVhbiBhZ2FpbnN0IG1hcmtldHMgYW5kIGZpc2NhbCBzdHJhdGVneSB3aGVuIG5lY2Vzc2FyeS4gICAgICBUaGUgcHJvcG9zZWQgbm9taW5hdGlvbnMgb2YgU3RlcGhlbiBNb29yZSBhbmQgSGVybWFuIENhaW4gdG8gdGhlIGJvYXJkIG9mIGdvdmVybm9ycyB0aHJlYXRlbiB0byBjb21wcm9taXNlIHRoZSBGZWRcdTIwMTlzIHN0cm9uZyBjaGFyYWN0ZXIuIEJvdGggaGF2ZSBiZWVuIG1ham9yIGZ1bmRyYWlzZXJzIGZvciB0aGUgcHJlc2lkZW50LCBhbmQgYm90aCBoYXZlIHBsZWRnZWQgdG8gdXNlIHRoZWlyIHBvc3RzIG9uIHRoZSBCb2FyZCB0byBzdXBwb3J0IHRoZSBXaGl0ZSBIb3VzZSBwcm9ncmFtLiBUaGV5IHNlZW0gaW50ZW50IG9uIGJyaW5naW5nIGEgcG9saXRpY2FsIGFnZW5kYSBpbnRvIGEgZm9ydW0gdGhhdCB0cmllcyB0byBvcGVyYXRlIHdpdGhvdXQgb25lLiAgICAgICAgICAgIFRoZSBwcm9wb3NlZCBzZWxlY3Rpb25zIG9mIE1vb3JlIGFuZCBDYWluIGNvbWUgb24gdGhlIGJhY2sgb2YgdGhlIHByZXNpZGVudFx1MjAxOXMgcmVjZW50IGNyaXRpY2lzbSBvZiBKYXkgUG93ZWxsLCB0aGUgRmVkIGNoYWlybWFuLiBJbiB0aGUgbW9zdCByZWNlbnQgc2Fsdm8sIHRoZSBwcmVzaWRlbnQgYXBwYXJlbnRseSB0b2xkIFBvd2VsbCwgXHUyMDFjSSBndWVzcyBJXHUyMDE5bSBzdHVjayB3aXRoIHlvdS5cdTIwMWQgICAgICBUaGlzIGlzblx1MjAxOXQgdGhlIGZpcnN0IHRpbWUgYSB3b3JsZCBsZWFkZXIgaGFzIHByZXNzZWQgZm9yIGVhc2llciBtb25leSB0byBhY2NvbW1vZGF0ZSBmaXNjYWwgaW1iYWxhbmNlcyBvciBib29zdCBwb2xpdGljYWwgZm9ydHVuZXMuIEJ1dCBzdWNoIGNhbXBhaWducyBjcmVhdGUgbG9uZy10ZXJtIHByb2JsZW1zIHRoYXQgdWx0aW1hdGVseSBwcm92ZSBoYXJtZnVsLiAgICAgIFRoZSBGZWQgaXMgbm90IGluZmFsbGlibGUsIGFuZCBvYnNlcnZlcnMgaGF2ZSBmcmVxdWVudGx5IGRpc2FncmVlZCB3aXRoIGl0cyBkZWNpc2lvbnMuIEJ1dCB0aG9zZSBkZWNpc2lvbnMgYXJlIHRha2VuIHdpdGggdGhlIGxvbmctdGVybSBpbnRlcmVzdHMgb2YgdGhlIGVjb25vbXkgaW4gbWluZCwgYW5kIG1hZGUgb24gdGhlIGJhc2lzIG9mIHRoZSBiZXN0IGF2YWlsYWJsZSBpbmZvcm1hdGlvbi4gVGhlIGRlc2lyZSB0byBmYXZvciBvbmUgcGFydHkgb3IgYW5vdGhlciBkb2Vzblx1MjAxOXQgZW50ZXIgaW50byB0aGUgZGlzY3Vzc2lvbi4gICAgICBUaGVyZSBpcyBubyBndWFyYW50ZWUgdGhhdCBNb29yZSBhbmQgQ2FpbiB3aWxsIHVsdGltYXRlbHkgYmUgc2VhdGVkIG9uIHRoZSBGZWQuIEFuZCBpZiB0aGV5IGFyZSwgdHdvIHZvdGVzIGRvIG5vdCBhIGNvbnNlbnN1cyBtYWtlLiBCdXQgZm9yIHRob3NlIHdobyBhZG1pcmUgdGhlIEZlZFx1MjAxOXMgbWlzc2lvbiBhbmQgbW9yYWxzLCBub3cgaXMgdGhlIHRpbWUgdG8gc3BlYWsgdXAuIC4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMTozOCIsICJ0aXRsZSI6ICJGZWQgQ2FuZGlkYXRlcyBDcm9zcyBhIExpbmU7IElsbGlub2lzIEZpbmRzIEl0cyBXYXkifQoKeyJpbmRleCI6IHsiX2luZGV4IjogImV2ZW50cyIsICJfdHlwZSI6ICJkb2MifX0KeyJjYXRlZ29yaWVzIjogWyJDb2VyY2UsIG5vdCBzcGVjaWZpZWQgYmVsb3ciLCAiIGludGVsbGlnZW5jZSAiLCAic2VjdXJpdHkiLCAic3VydmVpbGxhbmNlIiwgIm1vbml0b3IiXSwgImNvdW50cmllcyI6IFsiQ0hJTkEiXSwgImF1dGhvcnMiOiBbIk9QRU4tU09VUkNFIElOVEVSTkVUIl0sICJsb2NhdGlvbiI6IFtbIjI3Ljc0ODEiLCAiMTE2LjI3NCJdXSwgInNvdXJjZSI6ICJodHRwczovL3d3dy5ueXRpbWVzLmNvbS8yMDE5LzA0LzE0L3RlY2hub2xvZ3kvY2hpbmEtc3VydmVpbGxhbmNlLWFydGlmaWNpYWwtaW50ZWxsaWdlbmNlLXJhY2lhbC1wcm9maWxpbmcuaHRtbCIsICJjb250ZW50IjogIkluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBFdXJvcGUsIHRoZSBkZWJhdGUgaW4gdGhlIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIGNvbW11bml0eSBoYXMgZm9jdXNlZCBvbiB0aGUgdW5jb25zY2lvdXMgYmlhc2VzIG9mIHRob3NlIGRlc2lnbmluZyB0aGUgdGVjaG5vbG9neS4gUmVjZW50IHRlc3RzIHNob3dlZCBmYWNpYWwgcmVjb2duaXRpb24gc3lzdGVtcyBtYWRlIGJ5IGNvbXBhbmllcyBsaWtlIEkuQi5NLiBhbmQgQW1hem9uIHdlcmUgbGVzcyBhY2N1cmF0ZSBhdCBpZGVudGlmeWluZyB0aGUgZmVhdHVyZXMgb2YgZGFya2VyLXNraW5uZWQgcGVvcGxlLiAgQ2hpbmFcdTIwMTlzIGVmZm9ydHMgcmFpc2Ugc3RhcmtlciBpc3N1ZXMuIFdoaWxlIGZhY2lhbCByZWNvZ25pdGlvbiB0ZWNobm9sb2d5IHVzZXMgYXNwZWN0cyBsaWtlIHNraW4gdG9uZSBhbmQgZmFjZSBzaGFwZXMgdG8gc29ydCBpbWFnZXMgaW4gcGhvdG9zIG9yIHZpZGVvcywgaXQgbXVzdCBiZSB0b2xkIGJ5IGh1bWFucyB0byBjYXRlZ29yaXplIHBlb3BsZSBiYXNlZCBvbiBzb2NpYWwgZGVmaW5pdGlvbnMgb2YgcmFjZSBvciBldGhuaWNpdHkuIENoaW5lc2UgcG9saWNlLCB3aXRoIHRoZSBoZWxwIG9mIHRoZSBzdGFydC11cHMsIGhhdmUgZG9uZSB0aGF0LiAgXHUyMDFjSXRcdTIwMTlzIHNvbWV0aGluZyB0aGF0IHNlZW1zIHNob2NraW5nIGNvbWluZyBmcm9tIHRoZSBVLlMuLCB3aGVyZSB0aGVyZSBpcyBtb3N0IGxpa2VseSByYWNpc20gYnVpbHQgaW50byBvdXIgYWxnb3JpdGhtaWMgZGVjaXNpb24gbWFraW5nLCBidXQgbm90IGluIGFuIG92ZXJ0IHdheSBsaWtlIHRoaXMsXHUyMDFkIHNhaWQgSmVubmlmZXIgTHluY2gsIHN1cnZlaWxsYW5jZSBsaXRpZ2F0aW9uIGRpcmVjdG9yIGF0IHRoZSBFbGVjdHJvbmljIEZyb250aWVyIEZvdW5kYXRpb24uIFx1MjAxY1RoZXJlXHUyMDE5cyBub3QgYSBzeXN0ZW0gZGVzaWduZWQgdG8gaWRlbnRpZnkgc29tZW9uZSBhcyBBZnJpY2FuLUFtZXJpY2FuLCBmb3IgZXhhbXBsZS5cdTIwMWQgIFRoZSBDaGluZXNlIEEuSS4gY29tcGFuaWVzIGJlaGluZCB0aGUgc29mdHdhcmUgaW5jbHVkZSBZaXR1LCBNZWd2aWksIFNlbnNlVGltZSwgYW5kIENsb3VkV2Fsaywgd2hpY2ggYXJlIGVhY2ggdmFsdWVkIGF0IG1vcmUgdGhhbiAkMSBiaWxsaW9uLiBBbm90aGVyIGNvbXBhbnksIEhpa3Zpc2lvbiwgdGhhdCBzZWxscyBjYW1lcmFzIGFuZCBzb2Z0d2FyZSB0byBwcm9jZXNzIHRoZSBpbWFnZXMsIG9mZmVyZWQgYSBtaW5vcml0eSByZWNvZ25pdGlvbiBmdW5jdGlvbiwgYnV0IGJlZ2FuIHBoYXNpbmcgaXQgb3V0IGluIDIwMTgsIGFjY29yZGluZyB0byBvbmUgb2YgdGhlIHBlb3BsZSAuICBUaGUgY29tcGFuaWVzXHUyMDE5IHZhbHVhdGlvbnMgc29hcmVkIGluIDIwMTggYXMgQ2hpbmFcdTIwMTlzIE1pbmlzdHJ5IG9mIFB1YmxpYyBTZWN1cml0eSwgaXRzIHRvcCBwb2xpY2UgYWdlbmN5LCBzZXQgYXNpZGUgYmlsbGlvbnMgb2YgZG9sbGFycyB1bmRlciB0d28gZ292ZXJubWVudCBwbGFucywgY2FsbGVkIFNreW5ldCBhbmQgU2hhcnAgRXllcywgdG8gY29tcHV0ZXJpemUgc3VydmVpbGxhbmNlLCBwb2xpY2luZyBhbmQgaW50ZWxsaWdlbmNlIGNvbGxlY3Rpb24uICBJbiBhIHN0YXRlbWVudCwgYSBTZW5zZVRpbWUgc3Bva2Vzd29tYW4gc2FpZCBzaGUgY2hlY2tlZCB3aXRoIFx1MjAxY3JlbGV2YW50IHRlYW1zLFx1MjAxZCB3aG8gd2VyZSBub3QgYXdhcmUgaXRzIHRlY2hub2xvZ3kgd2FzIGJlaW5nIHVzZWQgdG8gcHJvZmlsZS4gTWVndmlpIHNhaWQgaW4gYSBzdGF0ZW1lbnQgaXQgd2FzIGZvY3VzZWQgb24gXHUyMDFjY29tbWVyY2lhbCBub3QgcG9saXRpY2FsIHNvbHV0aW9ucyxcdTIwMWQgYWRkaW5nLCBcdTIwMWN3ZSBhcmUgY29uY2VybmVkIGFib3V0IHRoZSB3ZWxsLWJlaW5nIGFuZCBzYWZldHkgb2YgaW5kaXZpZHVhbCBjaXRpemVucywgbm90IGFib3V0IG1vbml0b3JpbmcgZ3JvdXBzLlx1MjAxZCBDbG91ZFdhbGsgYW5kIFlpdHUgZGlkIG5vdCByZXNwb25kIHRvIHJlcXVlc3RzIGZvciBjb21tZW50LiAgQ2hpbmFcdTIwMTlzIE1pbmlzdHJ5IG9mIFB1YmxpYyBTZWN1cml0eSBkaWQgbm90IHJlc3BvbmQgdG8gYSBmYXhlZCByZXF1ZXN0IGZvciBjb21tZW50LiAgU2VsbGluZyBwcm9kdWN0cyB3aXRoIG5hbWVzIGxpa2UgRmlyZSBFeWUsIFNreSBFeWUgYW5kIERyYWdvbmZseSBFeWUgLCB0aGUgc3RhcnQtdXBzIHByb21pc2UgdG8gdXNlIEEuSS4gdG8gYW5hbHl6ZSBmb290YWdlIGZyb20gQ2hpbmFcdTIwMTlzIHN1cnZlaWxsYW5jZSBjYW1lcmFzLiBUaGUgdGVjaG5vbG9neSBpcyBub3QgbWF0dXJlIFx1MjAxNCBpbiAyMDE3IFlpdHUgcHJvbW90ZWQgYSBvbmUtaW4tdGhyZWUgc3VjY2VzcyByYXRlIHdoZW4gdGhlIHBvbGljZSByZXNwb25kZWQgdG8gaXRzIGFsYXJtcyBhdCBhIHRyYWluIHN0YXRpb24gXHUyMDE0IGFuZCBtYW55IG9mIENoaW5hXHUyMDE5cyBjYW1lcmFzIGFyZSBub3QgcG93ZXJmdWwgZW5vdWdoIGZvciBmYWNpYWwgcmVjb2duaXRpb24gc29mdHdhcmUgdG8gd29yayBlZmZlY3RpdmVseS4iLCAiY3JlYXRlZF9kYXRlX3RpbWUiOiAiMjAxOS0wNC0xNSAwMDoxMTo0MyIsICJ0aXRsZSI6ICJPbmUgTW9udGgsIDUwMCwwMDAgRmFjZSBTY2FuczogSG93IENoaW5hIElzIFVzaW5nIEEuSS4gdG8gUHJvZmlsZSBhIE1pbm9yaXR5In0KCg==